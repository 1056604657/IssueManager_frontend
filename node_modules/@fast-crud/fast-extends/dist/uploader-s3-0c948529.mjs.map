{"version":3,"file":"uploader-s3-0c948529.mjs","sources":["../../../node_modules/.pnpm/@smithy+types@2.0.2/node_modules/@smithy/types/dist-es/auth.js","../../../node_modules/.pnpm/@smithy+types@2.0.2/node_modules/@smithy/types/dist-es/endpoint.js","../../../node_modules/.pnpm/@smithy+types@2.0.2/node_modules/@smithy/types/dist-es/http.js","../../../node_modules/.pnpm/@smithy+types@2.0.2/node_modules/@smithy/types/dist-es/transfer.js","../../../node_modules/.pnpm/@smithy+protocol-http@2.0.1/node_modules/@smithy/protocol-http/dist-es/httpRequest.js","../../../node_modules/.pnpm/@smithy+protocol-http@2.0.1/node_modules/@smithy/protocol-http/dist-es/httpResponse.js","../../../node_modules/.pnpm/@aws-sdk+middleware-expect-continue@3.378.0/node_modules/@aws-sdk/middleware-expect-continue/dist-es/index.js","../../../node_modules/.pnpm/@aws-sdk+middleware-host-header@3.379.1/node_modules/@aws-sdk/middleware-host-header/dist-es/index.js","../../../node_modules/.pnpm/@aws-sdk+middleware-logger@3.378.0/node_modules/@aws-sdk/middleware-logger/dist-es/loggerMiddleware.js","../../../node_modules/.pnpm/@aws-sdk+middleware-recursion-detection@3.378.0/node_modules/@aws-sdk/middleware-recursion-detection/dist-es/index.js","../../../node_modules/.pnpm/@aws-sdk+middleware-sdk-s3@3.379.1/node_modules/@aws-sdk/middleware-sdk-s3/dist-es/check-content-length-header.js","../../../node_modules/.pnpm/@aws-sdk+middleware-sdk-s3@3.379.1/node_modules/@aws-sdk/middleware-sdk-s3/dist-es/s3Configuration.js","../../../node_modules/.pnpm/@aws-sdk+util-arn-parser@3.310.0/node_modules/@aws-sdk/util-arn-parser/dist-es/index.js","../../../node_modules/.pnpm/@aws-sdk+middleware-sdk-s3@3.379.1/node_modules/@aws-sdk/middleware-sdk-s3/dist-es/validate-bucket-name.js","../../../node_modules/.pnpm/@smithy+property-provider@2.0.1/node_modules/@smithy/property-provider/dist-es/memoize.js","../../../node_modules/.pnpm/tslib@1.14.1/node_modules/tslib/tslib.es6.js","../../../node_modules/.pnpm/@aws-sdk+util-utf8-browser@3.259.0/node_modules/@aws-sdk/util-utf8-browser/dist-es/pureJs.js","../../../node_modules/.pnpm/@aws-sdk+util-utf8-browser@3.259.0/node_modules/@aws-sdk/util-utf8-browser/dist-es/whatwgEncodingApi.js","../../../node_modules/.pnpm/@aws-sdk+util-utf8-browser@3.259.0/node_modules/@aws-sdk/util-utf8-browser/dist-es/index.js","../../../node_modules/.pnpm/@aws-crypto+util@3.0.0/node_modules/@aws-crypto/util/build/convertToBuffer.js","../../../node_modules/.pnpm/@aws-crypto+util@3.0.0/node_modules/@aws-crypto/util/build/isEmptyData.js","../../../node_modules/.pnpm/@aws-crypto+util@3.0.0/node_modules/@aws-crypto/util/build/numToUint8.js","../../../node_modules/.pnpm/@aws-crypto+util@3.0.0/node_modules/@aws-crypto/util/build/uint32ArrayFrom.js","../../../node_modules/.pnpm/@aws-crypto+util@3.0.0/node_modules/@aws-crypto/util/build/index.js","../../../node_modules/.pnpm/@aws-crypto+crc32@3.0.0/node_modules/@aws-crypto/crc32/build/aws_crc32.js","../../../node_modules/.pnpm/@aws-crypto+crc32@3.0.0/node_modules/@aws-crypto/crc32/build/index.js","../../../node_modules/.pnpm/@smithy+util-hex-encoding@2.0.0/node_modules/@smithy/util-hex-encoding/dist-es/index.js","../../../node_modules/.pnpm/@smithy+eventstream-codec@2.0.1/node_modules/@smithy/eventstream-codec/dist-es/Int64.js","../../../node_modules/.pnpm/@smithy+eventstream-codec@2.0.1/node_modules/@smithy/eventstream-codec/dist-es/HeaderMarshaller.js","../../../node_modules/.pnpm/@smithy+eventstream-codec@2.0.1/node_modules/@smithy/eventstream-codec/dist-es/splitMessage.js","../../../node_modules/.pnpm/@smithy+eventstream-codec@2.0.1/node_modules/@smithy/eventstream-codec/dist-es/EventStreamCodec.js","../../../node_modules/.pnpm/@smithy+eventstream-codec@2.0.1/node_modules/@smithy/eventstream-codec/dist-es/MessageDecoderStream.js","../../../node_modules/.pnpm/@smithy+eventstream-codec@2.0.1/node_modules/@smithy/eventstream-codec/dist-es/MessageEncoderStream.js","../../../node_modules/.pnpm/@smithy+eventstream-codec@2.0.1/node_modules/@smithy/eventstream-codec/dist-es/SmithyMessageDecoderStream.js","../../../node_modules/.pnpm/@smithy+eventstream-codec@2.0.1/node_modules/@smithy/eventstream-codec/dist-es/SmithyMessageEncoderStream.js","../../../node_modules/.pnpm/@smithy+util-middleware@2.0.0/node_modules/@smithy/util-middleware/dist-es/normalizeProvider.js","../../../node_modules/.pnpm/@smithy+util-utf8@2.0.0/node_modules/@smithy/util-utf8/dist-es/fromUtf8.browser.js","../../../node_modules/.pnpm/@smithy+util-utf8@2.0.0/node_modules/@smithy/util-utf8/dist-es/toUint8Array.js","../../../node_modules/.pnpm/@smithy+util-utf8@2.0.0/node_modules/@smithy/util-utf8/dist-es/toUtf8.browser.js","../../../node_modules/.pnpm/@smithy+signature-v4@2.0.1/node_modules/@smithy/signature-v4/dist-es/constants.js","../../../node_modules/.pnpm/@smithy+signature-v4@2.0.1/node_modules/@smithy/signature-v4/dist-es/credentialDerivation.js","../../../node_modules/.pnpm/@smithy+signature-v4@2.0.1/node_modules/@smithy/signature-v4/dist-es/getCanonicalHeaders.js","../../../node_modules/.pnpm/@smithy+util-uri-escape@2.0.0/node_modules/@smithy/util-uri-escape/dist-es/escape-uri.js","../../../node_modules/.pnpm/@smithy+signature-v4@2.0.1/node_modules/@smithy/signature-v4/dist-es/getCanonicalQuery.js","../../../node_modules/.pnpm/@smithy+is-array-buffer@2.0.0/node_modules/@smithy/is-array-buffer/dist-es/index.js","../../../node_modules/.pnpm/@smithy+signature-v4@2.0.1/node_modules/@smithy/signature-v4/dist-es/getPayloadHash.js","../../../node_modules/.pnpm/@smithy+signature-v4@2.0.1/node_modules/@smithy/signature-v4/dist-es/headerUtil.js","../../../node_modules/.pnpm/@smithy+signature-v4@2.0.1/node_modules/@smithy/signature-v4/dist-es/cloneRequest.js","../../../node_modules/.pnpm/@smithy+signature-v4@2.0.1/node_modules/@smithy/signature-v4/dist-es/moveHeadersToQuery.js","../../../node_modules/.pnpm/@smithy+signature-v4@2.0.1/node_modules/@smithy/signature-v4/dist-es/prepareRequest.js","../../../node_modules/.pnpm/@smithy+signature-v4@2.0.1/node_modules/@smithy/signature-v4/dist-es/utilDate.js","../../../node_modules/.pnpm/@smithy+signature-v4@2.0.1/node_modules/@smithy/signature-v4/dist-es/SignatureV4.js","../../../node_modules/.pnpm/@aws-sdk+middleware-signing@3.379.1/node_modules/@aws-sdk/middleware-signing/dist-es/awsAuthConfiguration.js","../../../node_modules/.pnpm/@aws-sdk+middleware-signing@3.379.1/node_modules/@aws-sdk/middleware-signing/dist-es/utils/getSkewCorrectedDate.js","../../../node_modules/.pnpm/@aws-sdk+middleware-signing@3.379.1/node_modules/@aws-sdk/middleware-signing/dist-es/utils/isClockSkewed.js","../../../node_modules/.pnpm/@aws-sdk+middleware-signing@3.379.1/node_modules/@aws-sdk/middleware-signing/dist-es/utils/getUpdatedSystemClockOffset.js","../../../node_modules/.pnpm/@aws-sdk+middleware-signing@3.379.1/node_modules/@aws-sdk/middleware-signing/dist-es/awsAuthMiddleware.js","../../../node_modules/.pnpm/@aws-sdk+middleware-user-agent@3.382.0/node_modules/@aws-sdk/middleware-user-agent/dist-es/configurations.js","../../../node_modules/.pnpm/@aws-sdk+util-endpoints@3.382.0/node_modules/@aws-sdk/util-endpoints/dist-es/lib/aws/partition.js","../../../node_modules/.pnpm/@aws-sdk+util-endpoints@3.382.0/node_modules/@aws-sdk/util-endpoints/dist-es/lib/isIpAddress.js","../../../node_modules/.pnpm/@aws-sdk+util-endpoints@3.382.0/node_modules/@aws-sdk/util-endpoints/dist-es/debug/debugId.js","../../../node_modules/.pnpm/@aws-sdk+util-endpoints@3.382.0/node_modules/@aws-sdk/util-endpoints/dist-es/debug/toDebugString.js","../../../node_modules/.pnpm/@aws-sdk+util-endpoints@3.382.0/node_modules/@aws-sdk/util-endpoints/dist-es/types/EndpointError.js","../../../node_modules/.pnpm/@aws-sdk+util-endpoints@3.382.0/node_modules/@aws-sdk/util-endpoints/dist-es/lib/isValidHostLabel.js","../../../node_modules/.pnpm/@aws-sdk+util-endpoints@3.382.0/node_modules/@aws-sdk/util-endpoints/dist-es/lib/aws/isVirtualHostableS3Bucket.js","../../../node_modules/.pnpm/@aws-sdk+util-endpoints@3.382.0/node_modules/@aws-sdk/util-endpoints/dist-es/lib/aws/parseArn.js","../../../node_modules/.pnpm/@aws-sdk+util-endpoints@3.382.0/node_modules/@aws-sdk/util-endpoints/dist-es/lib/booleanEquals.js","../../../node_modules/.pnpm/@aws-sdk+util-endpoints@3.382.0/node_modules/@aws-sdk/util-endpoints/dist-es/lib/getAttrPathList.js","../../../node_modules/.pnpm/@aws-sdk+util-endpoints@3.382.0/node_modules/@aws-sdk/util-endpoints/dist-es/lib/getAttr.js","../../../node_modules/.pnpm/@aws-sdk+util-endpoints@3.382.0/node_modules/@aws-sdk/util-endpoints/dist-es/lib/isSet.js","../../../node_modules/.pnpm/@aws-sdk+util-endpoints@3.382.0/node_modules/@aws-sdk/util-endpoints/dist-es/lib/not.js","../../../node_modules/.pnpm/@aws-sdk+types@3.378.0/node_modules/@aws-sdk/types/dist-es/dns.js","../../../node_modules/.pnpm/@aws-sdk+util-endpoints@3.382.0/node_modules/@aws-sdk/util-endpoints/dist-es/lib/parseURL.js","../../../node_modules/.pnpm/@aws-sdk+util-endpoints@3.382.0/node_modules/@aws-sdk/util-endpoints/dist-es/lib/stringEquals.js","../../../node_modules/.pnpm/@aws-sdk+util-endpoints@3.382.0/node_modules/@aws-sdk/util-endpoints/dist-es/lib/substring.js","../../../node_modules/.pnpm/@aws-sdk+util-endpoints@3.382.0/node_modules/@aws-sdk/util-endpoints/dist-es/lib/uriEncode.js","../../../node_modules/.pnpm/@aws-sdk+util-endpoints@3.382.0/node_modules/@aws-sdk/util-endpoints/dist-es/utils/evaluateTemplate.js","../../../node_modules/.pnpm/@aws-sdk+util-endpoints@3.382.0/node_modules/@aws-sdk/util-endpoints/dist-es/utils/getReferenceValue.js","../../../node_modules/.pnpm/@aws-sdk+util-endpoints@3.382.0/node_modules/@aws-sdk/util-endpoints/dist-es/utils/evaluateExpression.js","../../../node_modules/.pnpm/@aws-sdk+util-endpoints@3.382.0/node_modules/@aws-sdk/util-endpoints/dist-es/utils/callFunction.js","../../../node_modules/.pnpm/@aws-sdk+util-endpoints@3.382.0/node_modules/@aws-sdk/util-endpoints/dist-es/utils/evaluateCondition.js","../../../node_modules/.pnpm/@aws-sdk+util-endpoints@3.382.0/node_modules/@aws-sdk/util-endpoints/dist-es/utils/evaluateConditions.js","../../../node_modules/.pnpm/@aws-sdk+util-endpoints@3.382.0/node_modules/@aws-sdk/util-endpoints/dist-es/utils/getEndpointHeaders.js","../../../node_modules/.pnpm/@aws-sdk+util-endpoints@3.382.0/node_modules/@aws-sdk/util-endpoints/dist-es/utils/getEndpointProperty.js","../../../node_modules/.pnpm/@aws-sdk+util-endpoints@3.382.0/node_modules/@aws-sdk/util-endpoints/dist-es/utils/getEndpointProperties.js","../../../node_modules/.pnpm/@aws-sdk+util-endpoints@3.382.0/node_modules/@aws-sdk/util-endpoints/dist-es/utils/getEndpointUrl.js","../../../node_modules/.pnpm/@aws-sdk+util-endpoints@3.382.0/node_modules/@aws-sdk/util-endpoints/dist-es/utils/evaluateEndpointRule.js","../../../node_modules/.pnpm/@aws-sdk+util-endpoints@3.382.0/node_modules/@aws-sdk/util-endpoints/dist-es/utils/evaluateErrorRule.js","../../../node_modules/.pnpm/@aws-sdk+util-endpoints@3.382.0/node_modules/@aws-sdk/util-endpoints/dist-es/utils/evaluateTreeRule.js","../../../node_modules/.pnpm/@aws-sdk+util-endpoints@3.382.0/node_modules/@aws-sdk/util-endpoints/dist-es/utils/evaluateRules.js","../../../node_modules/.pnpm/@aws-sdk+util-endpoints@3.382.0/node_modules/@aws-sdk/util-endpoints/dist-es/resolveEndpoint.js","../../../node_modules/.pnpm/@aws-sdk+middleware-user-agent@3.382.0/node_modules/@aws-sdk/middleware-user-agent/dist-es/constants.js","../../../node_modules/.pnpm/@aws-sdk+middleware-user-agent@3.382.0/node_modules/@aws-sdk/middleware-user-agent/dist-es/user-agent-middleware.js","../../../node_modules/.pnpm/@smithy+util-config-provider@2.0.0/node_modules/@smithy/util-config-provider/dist-es/booleanSelector.js","../../../node_modules/.pnpm/@smithy+config-resolver@2.0.1/node_modules/@smithy/config-resolver/dist-es/endpointsConfig/NodeUseDualstackEndpointConfigOptions.js","../../../node_modules/.pnpm/@smithy+config-resolver@2.0.1/node_modules/@smithy/config-resolver/dist-es/endpointsConfig/NodeUseFipsEndpointConfigOptions.js","../../../node_modules/.pnpm/@smithy+config-resolver@2.0.1/node_modules/@smithy/config-resolver/dist-es/regionConfig/isFipsRegion.js","../../../node_modules/.pnpm/@smithy+config-resolver@2.0.1/node_modules/@smithy/config-resolver/dist-es/regionConfig/getRealRegion.js","../../../node_modules/.pnpm/@smithy+config-resolver@2.0.1/node_modules/@smithy/config-resolver/dist-es/regionConfig/resolveRegionConfig.js","../../../node_modules/.pnpm/@smithy+eventstream-serde-config-resolver@2.0.1/node_modules/@smithy/eventstream-serde-config-resolver/dist-es/EventStreamSerdeConfig.js","../../../node_modules/.pnpm/@smithy+middleware-content-length@2.0.1/node_modules/@smithy/middleware-content-length/dist-es/index.js","../../../node_modules/.pnpm/@smithy+middleware-endpoint@2.0.1/node_modules/@smithy/middleware-endpoint/dist-es/service-customizations/s3.js","../../../node_modules/.pnpm/@smithy+middleware-endpoint@2.0.1/node_modules/@smithy/middleware-endpoint/dist-es/adaptors/createConfigValueProvider.js","../../../node_modules/.pnpm/@smithy+middleware-endpoint@2.0.1/node_modules/@smithy/middleware-endpoint/dist-es/adaptors/getEndpointFromInstructions.js","../../../node_modules/.pnpm/@smithy+querystring-parser@2.0.1/node_modules/@smithy/querystring-parser/dist-es/index.js","../../../node_modules/.pnpm/@smithy+url-parser@2.0.1/node_modules/@smithy/url-parser/dist-es/index.js","../../../node_modules/.pnpm/@smithy+middleware-endpoint@2.0.1/node_modules/@smithy/middleware-endpoint/dist-es/adaptors/toEndpointV1.js","../../../node_modules/.pnpm/@smithy+middleware-endpoint@2.0.1/node_modules/@smithy/middleware-endpoint/dist-es/endpointMiddleware.js","../../../node_modules/.pnpm/@smithy+middleware-serde@2.0.1/node_modules/@smithy/middleware-serde/dist-es/deserializerMiddleware.js","../../../node_modules/.pnpm/@smithy+middleware-serde@2.0.1/node_modules/@smithy/middleware-serde/dist-es/serializerMiddleware.js","../../../node_modules/.pnpm/@smithy+middleware-serde@2.0.1/node_modules/@smithy/middleware-serde/dist-es/serdePlugin.js","../../../node_modules/.pnpm/@smithy+middleware-endpoint@2.0.1/node_modules/@smithy/middleware-endpoint/dist-es/getEndpointPlugin.js","../../../node_modules/.pnpm/@smithy+middleware-endpoint@2.0.1/node_modules/@smithy/middleware-endpoint/dist-es/resolveEndpointConfig.js","../../../node_modules/.pnpm/@smithy+util-retry@2.0.0/node_modules/@smithy/util-retry/dist-es/config.js","../../../node_modules/.pnpm/@smithy+service-error-classification@2.0.0/node_modules/@smithy/service-error-classification/dist-es/constants.js","../../../node_modules/.pnpm/@smithy+service-error-classification@2.0.0/node_modules/@smithy/service-error-classification/dist-es/index.js","../../../node_modules/.pnpm/@smithy+util-retry@2.0.0/node_modules/@smithy/util-retry/dist-es/DefaultRateLimiter.js","../../../node_modules/.pnpm/@smithy+util-retry@2.0.0/node_modules/@smithy/util-retry/dist-es/constants.js","../../../node_modules/.pnpm/@smithy+util-retry@2.0.0/node_modules/@smithy/util-retry/dist-es/defaultRetryBackoffStrategy.js","../../../node_modules/.pnpm/@smithy+util-retry@2.0.0/node_modules/@smithy/util-retry/dist-es/defaultRetryToken.js","../../../node_modules/.pnpm/@smithy+util-retry@2.0.0/node_modules/@smithy/util-retry/dist-es/StandardRetryStrategy.js","../../../node_modules/.pnpm/@smithy+util-retry@2.0.0/node_modules/@smithy/util-retry/dist-es/AdaptiveRetryStrategy.js","../../../node_modules/.pnpm/uuid@8.3.2/node_modules/uuid/dist/esm-browser/rng.js","../../../node_modules/.pnpm/uuid@8.3.2/node_modules/uuid/dist/esm-browser/regex.js","../../../node_modules/.pnpm/uuid@8.3.2/node_modules/uuid/dist/esm-browser/validate.js","../../../node_modules/.pnpm/uuid@8.3.2/node_modules/uuid/dist/esm-browser/stringify.js","../../../node_modules/.pnpm/uuid@8.3.2/node_modules/uuid/dist/esm-browser/v4.js","../../../node_modules/.pnpm/@smithy+middleware-retry@2.0.1/node_modules/@smithy/middleware-retry/dist-es/util.js","../../../node_modules/.pnpm/@smithy+middleware-retry@2.0.1/node_modules/@smithy/middleware-retry/dist-es/configurations.js","../../../node_modules/.pnpm/@smithy+middleware-retry@2.0.1/node_modules/@smithy/middleware-retry/dist-es/retryMiddleware.js","../../../node_modules/.pnpm/@smithy+smithy-client@2.0.1/node_modules/@smithy/smithy-client/dist-es/NoOpLogger.js","../../../node_modules/.pnpm/@smithy+middleware-stack@2.0.0/node_modules/@smithy/middleware-stack/dist-es/MiddlewareStack.js","../../../node_modules/.pnpm/@smithy+smithy-client@2.0.1/node_modules/@smithy/smithy-client/dist-es/client.js","../../../node_modules/.pnpm/@smithy+util-base64@2.0.0/node_modules/@smithy/util-base64/dist-es/constants.browser.js","../../../node_modules/.pnpm/@smithy+util-base64@2.0.0/node_modules/@smithy/util-base64/dist-es/fromBase64.browser.js","../../../node_modules/.pnpm/@smithy+util-base64@2.0.0/node_modules/@smithy/util-base64/dist-es/toBase64.browser.js","../../../node_modules/.pnpm/@smithy+util-stream@2.0.1/node_modules/@smithy/util-stream/dist-es/blob/transforms.js","../../../node_modules/.pnpm/@smithy+util-stream@2.0.1/node_modules/@smithy/util-stream/dist-es/blob/Uint8ArrayBlobAdapter.js","../../../node_modules/.pnpm/@smithy+util-stream@2.0.1/node_modules/@smithy/util-stream/dist-es/getAwsChunkedEncodingStream.browser.js","../../../node_modules/.pnpm/@smithy+querystring-builder@2.0.1/node_modules/@smithy/querystring-builder/dist-es/index.js","../../../node_modules/.pnpm/@smithy+fetch-http-handler@2.0.1/node_modules/@smithy/fetch-http-handler/dist-es/request-timeout.js","../../../node_modules/.pnpm/@smithy+fetch-http-handler@2.0.1/node_modules/@smithy/fetch-http-handler/dist-es/fetch-http-handler.js","../../../node_modules/.pnpm/@smithy+fetch-http-handler@2.0.1/node_modules/@smithy/fetch-http-handler/dist-es/stream-collector.js","../../../node_modules/.pnpm/@smithy+util-stream@2.0.1/node_modules/@smithy/util-stream/dist-es/sdk-stream-mixin.browser.js","../../../node_modules/.pnpm/@smithy+smithy-client@2.0.1/node_modules/@smithy/smithy-client/dist-es/collect-stream-body.js","../../../node_modules/.pnpm/@smithy+smithy-client@2.0.1/node_modules/@smithy/smithy-client/dist-es/command.js","../../../node_modules/.pnpm/@smithy+smithy-client@2.0.1/node_modules/@smithy/smithy-client/dist-es/constants.js","../../../node_modules/.pnpm/@smithy+smithy-client@2.0.1/node_modules/@smithy/smithy-client/dist-es/parse-utils.js","../../../node_modules/.pnpm/@smithy+smithy-client@2.0.1/node_modules/@smithy/smithy-client/dist-es/date-utils.js","../../../node_modules/.pnpm/@smithy+smithy-client@2.0.1/node_modules/@smithy/smithy-client/dist-es/exceptions.js","../../../node_modules/.pnpm/@smithy+smithy-client@2.0.1/node_modules/@smithy/smithy-client/dist-es/default-error-handler.js","../../../node_modules/.pnpm/@smithy+smithy-client@2.0.1/node_modules/@smithy/smithy-client/dist-es/defaults-mode.js","../../../node_modules/.pnpm/@smithy+smithy-client@2.0.1/node_modules/@smithy/smithy-client/dist-es/extended-encode-uri-component.js","../../../node_modules/.pnpm/@smithy+smithy-client@2.0.1/node_modules/@smithy/smithy-client/dist-es/get-value-from-text-node.js","../../../node_modules/.pnpm/@smithy+smithy-client@2.0.1/node_modules/@smithy/smithy-client/dist-es/lazy-json.js","../../../node_modules/.pnpm/@smithy+smithy-client@2.0.1/node_modules/@smithy/smithy-client/dist-es/object-mapping.js","../../../node_modules/.pnpm/@smithy+smithy-client@2.0.1/node_modules/@smithy/smithy-client/dist-es/resolve-path.js","../../../node_modules/.pnpm/@aws-sdk+client-s3@3.383.0_s6zn5ldwfou3iimuva7s4tkuaa/node_modules/@aws-sdk/client-s3/dist-es/endpoint/EndpointParameters.js","../../../node_modules/.pnpm/@aws-crypto+sha1-browser@3.0.0/node_modules/@aws-crypto/sha1-browser/build/isEmptyData.js","../../../node_modules/.pnpm/@aws-crypto+sha1-browser@3.0.0/node_modules/@aws-crypto/sha1-browser/build/constants.js","../../../node_modules/.pnpm/@aws-sdk+util-locate-window@3.310.0/node_modules/@aws-sdk/util-locate-window/dist-es/index.js","../../../node_modules/.pnpm/@aws-crypto+sha1-browser@3.0.0/node_modules/@aws-crypto/sha1-browser/build/ie11Sha1.js","../../../node_modules/.pnpm/@aws-crypto+sha1-browser@3.0.0/node_modules/@aws-crypto/sha1-browser/build/webCryptoSha1.js","../../../node_modules/.pnpm/@aws-crypto+supports-web-crypto@3.0.0/node_modules/@aws-crypto/supports-web-crypto/build/supportsWebCrypto.js","../../../node_modules/.pnpm/@aws-crypto+supports-web-crypto@3.0.0/node_modules/@aws-crypto/supports-web-crypto/build/index.js","../../../node_modules/.pnpm/@aws-crypto+ie11-detection@3.0.0/node_modules/@aws-crypto/ie11-detection/build/CryptoOperation.js","../../../node_modules/.pnpm/@aws-crypto+ie11-detection@3.0.0/node_modules/@aws-crypto/ie11-detection/build/Key.js","../../../node_modules/.pnpm/@aws-crypto+ie11-detection@3.0.0/node_modules/@aws-crypto/ie11-detection/build/KeyOperation.js","../../../node_modules/.pnpm/@aws-crypto+ie11-detection@3.0.0/node_modules/@aws-crypto/ie11-detection/build/MsSubtleCrypto.js","../../../node_modules/.pnpm/@aws-crypto+ie11-detection@3.0.0/node_modules/@aws-crypto/ie11-detection/build/MsWindow.js","../../../node_modules/.pnpm/@aws-crypto+ie11-detection@3.0.0/node_modules/@aws-crypto/ie11-detection/build/index.js","../../../node_modules/.pnpm/@aws-crypto+sha1-browser@3.0.0/node_modules/@aws-crypto/sha1-browser/build/crossPlatformSha1.js","../../../node_modules/.pnpm/@aws-crypto+sha1-browser@3.0.0/node_modules/@aws-crypto/sha1-browser/build/index.js","../../../node_modules/.pnpm/@aws-crypto+sha256-browser@3.0.0/node_modules/@aws-crypto/sha256-browser/build/isEmptyData.js","../../../node_modules/.pnpm/@aws-crypto+sha256-browser@3.0.0/node_modules/@aws-crypto/sha256-browser/build/constants.js","../../../node_modules/.pnpm/@aws-crypto+sha256-browser@3.0.0/node_modules/@aws-crypto/sha256-browser/build/ie11Sha256.js","../../../node_modules/.pnpm/@aws-crypto+sha256-browser@3.0.0/node_modules/@aws-crypto/sha256-browser/build/webCryptoSha256.js","../../../node_modules/.pnpm/@aws-crypto+sha256-js@3.0.0/node_modules/@aws-crypto/sha256-js/build/constants.js","../../../node_modules/.pnpm/@aws-crypto+sha256-js@3.0.0/node_modules/@aws-crypto/sha256-js/build/RawSha256.js","../../../node_modules/.pnpm/@aws-crypto+sha256-js@3.0.0/node_modules/@aws-crypto/sha256-js/build/jsSha256.js","../../../node_modules/.pnpm/@aws-crypto+sha256-js@3.0.0/node_modules/@aws-crypto/sha256-js/build/index.js","../../../node_modules/.pnpm/@aws-crypto+sha256-browser@3.0.0/node_modules/@aws-crypto/sha256-browser/build/crossPlatformSha256.js","../../../node_modules/.pnpm/@aws-crypto+sha256-browser@3.0.0/node_modules/@aws-crypto/sha256-browser/build/index.js","../../../node_modules/.pnpm/bowser@2.11.0/node_modules/bowser/src/constants.js","../../../node_modules/.pnpm/bowser@2.11.0/node_modules/bowser/src/utils.js","../../../node_modules/.pnpm/bowser@2.11.0/node_modules/bowser/src/parser-browsers.js","../../../node_modules/.pnpm/bowser@2.11.0/node_modules/bowser/src/parser-os.js","../../../node_modules/.pnpm/bowser@2.11.0/node_modules/bowser/src/parser-platforms.js","../../../node_modules/.pnpm/bowser@2.11.0/node_modules/bowser/src/parser-engines.js","../../../node_modules/.pnpm/bowser@2.11.0/node_modules/bowser/src/parser.js","../../../node_modules/.pnpm/bowser@2.11.0/node_modules/bowser/src/bowser.js","../../../node_modules/.pnpm/@aws-sdk+util-user-agent-browser@3.378.0/node_modules/@aws-sdk/util-user-agent-browser/dist-es/index.js","../../../node_modules/.pnpm/@smithy+eventstream-serde-universal@2.0.1/node_modules/@smithy/eventstream-serde-universal/dist-es/getChunkedStream.js","../../../node_modules/.pnpm/@smithy+eventstream-serde-universal@2.0.1/node_modules/@smithy/eventstream-serde-universal/dist-es/getUnmarshalledStream.js","../../../node_modules/.pnpm/@smithy+eventstream-serde-universal@2.0.1/node_modules/@smithy/eventstream-serde-universal/dist-es/EventStreamMarshaller.js","../../../node_modules/.pnpm/@smithy+eventstream-serde-browser@2.0.1/node_modules/@smithy/eventstream-serde-browser/dist-es/utils.js","../../../node_modules/.pnpm/@smithy+eventstream-serde-browser@2.0.1/node_modules/@smithy/eventstream-serde-browser/dist-es/EventStreamMarshaller.js","../../../node_modules/.pnpm/@smithy+eventstream-serde-browser@2.0.1/node_modules/@smithy/eventstream-serde-browser/dist-es/provider.js","../../../node_modules/.pnpm/@smithy+chunked-blob-reader@2.0.0/node_modules/@smithy/chunked-blob-reader/dist-es/index.js","../../../node_modules/.pnpm/@smithy+hash-blob-browser@2.0.1/node_modules/@smithy/hash-blob-browser/dist-es/index.js","../../../node_modules/.pnpm/@smithy+invalid-dependency@2.0.1/node_modules/@smithy/invalid-dependency/dist-es/invalidProvider.js","../../../node_modules/.pnpm/@smithy+md5-js@2.0.1/node_modules/@smithy/md5-js/dist-es/constants.js","../../../node_modules/.pnpm/@smithy+md5-js@2.0.1/node_modules/@smithy/md5-js/dist-es/index.js","../../../node_modules/.pnpm/@smithy+util-body-length-browser@2.0.0/node_modules/@smithy/util-body-length-browser/dist-es/calculateBodyLength.js","../../../node_modules/.pnpm/@aws-sdk+signature-v4-multi-region@3.378.0_s6zn5ldwfou3iimuva7s4tkuaa/node_modules/@aws-sdk/signature-v4-multi-region/dist-es/SignatureV4MultiRegion.js","../../../node_modules/.pnpm/@aws-sdk+client-s3@3.383.0_s6zn5ldwfou3iimuva7s4tkuaa/node_modules/@aws-sdk/client-s3/dist-es/endpoint/ruleset.js","../../../node_modules/.pnpm/@aws-sdk+client-s3@3.383.0_s6zn5ldwfou3iimuva7s4tkuaa/node_modules/@aws-sdk/client-s3/dist-es/endpoint/endpointResolver.js","../../../node_modules/.pnpm/@aws-sdk+client-s3@3.383.0_s6zn5ldwfou3iimuva7s4tkuaa/node_modules/@aws-sdk/client-s3/dist-es/runtimeConfig.shared.js","../../../node_modules/.pnpm/@smithy+util-defaults-mode-browser@2.0.1/node_modules/@smithy/util-defaults-mode-browser/dist-es/constants.js","../../../node_modules/.pnpm/@smithy+util-defaults-mode-browser@2.0.1/node_modules/@smithy/util-defaults-mode-browser/dist-es/resolveDefaultsModeConfig.js","../../../node_modules/.pnpm/@aws-sdk+client-s3@3.383.0_s6zn5ldwfou3iimuva7s4tkuaa/node_modules/@aws-sdk/client-s3/dist-es/runtimeConfig.browser.js","../../../node_modules/.pnpm/@aws-sdk+client-s3@3.383.0_s6zn5ldwfou3iimuva7s4tkuaa/node_modules/@aws-sdk/client-s3/dist-es/S3Client.js","../../../node_modules/.pnpm/fast-xml-parser@4.2.5/node_modules/fast-xml-parser/src/util.js","../../../node_modules/.pnpm/fast-xml-parser@4.2.5/node_modules/fast-xml-parser/src/validator.js","../../../node_modules/.pnpm/fast-xml-parser@4.2.5/node_modules/fast-xml-parser/src/xmlparser/OptionsBuilder.js","../../../node_modules/.pnpm/fast-xml-parser@4.2.5/node_modules/fast-xml-parser/src/xmlparser/xmlNode.js","../../../node_modules/.pnpm/fast-xml-parser@4.2.5/node_modules/fast-xml-parser/src/xmlparser/DocTypeReader.js","../../../node_modules/.pnpm/strnum@1.0.5/node_modules/strnum/strnum.js","../../../node_modules/.pnpm/fast-xml-parser@4.2.5/node_modules/fast-xml-parser/src/xmlparser/OrderedObjParser.js","../../../node_modules/.pnpm/fast-xml-parser@4.2.5/node_modules/fast-xml-parser/src/xmlparser/node2json.js","../../../node_modules/.pnpm/fast-xml-parser@4.2.5/node_modules/fast-xml-parser/src/xmlparser/XMLParser.js","../../../node_modules/.pnpm/fast-xml-parser@4.2.5/node_modules/fast-xml-parser/src/xmlbuilder/orderedJs2Xml.js","../../../node_modules/.pnpm/fast-xml-parser@4.2.5/node_modules/fast-xml-parser/src/xmlbuilder/json2xml.js","../../../node_modules/.pnpm/fast-xml-parser@4.2.5/node_modules/fast-xml-parser/src/fxp.js","../../../node_modules/.pnpm/@aws-sdk+client-s3@3.383.0_s6zn5ldwfou3iimuva7s4tkuaa/node_modules/@aws-sdk/client-s3/dist-es/models/S3ServiceException.js","../../../node_modules/.pnpm/@aws-sdk+client-s3@3.383.0_s6zn5ldwfou3iimuva7s4tkuaa/node_modules/@aws-sdk/client-s3/dist-es/models/models_0.js","../../../node_modules/.pnpm/@aws-sdk+client-s3@3.383.0_s6zn5ldwfou3iimuva7s4tkuaa/node_modules/@aws-sdk/client-s3/dist-es/protocols/Aws_restXml.js","../../../node_modules/.pnpm/@aws-sdk+middleware-ssec@3.378.0/node_modules/@aws-sdk/middleware-ssec/dist-es/index.js","../../../node_modules/.pnpm/@aws-sdk+middleware-flexible-checksums@3.383.0/node_modules/@aws-sdk/middleware-flexible-checksums/dist-es/constants.js","../../../node_modules/.pnpm/@aws-sdk+middleware-flexible-checksums@3.383.0/node_modules/@aws-sdk/middleware-flexible-checksums/dist-es/types.js","../../../node_modules/.pnpm/@aws-sdk+middleware-flexible-checksums@3.383.0/node_modules/@aws-sdk/middleware-flexible-checksums/dist-es/getChecksumAlgorithmForRequest.js","../../../node_modules/.pnpm/@aws-sdk+middleware-flexible-checksums@3.383.0/node_modules/@aws-sdk/middleware-flexible-checksums/dist-es/getChecksumLocationName.js","../../../node_modules/.pnpm/@aws-sdk+middleware-flexible-checksums@3.383.0/node_modules/@aws-sdk/middleware-flexible-checksums/dist-es/hasHeader.js","../../../node_modules/.pnpm/@aws-sdk+middleware-flexible-checksums@3.383.0/node_modules/@aws-sdk/middleware-flexible-checksums/dist-es/isStreaming.js","../../../node_modules/.pnpm/@aws-crypto+crc32c@3.0.0/node_modules/@aws-crypto/crc32c/build/aws_crc32c.js","../../../node_modules/.pnpm/@aws-crypto+crc32c@3.0.0/node_modules/@aws-crypto/crc32c/build/index.js","../../../node_modules/.pnpm/@aws-sdk+middleware-flexible-checksums@3.383.0/node_modules/@aws-sdk/middleware-flexible-checksums/dist-es/selectChecksumAlgorithmFunction.js","../../../node_modules/.pnpm/@aws-sdk+middleware-flexible-checksums@3.383.0/node_modules/@aws-sdk/middleware-flexible-checksums/dist-es/stringHasher.js","../../../node_modules/.pnpm/@aws-sdk+middleware-flexible-checksums@3.383.0/node_modules/@aws-sdk/middleware-flexible-checksums/dist-es/getChecksum.js","../../../node_modules/.pnpm/@aws-sdk+middleware-flexible-checksums@3.383.0/node_modules/@aws-sdk/middleware-flexible-checksums/dist-es/getChecksumAlgorithmListForResponse.js","../../../node_modules/.pnpm/@aws-sdk+middleware-flexible-checksums@3.383.0/node_modules/@aws-sdk/middleware-flexible-checksums/dist-es/validateChecksumFromResponse.js","../../../node_modules/.pnpm/@aws-sdk+middleware-flexible-checksums@3.383.0/node_modules/@aws-sdk/middleware-flexible-checksums/dist-es/flexibleChecksumsMiddleware.js","../../../node_modules/.pnpm/@aws-sdk+middleware-flexible-checksums@3.383.0/node_modules/@aws-sdk/middleware-flexible-checksums/dist-es/getFlexibleChecksumsPlugin.js","../../../node_modules/.pnpm/@aws-sdk+client-s3@3.383.0_s6zn5ldwfou3iimuva7s4tkuaa/node_modules/@aws-sdk/client-s3/dist-es/commands/PutObjectCommand.js","../../src/uploader/components/utils/axios.ts","../../src/uploader/components/libs/uploader-s3.ts"],"sourcesContent":["export var HttpAuthLocation;\n(function (HttpAuthLocation) {\n    HttpAuthLocation[\"HEADER\"] = \"header\";\n    HttpAuthLocation[\"QUERY\"] = \"query\";\n})(HttpAuthLocation || (HttpAuthLocation = {}));\n","export var EndpointURLScheme;\n(function (EndpointURLScheme) {\n    EndpointURLScheme[\"HTTP\"] = \"http\";\n    EndpointURLScheme[\"HTTPS\"] = \"https\";\n})(EndpointURLScheme || (EndpointURLScheme = {}));\n","export var FieldPosition;\n(function (FieldPosition) {\n    FieldPosition[FieldPosition[\"HEADER\"] = 0] = \"HEADER\";\n    FieldPosition[FieldPosition[\"TRAILER\"] = 1] = \"TRAILER\";\n})(FieldPosition || (FieldPosition = {}));\n","export var RequestHandlerProtocol;\n(function (RequestHandlerProtocol) {\n    RequestHandlerProtocol[\"HTTP_0_9\"] = \"http/0.9\";\n    RequestHandlerProtocol[\"HTTP_1_0\"] = \"http/1.0\";\n    RequestHandlerProtocol[\"TDS_8_0\"] = \"tds/8.0\";\n})(RequestHandlerProtocol || (RequestHandlerProtocol = {}));\n","export class HttpRequest {\n    constructor(options) {\n        this.method = options.method || \"GET\";\n        this.hostname = options.hostname || \"localhost\";\n        this.port = options.port;\n        this.query = options.query || {};\n        this.headers = options.headers || {};\n        this.body = options.body;\n        this.protocol = options.protocol\n            ? options.protocol.slice(-1) !== \":\"\n                ? `${options.protocol}:`\n                : options.protocol\n            : \"https:\";\n        this.path = options.path ? (options.path.charAt(0) !== \"/\" ? `/${options.path}` : options.path) : \"/\";\n        this.username = options.username;\n        this.password = options.password;\n        this.fragment = options.fragment;\n    }\n    static isInstance(request) {\n        if (!request)\n            return false;\n        const req = request;\n        return (\"method\" in req &&\n            \"protocol\" in req &&\n            \"hostname\" in req &&\n            \"path\" in req &&\n            typeof req[\"query\"] === \"object\" &&\n            typeof req[\"headers\"] === \"object\");\n    }\n    clone() {\n        const cloned = new HttpRequest({\n            ...this,\n            headers: { ...this.headers },\n        });\n        if (cloned.query)\n            cloned.query = cloneQuery(cloned.query);\n        return cloned;\n    }\n}\nfunction cloneQuery(query) {\n    return Object.keys(query).reduce((carry, paramName) => {\n        const param = query[paramName];\n        return {\n            ...carry,\n            [paramName]: Array.isArray(param) ? [...param] : param,\n        };\n    }, {});\n}\n","export class HttpResponse {\n    constructor(options) {\n        this.statusCode = options.statusCode;\n        this.reason = options.reason;\n        this.headers = options.headers || {};\n        this.body = options.body;\n    }\n    static isInstance(response) {\n        if (!response)\n            return false;\n        const resp = response;\n        return typeof resp.statusCode === \"number\" && typeof resp.headers === \"object\";\n    }\n}\n","import { HttpRequest } from \"@smithy/protocol-http\";\nexport function addExpectContinueMiddleware(options) {\n    return (next) => async (args) => {\n        const { request } = args;\n        if (HttpRequest.isInstance(request) && request.body && options.runtime === \"node\") {\n            request.headers = {\n                ...request.headers,\n                Expect: \"100-continue\",\n            };\n        }\n        return next({\n            ...args,\n            request,\n        });\n    };\n}\nexport const addExpectContinueMiddlewareOptions = {\n    step: \"build\",\n    tags: [\"SET_EXPECT_HEADER\", \"EXPECT_HEADER\"],\n    name: \"addExpectContinueMiddleware\",\n    override: true,\n};\nexport const getAddExpectContinuePlugin = (options) => ({\n    applyToStack: (clientStack) => {\n        clientStack.add(addExpectContinueMiddleware(options), addExpectContinueMiddlewareOptions);\n    },\n});\n","import { HttpRequest } from \"@smithy/protocol-http\";\nexport function resolveHostHeaderConfig(input) {\n    return input;\n}\nexport const hostHeaderMiddleware = (options) => (next) => async (args) => {\n    if (!HttpRequest.isInstance(args.request))\n        return next(args);\n    const { request } = args;\n    const { handlerProtocol = \"\" } = options.requestHandler.metadata || {};\n    if (handlerProtocol.indexOf(\"h2\") >= 0 && !request.headers[\":authority\"]) {\n        delete request.headers[\"host\"];\n        request.headers[\":authority\"] = \"\";\n    }\n    else if (!request.headers[\"host\"]) {\n        let host = request.hostname;\n        if (request.port != null)\n            host += `:${request.port}`;\n        request.headers[\"host\"] = host;\n    }\n    return next(args);\n};\nexport const hostHeaderMiddlewareOptions = {\n    name: \"hostHeaderMiddleware\",\n    step: \"build\",\n    priority: \"low\",\n    tags: [\"HOST\"],\n    override: true,\n};\nexport const getHostHeaderPlugin = (options) => ({\n    applyToStack: (clientStack) => {\n        clientStack.add(hostHeaderMiddleware(options), hostHeaderMiddlewareOptions);\n    },\n});\n","export const loggerMiddleware = () => (next, context) => async (args) => {\n    try {\n        const response = await next(args);\n        const { clientName, commandName, logger, dynamoDbDocumentClientOptions = {} } = context;\n        const { overrideInputFilterSensitiveLog, overrideOutputFilterSensitiveLog } = dynamoDbDocumentClientOptions;\n        const inputFilterSensitiveLog = overrideInputFilterSensitiveLog ?? context.inputFilterSensitiveLog;\n        const outputFilterSensitiveLog = overrideOutputFilterSensitiveLog ?? context.outputFilterSensitiveLog;\n        const { $metadata, ...outputWithoutMetadata } = response.output;\n        logger?.info?.({\n            clientName,\n            commandName,\n            input: inputFilterSensitiveLog(args.input),\n            output: outputFilterSensitiveLog(outputWithoutMetadata),\n            metadata: $metadata,\n        });\n        return response;\n    }\n    catch (error) {\n        const { clientName, commandName, logger, dynamoDbDocumentClientOptions = {} } = context;\n        const { overrideInputFilterSensitiveLog } = dynamoDbDocumentClientOptions;\n        const inputFilterSensitiveLog = overrideInputFilterSensitiveLog ?? context.inputFilterSensitiveLog;\n        logger?.error?.({\n            clientName,\n            commandName,\n            input: inputFilterSensitiveLog(args.input),\n            error,\n            metadata: error.$metadata,\n        });\n        throw error;\n    }\n};\nexport const loggerMiddlewareOptions = {\n    name: \"loggerMiddleware\",\n    tags: [\"LOGGER\"],\n    step: \"initialize\",\n    override: true,\n};\nexport const getLoggerPlugin = (options) => ({\n    applyToStack: (clientStack) => {\n        clientStack.add(loggerMiddleware(), loggerMiddlewareOptions);\n    },\n});\n","import { HttpRequest } from \"@smithy/protocol-http\";\nconst TRACE_ID_HEADER_NAME = \"X-Amzn-Trace-Id\";\nconst ENV_LAMBDA_FUNCTION_NAME = \"AWS_LAMBDA_FUNCTION_NAME\";\nconst ENV_TRACE_ID = \"_X_AMZN_TRACE_ID\";\nexport const recursionDetectionMiddleware = (options) => (next) => async (args) => {\n    const { request } = args;\n    if (!HttpRequest.isInstance(request) ||\n        options.runtime !== \"node\" ||\n        request.headers.hasOwnProperty(TRACE_ID_HEADER_NAME)) {\n        return next(args);\n    }\n    const functionName = process.env[ENV_LAMBDA_FUNCTION_NAME];\n    const traceId = process.env[ENV_TRACE_ID];\n    const nonEmptyString = (str) => typeof str === \"string\" && str.length > 0;\n    if (nonEmptyString(functionName) && nonEmptyString(traceId)) {\n        request.headers[TRACE_ID_HEADER_NAME] = traceId;\n    }\n    return next({\n        ...args,\n        request,\n    });\n};\nexport const addRecursionDetectionMiddlewareOptions = {\n    step: \"build\",\n    tags: [\"RECURSION_DETECTION\"],\n    name: \"recursionDetectionMiddleware\",\n    override: true,\n    priority: \"low\",\n};\nexport const getRecursionDetectionPlugin = (options) => ({\n    applyToStack: (clientStack) => {\n        clientStack.add(recursionDetectionMiddleware(options), addRecursionDetectionMiddlewareOptions);\n    },\n});\n","import { HttpRequest } from \"@smithy/protocol-http\";\nconst CONTENT_LENGTH_HEADER = \"content-length\";\nexport function checkContentLengthHeader() {\n    return (next, context) => async (args) => {\n        const { request } = args;\n        if (HttpRequest.isInstance(request)) {\n            if (!request.headers[CONTENT_LENGTH_HEADER]) {\n                const message = `Are you using a Stream of unknown length as the Body of a PutObject request? Consider using Upload instead from @aws-sdk/lib-storage.`;\n                if (typeof context?.logger?.warn === \"function\") {\n                    context.logger.warn(message);\n                }\n                else {\n                    console.warn(message);\n                }\n            }\n        }\n        return next({ ...args });\n    };\n}\nexport const checkContentLengthHeaderMiddlewareOptions = {\n    step: \"finalizeRequest\",\n    tags: [\"CHECK_CONTENT_LENGTH_HEADER\"],\n    name: \"getCheckContentLengthHeaderPlugin\",\n    override: true,\n};\nexport const getCheckContentLengthHeaderPlugin = (unused) => ({\n    applyToStack: (clientStack) => {\n        clientStack.add(checkContentLengthHeader(), checkContentLengthHeaderMiddlewareOptions);\n    },\n});\n","export const resolveS3Config = (input) => ({\n    ...input,\n    forcePathStyle: input.forcePathStyle ?? false,\n    useAccelerateEndpoint: input.useAccelerateEndpoint ?? false,\n    disableMultiregionAccessPoints: input.disableMultiregionAccessPoints ?? false,\n});\n","export const validate = (str) => typeof str === \"string\" && str.indexOf(\"arn:\") === 0 && str.split(\":\").length >= 6;\nexport const parse = (arn) => {\n    const segments = arn.split(\":\");\n    if (segments.length < 6 || segments[0] !== \"arn\")\n        throw new Error(\"Malformed ARN\");\n    const [, partition, service, region, accountId, ...resource] = segments;\n    return {\n        partition,\n        service,\n        region,\n        accountId,\n        resource: resource.join(\":\"),\n    };\n};\nexport const build = (arnObject) => {\n    const { partition = \"aws\", service, region, accountId, resource } = arnObject;\n    if ([service, region, accountId, resource].some((segment) => typeof segment !== \"string\")) {\n        throw new Error(\"Input ARN object is invalid\");\n    }\n    return `arn:${partition}:${service}:${region}:${accountId}:${resource}`;\n};\n","import { validate as validateArn } from \"@aws-sdk/util-arn-parser\";\nexport function validateBucketNameMiddleware() {\n    return (next) => async (args) => {\n        const { input: { Bucket }, } = args;\n        if (typeof Bucket === \"string\" && !validateArn(Bucket) && Bucket.indexOf(\"/\") >= 0) {\n            const err = new Error(`Bucket name shouldn't contain '/', received '${Bucket}'`);\n            err.name = \"InvalidBucketName\";\n            throw err;\n        }\n        return next({ ...args });\n    };\n}\nexport const validateBucketNameMiddlewareOptions = {\n    step: \"initialize\",\n    tags: [\"VALIDATE_BUCKET_NAME\"],\n    name: \"validateBucketNameMiddleware\",\n    override: true,\n};\nexport const getValidateBucketNamePlugin = (unused) => ({\n    applyToStack: (clientStack) => {\n        clientStack.add(validateBucketNameMiddleware(), validateBucketNameMiddlewareOptions);\n    },\n});\n","export const memoize = (provider, isExpired, requiresRefresh) => {\n    let resolved;\n    let pending;\n    let hasResult;\n    let isConstant = false;\n    const coalesceProvider = async () => {\n        if (!pending) {\n            pending = provider();\n        }\n        try {\n            resolved = await pending;\n            hasResult = true;\n            isConstant = false;\n        }\n        finally {\n            pending = undefined;\n        }\n        return resolved;\n    };\n    if (isExpired === undefined) {\n        return async (options) => {\n            if (!hasResult || options?.forceRefresh) {\n                resolved = await coalesceProvider();\n            }\n            return resolved;\n        };\n    }\n    return async (options) => {\n        if (!hasResult || options?.forceRefresh) {\n            resolved = await coalesceProvider();\n        }\n        if (isConstant) {\n            return resolved;\n        }\n        if (requiresRefresh && !requiresRefresh(resolved)) {\n            isConstant = true;\n            return resolved;\n        }\n        if (isExpired(resolved)) {\n            await coalesceProvider();\n            return resolved;\n        }\n        return resolved;\n    };\n};\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","export const fromUtf8 = (input) => {\n    const bytes = [];\n    for (let i = 0, len = input.length; i < len; i++) {\n        const value = input.charCodeAt(i);\n        if (value < 0x80) {\n            bytes.push(value);\n        }\n        else if (value < 0x800) {\n            bytes.push((value >> 6) | 0b11000000, (value & 0b111111) | 0b10000000);\n        }\n        else if (i + 1 < input.length && (value & 0xfc00) === 0xd800 && (input.charCodeAt(i + 1) & 0xfc00) === 0xdc00) {\n            const surrogatePair = 0x10000 + ((value & 0b1111111111) << 10) + (input.charCodeAt(++i) & 0b1111111111);\n            bytes.push((surrogatePair >> 18) | 0b11110000, ((surrogatePair >> 12) & 0b111111) | 0b10000000, ((surrogatePair >> 6) & 0b111111) | 0b10000000, (surrogatePair & 0b111111) | 0b10000000);\n        }\n        else {\n            bytes.push((value >> 12) | 0b11100000, ((value >> 6) & 0b111111) | 0b10000000, (value & 0b111111) | 0b10000000);\n        }\n    }\n    return Uint8Array.from(bytes);\n};\nexport const toUtf8 = (input) => {\n    let decoded = \"\";\n    for (let i = 0, len = input.length; i < len; i++) {\n        const byte = input[i];\n        if (byte < 0x80) {\n            decoded += String.fromCharCode(byte);\n        }\n        else if (0b11000000 <= byte && byte < 0b11100000) {\n            const nextByte = input[++i];\n            decoded += String.fromCharCode(((byte & 0b11111) << 6) | (nextByte & 0b111111));\n        }\n        else if (0b11110000 <= byte && byte < 0b101101101) {\n            const surrogatePair = [byte, input[++i], input[++i], input[++i]];\n            const encoded = \"%\" + surrogatePair.map((byteValue) => byteValue.toString(16)).join(\"%\");\n            decoded += decodeURIComponent(encoded);\n        }\n        else {\n            decoded += String.fromCharCode(((byte & 0b1111) << 12) | ((input[++i] & 0b111111) << 6) | (input[++i] & 0b111111));\n        }\n    }\n    return decoded;\n};\n","export function fromUtf8(input) {\n    return new TextEncoder().encode(input);\n}\nexport function toUtf8(input) {\n    return new TextDecoder(\"utf-8\").decode(input);\n}\n","import { fromUtf8 as jsFromUtf8, toUtf8 as jsToUtf8 } from \"./pureJs\";\nimport { fromUtf8 as textEncoderFromUtf8, toUtf8 as textEncoderToUtf8 } from \"./whatwgEncodingApi\";\nexport const fromUtf8 = (input) => typeof TextEncoder === \"function\" ? textEncoderFromUtf8(input) : jsFromUtf8(input);\nexport const toUtf8 = (input) => typeof TextDecoder === \"function\" ? textEncoderToUtf8(input) : jsToUtf8(input);\n","\"use strict\";\n// Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.convertToBuffer = void 0;\nvar util_utf8_browser_1 = require(\"@aws-sdk/util-utf8-browser\");\n// Quick polyfill\nvar fromUtf8 = typeof Buffer !== \"undefined\" && Buffer.from\n    ? function (input) { return Buffer.from(input, \"utf8\"); }\n    : util_utf8_browser_1.fromUtf8;\nfunction convertToBuffer(data) {\n    // Already a Uint8, do nothing\n    if (data instanceof Uint8Array)\n        return data;\n    if (typeof data === \"string\") {\n        return fromUtf8(data);\n    }\n    if (ArrayBuffer.isView(data)) {\n        return new Uint8Array(data.buffer, data.byteOffset, data.byteLength / Uint8Array.BYTES_PER_ELEMENT);\n    }\n    return new Uint8Array(data);\n}\nexports.convertToBuffer = convertToBuffer;\n//# sourceMappingURL=convertToBuffer.js.map","\"use strict\";\n// Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isEmptyData = void 0;\nfunction isEmptyData(data) {\n    if (typeof data === \"string\") {\n        return data.length === 0;\n    }\n    return data.byteLength === 0;\n}\nexports.isEmptyData = isEmptyData;\n//# sourceMappingURL=isEmptyData.js.map","\"use strict\";\n// Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.numToUint8 = void 0;\nfunction numToUint8(num) {\n    return new Uint8Array([\n        (num & 0xff000000) >> 24,\n        (num & 0x00ff0000) >> 16,\n        (num & 0x0000ff00) >> 8,\n        num & 0x000000ff,\n    ]);\n}\nexports.numToUint8 = numToUint8;\n//# sourceMappingURL=numToUint8.js.map","\"use strict\";\n// Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.uint32ArrayFrom = void 0;\n// IE 11 does not support Array.from, so we do it manually\nfunction uint32ArrayFrom(a_lookUpTable) {\n    if (!Uint32Array.from) {\n        var return_array = new Uint32Array(a_lookUpTable.length);\n        var a_index = 0;\n        while (a_index < a_lookUpTable.length) {\n            return_array[a_index] = a_lookUpTable[a_index];\n            a_index += 1;\n        }\n        return return_array;\n    }\n    return Uint32Array.from(a_lookUpTable);\n}\nexports.uint32ArrayFrom = uint32ArrayFrom;\n//# sourceMappingURL=uint32ArrayFrom.js.map","\"use strict\";\n// Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.uint32ArrayFrom = exports.numToUint8 = exports.isEmptyData = exports.convertToBuffer = void 0;\nvar convertToBuffer_1 = require(\"./convertToBuffer\");\nObject.defineProperty(exports, \"convertToBuffer\", { enumerable: true, get: function () { return convertToBuffer_1.convertToBuffer; } });\nvar isEmptyData_1 = require(\"./isEmptyData\");\nObject.defineProperty(exports, \"isEmptyData\", { enumerable: true, get: function () { return isEmptyData_1.isEmptyData; } });\nvar numToUint8_1 = require(\"./numToUint8\");\nObject.defineProperty(exports, \"numToUint8\", { enumerable: true, get: function () { return numToUint8_1.numToUint8; } });\nvar uint32ArrayFrom_1 = require(\"./uint32ArrayFrom\");\nObject.defineProperty(exports, \"uint32ArrayFrom\", { enumerable: true, get: function () { return uint32ArrayFrom_1.uint32ArrayFrom; } });\n//# sourceMappingURL=index.js.map","\"use strict\";\n// Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AwsCrc32 = void 0;\nvar tslib_1 = require(\"tslib\");\nvar util_1 = require(\"@aws-crypto/util\");\nvar index_1 = require(\"./index\");\nvar AwsCrc32 = /** @class */ (function () {\n    function AwsCrc32() {\n        this.crc32 = new index_1.Crc32();\n    }\n    AwsCrc32.prototype.update = function (toHash) {\n        if ((0, util_1.isEmptyData)(toHash))\n            return;\n        this.crc32.update((0, util_1.convertToBuffer)(toHash));\n    };\n    AwsCrc32.prototype.digest = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, (0, util_1.numToUint8)(this.crc32.digest())];\n            });\n        });\n    };\n    AwsCrc32.prototype.reset = function () {\n        this.crc32 = new index_1.Crc32();\n    };\n    return AwsCrc32;\n}());\nexports.AwsCrc32 = AwsCrc32;\n//# sourceMappingURL=aws_crc32.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AwsCrc32 = exports.Crc32 = exports.crc32 = void 0;\nvar tslib_1 = require(\"tslib\");\nvar util_1 = require(\"@aws-crypto/util\");\nfunction crc32(data) {\n    return new Crc32().update(data).digest();\n}\nexports.crc32 = crc32;\nvar Crc32 = /** @class */ (function () {\n    function Crc32() {\n        this.checksum = 0xffffffff;\n    }\n    Crc32.prototype.update = function (data) {\n        var e_1, _a;\n        try {\n            for (var data_1 = tslib_1.__values(data), data_1_1 = data_1.next(); !data_1_1.done; data_1_1 = data_1.next()) {\n                var byte = data_1_1.value;\n                this.checksum =\n                    (this.checksum >>> 8) ^ lookupTable[(this.checksum ^ byte) & 0xff];\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (data_1_1 && !data_1_1.done && (_a = data_1.return)) _a.call(data_1);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return this;\n    };\n    Crc32.prototype.digest = function () {\n        return (this.checksum ^ 0xffffffff) >>> 0;\n    };\n    return Crc32;\n}());\nexports.Crc32 = Crc32;\n// prettier-ignore\nvar a_lookUpTable = [\n    0x00000000, 0x77073096, 0xEE0E612C, 0x990951BA,\n    0x076DC419, 0x706AF48F, 0xE963A535, 0x9E6495A3,\n    0x0EDB8832, 0x79DCB8A4, 0xE0D5E91E, 0x97D2D988,\n    0x09B64C2B, 0x7EB17CBD, 0xE7B82D07, 0x90BF1D91,\n    0x1DB71064, 0x6AB020F2, 0xF3B97148, 0x84BE41DE,\n    0x1ADAD47D, 0x6DDDE4EB, 0xF4D4B551, 0x83D385C7,\n    0x136C9856, 0x646BA8C0, 0xFD62F97A, 0x8A65C9EC,\n    0x14015C4F, 0x63066CD9, 0xFA0F3D63, 0x8D080DF5,\n    0x3B6E20C8, 0x4C69105E, 0xD56041E4, 0xA2677172,\n    0x3C03E4D1, 0x4B04D447, 0xD20D85FD, 0xA50AB56B,\n    0x35B5A8FA, 0x42B2986C, 0xDBBBC9D6, 0xACBCF940,\n    0x32D86CE3, 0x45DF5C75, 0xDCD60DCF, 0xABD13D59,\n    0x26D930AC, 0x51DE003A, 0xC8D75180, 0xBFD06116,\n    0x21B4F4B5, 0x56B3C423, 0xCFBA9599, 0xB8BDA50F,\n    0x2802B89E, 0x5F058808, 0xC60CD9B2, 0xB10BE924,\n    0x2F6F7C87, 0x58684C11, 0xC1611DAB, 0xB6662D3D,\n    0x76DC4190, 0x01DB7106, 0x98D220BC, 0xEFD5102A,\n    0x71B18589, 0x06B6B51F, 0x9FBFE4A5, 0xE8B8D433,\n    0x7807C9A2, 0x0F00F934, 0x9609A88E, 0xE10E9818,\n    0x7F6A0DBB, 0x086D3D2D, 0x91646C97, 0xE6635C01,\n    0x6B6B51F4, 0x1C6C6162, 0x856530D8, 0xF262004E,\n    0x6C0695ED, 0x1B01A57B, 0x8208F4C1, 0xF50FC457,\n    0x65B0D9C6, 0x12B7E950, 0x8BBEB8EA, 0xFCB9887C,\n    0x62DD1DDF, 0x15DA2D49, 0x8CD37CF3, 0xFBD44C65,\n    0x4DB26158, 0x3AB551CE, 0xA3BC0074, 0xD4BB30E2,\n    0x4ADFA541, 0x3DD895D7, 0xA4D1C46D, 0xD3D6F4FB,\n    0x4369E96A, 0x346ED9FC, 0xAD678846, 0xDA60B8D0,\n    0x44042D73, 0x33031DE5, 0xAA0A4C5F, 0xDD0D7CC9,\n    0x5005713C, 0x270241AA, 0xBE0B1010, 0xC90C2086,\n    0x5768B525, 0x206F85B3, 0xB966D409, 0xCE61E49F,\n    0x5EDEF90E, 0x29D9C998, 0xB0D09822, 0xC7D7A8B4,\n    0x59B33D17, 0x2EB40D81, 0xB7BD5C3B, 0xC0BA6CAD,\n    0xEDB88320, 0x9ABFB3B6, 0x03B6E20C, 0x74B1D29A,\n    0xEAD54739, 0x9DD277AF, 0x04DB2615, 0x73DC1683,\n    0xE3630B12, 0x94643B84, 0x0D6D6A3E, 0x7A6A5AA8,\n    0xE40ECF0B, 0x9309FF9D, 0x0A00AE27, 0x7D079EB1,\n    0xF00F9344, 0x8708A3D2, 0x1E01F268, 0x6906C2FE,\n    0xF762575D, 0x806567CB, 0x196C3671, 0x6E6B06E7,\n    0xFED41B76, 0x89D32BE0, 0x10DA7A5A, 0x67DD4ACC,\n    0xF9B9DF6F, 0x8EBEEFF9, 0x17B7BE43, 0x60B08ED5,\n    0xD6D6A3E8, 0xA1D1937E, 0x38D8C2C4, 0x4FDFF252,\n    0xD1BB67F1, 0xA6BC5767, 0x3FB506DD, 0x48B2364B,\n    0xD80D2BDA, 0xAF0A1B4C, 0x36034AF6, 0x41047A60,\n    0xDF60EFC3, 0xA867DF55, 0x316E8EEF, 0x4669BE79,\n    0xCB61B38C, 0xBC66831A, 0x256FD2A0, 0x5268E236,\n    0xCC0C7795, 0xBB0B4703, 0x220216B9, 0x5505262F,\n    0xC5BA3BBE, 0xB2BD0B28, 0x2BB45A92, 0x5CB36A04,\n    0xC2D7FFA7, 0xB5D0CF31, 0x2CD99E8B, 0x5BDEAE1D,\n    0x9B64C2B0, 0xEC63F226, 0x756AA39C, 0x026D930A,\n    0x9C0906A9, 0xEB0E363F, 0x72076785, 0x05005713,\n    0x95BF4A82, 0xE2B87A14, 0x7BB12BAE, 0x0CB61B38,\n    0x92D28E9B, 0xE5D5BE0D, 0x7CDCEFB7, 0x0BDBDF21,\n    0x86D3D2D4, 0xF1D4E242, 0x68DDB3F8, 0x1FDA836E,\n    0x81BE16CD, 0xF6B9265B, 0x6FB077E1, 0x18B74777,\n    0x88085AE6, 0xFF0F6A70, 0x66063BCA, 0x11010B5C,\n    0x8F659EFF, 0xF862AE69, 0x616BFFD3, 0x166CCF45,\n    0xA00AE278, 0xD70DD2EE, 0x4E048354, 0x3903B3C2,\n    0xA7672661, 0xD06016F7, 0x4969474D, 0x3E6E77DB,\n    0xAED16A4A, 0xD9D65ADC, 0x40DF0B66, 0x37D83BF0,\n    0xA9BCAE53, 0xDEBB9EC5, 0x47B2CF7F, 0x30B5FFE9,\n    0xBDBDF21C, 0xCABAC28A, 0x53B39330, 0x24B4A3A6,\n    0xBAD03605, 0xCDD70693, 0x54DE5729, 0x23D967BF,\n    0xB3667A2E, 0xC4614AB8, 0x5D681B02, 0x2A6F2B94,\n    0xB40BBE37, 0xC30C8EA1, 0x5A05DF1B, 0x2D02EF8D,\n];\nvar lookupTable = (0, util_1.uint32ArrayFrom)(a_lookUpTable);\nvar aws_crc32_1 = require(\"./aws_crc32\");\nObject.defineProperty(exports, \"AwsCrc32\", { enumerable: true, get: function () { return aws_crc32_1.AwsCrc32; } });\n//# sourceMappingURL=index.js.map","const SHORT_TO_HEX = {};\nconst HEX_TO_SHORT = {};\nfor (let i = 0; i < 256; i++) {\n    let encodedByte = i.toString(16).toLowerCase();\n    if (encodedByte.length === 1) {\n        encodedByte = `0${encodedByte}`;\n    }\n    SHORT_TO_HEX[i] = encodedByte;\n    HEX_TO_SHORT[encodedByte] = i;\n}\nexport function fromHex(encoded) {\n    if (encoded.length % 2 !== 0) {\n        throw new Error(\"Hex encoded strings must have an even number length\");\n    }\n    const out = new Uint8Array(encoded.length / 2);\n    for (let i = 0; i < encoded.length; i += 2) {\n        const encodedByte = encoded.slice(i, i + 2).toLowerCase();\n        if (encodedByte in HEX_TO_SHORT) {\n            out[i / 2] = HEX_TO_SHORT[encodedByte];\n        }\n        else {\n            throw new Error(`Cannot decode unrecognized sequence ${encodedByte} as hexadecimal`);\n        }\n    }\n    return out;\n}\nexport function toHex(bytes) {\n    let out = \"\";\n    for (let i = 0; i < bytes.byteLength; i++) {\n        out += SHORT_TO_HEX[bytes[i]];\n    }\n    return out;\n}\n","import { toHex } from \"@smithy/util-hex-encoding\";\nexport class Int64 {\n    constructor(bytes) {\n        this.bytes = bytes;\n        if (bytes.byteLength !== 8) {\n            throw new Error(\"Int64 buffers must be exactly 8 bytes\");\n        }\n    }\n    static fromNumber(number) {\n        if (number > 9223372036854776000 || number < -9223372036854776000) {\n            throw new Error(`${number} is too large (or, if negative, too small) to represent as an Int64`);\n        }\n        const bytes = new Uint8Array(8);\n        for (let i = 7, remaining = Math.abs(Math.round(number)); i > -1 && remaining > 0; i--, remaining /= 256) {\n            bytes[i] = remaining;\n        }\n        if (number < 0) {\n            negate(bytes);\n        }\n        return new Int64(bytes);\n    }\n    valueOf() {\n        const bytes = this.bytes.slice(0);\n        const negative = bytes[0] & 0b10000000;\n        if (negative) {\n            negate(bytes);\n        }\n        return parseInt(toHex(bytes), 16) * (negative ? -1 : 1);\n    }\n    toString() {\n        return String(this.valueOf());\n    }\n}\nfunction negate(bytes) {\n    for (let i = 0; i < 8; i++) {\n        bytes[i] ^= 0xff;\n    }\n    for (let i = 7; i > -1; i--) {\n        bytes[i]++;\n        if (bytes[i] !== 0)\n            break;\n    }\n}\n","import { fromHex, toHex } from \"@smithy/util-hex-encoding\";\nimport { Int64 } from \"./Int64\";\nexport class HeaderMarshaller {\n    constructor(toUtf8, fromUtf8) {\n        this.toUtf8 = toUtf8;\n        this.fromUtf8 = fromUtf8;\n    }\n    format(headers) {\n        const chunks = [];\n        for (const headerName of Object.keys(headers)) {\n            const bytes = this.fromUtf8(headerName);\n            chunks.push(Uint8Array.from([bytes.byteLength]), bytes, this.formatHeaderValue(headers[headerName]));\n        }\n        const out = new Uint8Array(chunks.reduce((carry, bytes) => carry + bytes.byteLength, 0));\n        let position = 0;\n        for (const chunk of chunks) {\n            out.set(chunk, position);\n            position += chunk.byteLength;\n        }\n        return out;\n    }\n    formatHeaderValue(header) {\n        switch (header.type) {\n            case \"boolean\":\n                return Uint8Array.from([header.value ? 0 : 1]);\n            case \"byte\":\n                return Uint8Array.from([2, header.value]);\n            case \"short\":\n                const shortView = new DataView(new ArrayBuffer(3));\n                shortView.setUint8(0, 3);\n                shortView.setInt16(1, header.value, false);\n                return new Uint8Array(shortView.buffer);\n            case \"integer\":\n                const intView = new DataView(new ArrayBuffer(5));\n                intView.setUint8(0, 4);\n                intView.setInt32(1, header.value, false);\n                return new Uint8Array(intView.buffer);\n            case \"long\":\n                const longBytes = new Uint8Array(9);\n                longBytes[0] = 5;\n                longBytes.set(header.value.bytes, 1);\n                return longBytes;\n            case \"binary\":\n                const binView = new DataView(new ArrayBuffer(3 + header.value.byteLength));\n                binView.setUint8(0, 6);\n                binView.setUint16(1, header.value.byteLength, false);\n                const binBytes = new Uint8Array(binView.buffer);\n                binBytes.set(header.value, 3);\n                return binBytes;\n            case \"string\":\n                const utf8Bytes = this.fromUtf8(header.value);\n                const strView = new DataView(new ArrayBuffer(3 + utf8Bytes.byteLength));\n                strView.setUint8(0, 7);\n                strView.setUint16(1, utf8Bytes.byteLength, false);\n                const strBytes = new Uint8Array(strView.buffer);\n                strBytes.set(utf8Bytes, 3);\n                return strBytes;\n            case \"timestamp\":\n                const tsBytes = new Uint8Array(9);\n                tsBytes[0] = 8;\n                tsBytes.set(Int64.fromNumber(header.value.valueOf()).bytes, 1);\n                return tsBytes;\n            case \"uuid\":\n                if (!UUID_PATTERN.test(header.value)) {\n                    throw new Error(`Invalid UUID received: ${header.value}`);\n                }\n                const uuidBytes = new Uint8Array(17);\n                uuidBytes[0] = 9;\n                uuidBytes.set(fromHex(header.value.replace(/\\-/g, \"\")), 1);\n                return uuidBytes;\n        }\n    }\n    parse(headers) {\n        const out = {};\n        let position = 0;\n        while (position < headers.byteLength) {\n            const nameLength = headers.getUint8(position++);\n            const name = this.toUtf8(new Uint8Array(headers.buffer, headers.byteOffset + position, nameLength));\n            position += nameLength;\n            switch (headers.getUint8(position++)) {\n                case 0:\n                    out[name] = {\n                        type: BOOLEAN_TAG,\n                        value: true,\n                    };\n                    break;\n                case 1:\n                    out[name] = {\n                        type: BOOLEAN_TAG,\n                        value: false,\n                    };\n                    break;\n                case 2:\n                    out[name] = {\n                        type: BYTE_TAG,\n                        value: headers.getInt8(position++),\n                    };\n                    break;\n                case 3:\n                    out[name] = {\n                        type: SHORT_TAG,\n                        value: headers.getInt16(position, false),\n                    };\n                    position += 2;\n                    break;\n                case 4:\n                    out[name] = {\n                        type: INT_TAG,\n                        value: headers.getInt32(position, false),\n                    };\n                    position += 4;\n                    break;\n                case 5:\n                    out[name] = {\n                        type: LONG_TAG,\n                        value: new Int64(new Uint8Array(headers.buffer, headers.byteOffset + position, 8)),\n                    };\n                    position += 8;\n                    break;\n                case 6:\n                    const binaryLength = headers.getUint16(position, false);\n                    position += 2;\n                    out[name] = {\n                        type: BINARY_TAG,\n                        value: new Uint8Array(headers.buffer, headers.byteOffset + position, binaryLength),\n                    };\n                    position += binaryLength;\n                    break;\n                case 7:\n                    const stringLength = headers.getUint16(position, false);\n                    position += 2;\n                    out[name] = {\n                        type: STRING_TAG,\n                        value: this.toUtf8(new Uint8Array(headers.buffer, headers.byteOffset + position, stringLength)),\n                    };\n                    position += stringLength;\n                    break;\n                case 8:\n                    out[name] = {\n                        type: TIMESTAMP_TAG,\n                        value: new Date(new Int64(new Uint8Array(headers.buffer, headers.byteOffset + position, 8)).valueOf()),\n                    };\n                    position += 8;\n                    break;\n                case 9:\n                    const uuidBytes = new Uint8Array(headers.buffer, headers.byteOffset + position, 16);\n                    position += 16;\n                    out[name] = {\n                        type: UUID_TAG,\n                        value: `${toHex(uuidBytes.subarray(0, 4))}-${toHex(uuidBytes.subarray(4, 6))}-${toHex(uuidBytes.subarray(6, 8))}-${toHex(uuidBytes.subarray(8, 10))}-${toHex(uuidBytes.subarray(10))}`,\n                    };\n                    break;\n                default:\n                    throw new Error(`Unrecognized header type tag`);\n            }\n        }\n        return out;\n    }\n}\nvar HEADER_VALUE_TYPE;\n(function (HEADER_VALUE_TYPE) {\n    HEADER_VALUE_TYPE[HEADER_VALUE_TYPE[\"boolTrue\"] = 0] = \"boolTrue\";\n    HEADER_VALUE_TYPE[HEADER_VALUE_TYPE[\"boolFalse\"] = 1] = \"boolFalse\";\n    HEADER_VALUE_TYPE[HEADER_VALUE_TYPE[\"byte\"] = 2] = \"byte\";\n    HEADER_VALUE_TYPE[HEADER_VALUE_TYPE[\"short\"] = 3] = \"short\";\n    HEADER_VALUE_TYPE[HEADER_VALUE_TYPE[\"integer\"] = 4] = \"integer\";\n    HEADER_VALUE_TYPE[HEADER_VALUE_TYPE[\"long\"] = 5] = \"long\";\n    HEADER_VALUE_TYPE[HEADER_VALUE_TYPE[\"byteArray\"] = 6] = \"byteArray\";\n    HEADER_VALUE_TYPE[HEADER_VALUE_TYPE[\"string\"] = 7] = \"string\";\n    HEADER_VALUE_TYPE[HEADER_VALUE_TYPE[\"timestamp\"] = 8] = \"timestamp\";\n    HEADER_VALUE_TYPE[HEADER_VALUE_TYPE[\"uuid\"] = 9] = \"uuid\";\n})(HEADER_VALUE_TYPE || (HEADER_VALUE_TYPE = {}));\nconst BOOLEAN_TAG = \"boolean\";\nconst BYTE_TAG = \"byte\";\nconst SHORT_TAG = \"short\";\nconst INT_TAG = \"integer\";\nconst LONG_TAG = \"long\";\nconst BINARY_TAG = \"binary\";\nconst STRING_TAG = \"string\";\nconst TIMESTAMP_TAG = \"timestamp\";\nconst UUID_TAG = \"uuid\";\nconst UUID_PATTERN = /^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$/;\n","import { Crc32 } from \"@aws-crypto/crc32\";\nconst PRELUDE_MEMBER_LENGTH = 4;\nconst PRELUDE_LENGTH = PRELUDE_MEMBER_LENGTH * 2;\nconst CHECKSUM_LENGTH = 4;\nconst MINIMUM_MESSAGE_LENGTH = PRELUDE_LENGTH + CHECKSUM_LENGTH * 2;\nexport function splitMessage({ byteLength, byteOffset, buffer }) {\n    if (byteLength < MINIMUM_MESSAGE_LENGTH) {\n        throw new Error(\"Provided message too short to accommodate event stream message overhead\");\n    }\n    const view = new DataView(buffer, byteOffset, byteLength);\n    const messageLength = view.getUint32(0, false);\n    if (byteLength !== messageLength) {\n        throw new Error(\"Reported message length does not match received message length\");\n    }\n    const headerLength = view.getUint32(PRELUDE_MEMBER_LENGTH, false);\n    const expectedPreludeChecksum = view.getUint32(PRELUDE_LENGTH, false);\n    const expectedMessageChecksum = view.getUint32(byteLength - CHECKSUM_LENGTH, false);\n    const checksummer = new Crc32().update(new Uint8Array(buffer, byteOffset, PRELUDE_LENGTH));\n    if (expectedPreludeChecksum !== checksummer.digest()) {\n        throw new Error(`The prelude checksum specified in the message (${expectedPreludeChecksum}) does not match the calculated CRC32 checksum (${checksummer.digest()})`);\n    }\n    checksummer.update(new Uint8Array(buffer, byteOffset + PRELUDE_LENGTH, byteLength - (PRELUDE_LENGTH + CHECKSUM_LENGTH)));\n    if (expectedMessageChecksum !== checksummer.digest()) {\n        throw new Error(`The message checksum (${checksummer.digest()}) did not match the expected value of ${expectedMessageChecksum}`);\n    }\n    return {\n        headers: new DataView(buffer, byteOffset + PRELUDE_LENGTH + CHECKSUM_LENGTH, headerLength),\n        body: new Uint8Array(buffer, byteOffset + PRELUDE_LENGTH + CHECKSUM_LENGTH + headerLength, messageLength - headerLength - (PRELUDE_LENGTH + CHECKSUM_LENGTH + CHECKSUM_LENGTH)),\n    };\n}\n","import { Crc32 } from \"@aws-crypto/crc32\";\nimport { HeaderMarshaller } from \"./HeaderMarshaller\";\nimport { splitMessage } from \"./splitMessage\";\nexport class EventStreamCodec {\n    constructor(toUtf8, fromUtf8) {\n        this.headerMarshaller = new HeaderMarshaller(toUtf8, fromUtf8);\n        this.messageBuffer = [];\n        this.isEndOfStream = false;\n    }\n    feed(message) {\n        this.messageBuffer.push(this.decode(message));\n    }\n    endOfStream() {\n        this.isEndOfStream = true;\n    }\n    getMessage() {\n        const message = this.messageBuffer.pop();\n        const isEndOfStream = this.isEndOfStream;\n        return {\n            getMessage() {\n                return message;\n            },\n            isEndOfStream() {\n                return isEndOfStream;\n            },\n        };\n    }\n    getAvailableMessages() {\n        const messages = this.messageBuffer;\n        this.messageBuffer = [];\n        const isEndOfStream = this.isEndOfStream;\n        return {\n            getMessages() {\n                return messages;\n            },\n            isEndOfStream() {\n                return isEndOfStream;\n            },\n        };\n    }\n    encode({ headers: rawHeaders, body }) {\n        const headers = this.headerMarshaller.format(rawHeaders);\n        const length = headers.byteLength + body.byteLength + 16;\n        const out = new Uint8Array(length);\n        const view = new DataView(out.buffer, out.byteOffset, out.byteLength);\n        const checksum = new Crc32();\n        view.setUint32(0, length, false);\n        view.setUint32(4, headers.byteLength, false);\n        view.setUint32(8, checksum.update(out.subarray(0, 8)).digest(), false);\n        out.set(headers, 12);\n        out.set(body, headers.byteLength + 12);\n        view.setUint32(length - 4, checksum.update(out.subarray(8, length - 4)).digest(), false);\n        return out;\n    }\n    decode(message) {\n        const { headers, body } = splitMessage(message);\n        return { headers: this.headerMarshaller.parse(headers), body };\n    }\n    formatHeaders(rawHeaders) {\n        return this.headerMarshaller.format(rawHeaders);\n    }\n}\n","export class MessageDecoderStream {\n    constructor(options) {\n        this.options = options;\n    }\n    [Symbol.asyncIterator]() {\n        return this.asyncIterator();\n    }\n    async *asyncIterator() {\n        for await (const bytes of this.options.inputStream) {\n            const decoded = this.options.decoder.decode(bytes);\n            yield decoded;\n        }\n    }\n}\n","export class MessageEncoderStream {\n    constructor(options) {\n        this.options = options;\n    }\n    [Symbol.asyncIterator]() {\n        return this.asyncIterator();\n    }\n    async *asyncIterator() {\n        for await (const msg of this.options.messageStream) {\n            const encoded = this.options.encoder.encode(msg);\n            yield encoded;\n        }\n        if (this.options.includeEndFrame) {\n            yield new Uint8Array(0);\n        }\n    }\n}\n","export class SmithyMessageDecoderStream {\n    constructor(options) {\n        this.options = options;\n    }\n    [Symbol.asyncIterator]() {\n        return this.asyncIterator();\n    }\n    async *asyncIterator() {\n        for await (const message of this.options.messageStream) {\n            const deserialized = await this.options.deserializer(message);\n            if (deserialized === undefined)\n                continue;\n            yield deserialized;\n        }\n    }\n}\n","export class SmithyMessageEncoderStream {\n    constructor(options) {\n        this.options = options;\n    }\n    [Symbol.asyncIterator]() {\n        return this.asyncIterator();\n    }\n    async *asyncIterator() {\n        for await (const chunk of this.options.inputStream) {\n            const payloadBuf = this.options.serializer(chunk);\n            yield payloadBuf;\n        }\n    }\n}\n","export const normalizeProvider = (input) => {\n    if (typeof input === \"function\")\n        return input;\n    const promisified = Promise.resolve(input);\n    return () => promisified;\n};\n","export const fromUtf8 = (input) => new TextEncoder().encode(input);\n","import { fromUtf8 } from \"./fromUtf8\";\nexport const toUint8Array = (data) => {\n    if (typeof data === \"string\") {\n        return fromUtf8(data);\n    }\n    if (ArrayBuffer.isView(data)) {\n        return new Uint8Array(data.buffer, data.byteOffset, data.byteLength / Uint8Array.BYTES_PER_ELEMENT);\n    }\n    return new Uint8Array(data);\n};\n","export const toUtf8 = (input) => new TextDecoder(\"utf-8\").decode(input);\n","export const ALGORITHM_QUERY_PARAM = \"X-Amz-Algorithm\";\nexport const CREDENTIAL_QUERY_PARAM = \"X-Amz-Credential\";\nexport const AMZ_DATE_QUERY_PARAM = \"X-Amz-Date\";\nexport const SIGNED_HEADERS_QUERY_PARAM = \"X-Amz-SignedHeaders\";\nexport const EXPIRES_QUERY_PARAM = \"X-Amz-Expires\";\nexport const SIGNATURE_QUERY_PARAM = \"X-Amz-Signature\";\nexport const TOKEN_QUERY_PARAM = \"X-Amz-Security-Token\";\nexport const REGION_SET_PARAM = \"X-Amz-Region-Set\";\nexport const AUTH_HEADER = \"authorization\";\nexport const AMZ_DATE_HEADER = AMZ_DATE_QUERY_PARAM.toLowerCase();\nexport const DATE_HEADER = \"date\";\nexport const GENERATED_HEADERS = [AUTH_HEADER, AMZ_DATE_HEADER, DATE_HEADER];\nexport const SIGNATURE_HEADER = SIGNATURE_QUERY_PARAM.toLowerCase();\nexport const SHA256_HEADER = \"x-amz-content-sha256\";\nexport const TOKEN_HEADER = TOKEN_QUERY_PARAM.toLowerCase();\nexport const HOST_HEADER = \"host\";\nexport const ALWAYS_UNSIGNABLE_HEADERS = {\n    authorization: true,\n    \"cache-control\": true,\n    connection: true,\n    expect: true,\n    from: true,\n    \"keep-alive\": true,\n    \"max-forwards\": true,\n    pragma: true,\n    referer: true,\n    te: true,\n    trailer: true,\n    \"transfer-encoding\": true,\n    upgrade: true,\n    \"user-agent\": true,\n    \"x-amzn-trace-id\": true,\n};\nexport const PROXY_HEADER_PATTERN = /^proxy-/;\nexport const SEC_HEADER_PATTERN = /^sec-/;\nexport const UNSIGNABLE_PATTERNS = [/^proxy-/i, /^sec-/i];\nexport const ALGORITHM_IDENTIFIER = \"AWS4-HMAC-SHA256\";\nexport const ALGORITHM_IDENTIFIER_V4A = \"AWS4-ECDSA-P256-SHA256\";\nexport const EVENT_ALGORITHM_IDENTIFIER = \"AWS4-HMAC-SHA256-PAYLOAD\";\nexport const UNSIGNED_PAYLOAD = \"UNSIGNED-PAYLOAD\";\nexport const MAX_CACHE_SIZE = 50;\nexport const KEY_TYPE_IDENTIFIER = \"aws4_request\";\nexport const MAX_PRESIGNED_TTL = 60 * 60 * 24 * 7;\n","import { toHex } from \"@smithy/util-hex-encoding\";\nimport { toUint8Array } from \"@smithy/util-utf8\";\nimport { KEY_TYPE_IDENTIFIER, MAX_CACHE_SIZE } from \"./constants\";\nconst signingKeyCache = {};\nconst cacheQueue = [];\nexport const createScope = (shortDate, region, service) => `${shortDate}/${region}/${service}/${KEY_TYPE_IDENTIFIER}`;\nexport const getSigningKey = async (sha256Constructor, credentials, shortDate, region, service) => {\n    const credsHash = await hmac(sha256Constructor, credentials.secretAccessKey, credentials.accessKeyId);\n    const cacheKey = `${shortDate}:${region}:${service}:${toHex(credsHash)}:${credentials.sessionToken}`;\n    if (cacheKey in signingKeyCache) {\n        return signingKeyCache[cacheKey];\n    }\n    cacheQueue.push(cacheKey);\n    while (cacheQueue.length > MAX_CACHE_SIZE) {\n        delete signingKeyCache[cacheQueue.shift()];\n    }\n    let key = `AWS4${credentials.secretAccessKey}`;\n    for (const signable of [shortDate, region, service, KEY_TYPE_IDENTIFIER]) {\n        key = await hmac(sha256Constructor, key, signable);\n    }\n    return (signingKeyCache[cacheKey] = key);\n};\nexport const clearCredentialCache = () => {\n    cacheQueue.length = 0;\n    Object.keys(signingKeyCache).forEach((cacheKey) => {\n        delete signingKeyCache[cacheKey];\n    });\n};\nconst hmac = (ctor, secret, data) => {\n    const hash = new ctor(secret);\n    hash.update(toUint8Array(data));\n    return hash.digest();\n};\n","import { ALWAYS_UNSIGNABLE_HEADERS, PROXY_HEADER_PATTERN, SEC_HEADER_PATTERN } from \"./constants\";\nexport const getCanonicalHeaders = ({ headers }, unsignableHeaders, signableHeaders) => {\n    const canonical = {};\n    for (const headerName of Object.keys(headers).sort()) {\n        if (headers[headerName] == undefined) {\n            continue;\n        }\n        const canonicalHeaderName = headerName.toLowerCase();\n        if (canonicalHeaderName in ALWAYS_UNSIGNABLE_HEADERS ||\n            unsignableHeaders?.has(canonicalHeaderName) ||\n            PROXY_HEADER_PATTERN.test(canonicalHeaderName) ||\n            SEC_HEADER_PATTERN.test(canonicalHeaderName)) {\n            if (!signableHeaders || (signableHeaders && !signableHeaders.has(canonicalHeaderName))) {\n                continue;\n            }\n        }\n        canonical[canonicalHeaderName] = headers[headerName].trim().replace(/\\s+/g, \" \");\n    }\n    return canonical;\n};\n","export const escapeUri = (uri) => encodeURIComponent(uri).replace(/[!'()*]/g, hexEncode);\nconst hexEncode = (c) => `%${c.charCodeAt(0).toString(16).toUpperCase()}`;\n","import { escapeUri } from \"@smithy/util-uri-escape\";\nimport { SIGNATURE_HEADER } from \"./constants\";\nexport const getCanonicalQuery = ({ query = {} }) => {\n    const keys = [];\n    const serialized = {};\n    for (const key of Object.keys(query).sort()) {\n        if (key.toLowerCase() === SIGNATURE_HEADER) {\n            continue;\n        }\n        keys.push(key);\n        const value = query[key];\n        if (typeof value === \"string\") {\n            serialized[key] = `${escapeUri(key)}=${escapeUri(value)}`;\n        }\n        else if (Array.isArray(value)) {\n            serialized[key] = value\n                .slice(0)\n                .sort()\n                .reduce((encoded, value) => encoded.concat([`${escapeUri(key)}=${escapeUri(value)}`]), [])\n                .join(\"&\");\n        }\n    }\n    return keys\n        .map((key) => serialized[key])\n        .filter((serialized) => serialized)\n        .join(\"&\");\n};\n","export const isArrayBuffer = (arg) => (typeof ArrayBuffer === \"function\" && arg instanceof ArrayBuffer) ||\n    Object.prototype.toString.call(arg) === \"[object ArrayBuffer]\";\n","import { isArrayBuffer } from \"@smithy/is-array-buffer\";\nimport { toHex } from \"@smithy/util-hex-encoding\";\nimport { toUint8Array } from \"@smithy/util-utf8\";\nimport { SHA256_HEADER, UNSIGNED_PAYLOAD } from \"./constants\";\nexport const getPayloadHash = async ({ headers, body }, hashConstructor) => {\n    for (const headerName of Object.keys(headers)) {\n        if (headerName.toLowerCase() === SHA256_HEADER) {\n            return headers[headerName];\n        }\n    }\n    if (body == undefined) {\n        return \"e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855\";\n    }\n    else if (typeof body === \"string\" || ArrayBuffer.isView(body) || isArrayBuffer(body)) {\n        const hashCtor = new hashConstructor();\n        hashCtor.update(toUint8Array(body));\n        return toHex(await hashCtor.digest());\n    }\n    return UNSIGNED_PAYLOAD;\n};\n","export const hasHeader = (soughtHeader, headers) => {\n    soughtHeader = soughtHeader.toLowerCase();\n    for (const headerName of Object.keys(headers)) {\n        if (soughtHeader === headerName.toLowerCase()) {\n            return true;\n        }\n    }\n    return false;\n};\nexport const getHeaderValue = (soughtHeader, headers) => {\n    soughtHeader = soughtHeader.toLowerCase();\n    for (const headerName of Object.keys(headers)) {\n        if (soughtHeader === headerName.toLowerCase()) {\n            return headers[headerName];\n        }\n    }\n    return undefined;\n};\nexport const deleteHeader = (soughtHeader, headers) => {\n    soughtHeader = soughtHeader.toLowerCase();\n    for (const headerName of Object.keys(headers)) {\n        if (soughtHeader === headerName.toLowerCase()) {\n            delete headers[headerName];\n        }\n    }\n};\n","export const cloneRequest = ({ headers, query, ...rest }) => ({\n    ...rest,\n    headers: { ...headers },\n    query: query ? cloneQuery(query) : undefined,\n});\nexport const cloneQuery = (query) => Object.keys(query).reduce((carry, paramName) => {\n    const param = query[paramName];\n    return {\n        ...carry,\n        [paramName]: Array.isArray(param) ? [...param] : param,\n    };\n}, {});\n","import { cloneRequest } from \"./cloneRequest\";\nexport const moveHeadersToQuery = (request, options = {}) => {\n    const { headers, query = {} } = typeof request.clone === \"function\" ? request.clone() : cloneRequest(request);\n    for (const name of Object.keys(headers)) {\n        const lname = name.toLowerCase();\n        if (lname.slice(0, 6) === \"x-amz-\" && !options.unhoistableHeaders?.has(lname)) {\n            query[name] = headers[name];\n            delete headers[name];\n        }\n    }\n    return {\n        ...request,\n        headers,\n        query,\n    };\n};\n","import { cloneRequest } from \"./cloneRequest\";\nimport { GENERATED_HEADERS } from \"./constants\";\nexport const prepareRequest = (request) => {\n    request = typeof request.clone === \"function\" ? request.clone() : cloneRequest(request);\n    for (const headerName of Object.keys(request.headers)) {\n        if (GENERATED_HEADERS.indexOf(headerName.toLowerCase()) > -1) {\n            delete request.headers[headerName];\n        }\n    }\n    return request;\n};\n","export const iso8601 = (time) => toDate(time)\n    .toISOString()\n    .replace(/\\.\\d{3}Z$/, \"Z\");\nexport const toDate = (time) => {\n    if (typeof time === \"number\") {\n        return new Date(time * 1000);\n    }\n    if (typeof time === \"string\") {\n        if (Number(time)) {\n            return new Date(Number(time) * 1000);\n        }\n        return new Date(time);\n    }\n    return time;\n};\n","import { HeaderMarshaller } from \"@smithy/eventstream-codec\";\nimport { toHex } from \"@smithy/util-hex-encoding\";\nimport { normalizeProvider } from \"@smithy/util-middleware\";\nimport { fromUtf8, toUint8Array, toUtf8 } from \"@smithy/util-utf8\";\nimport { ALGORITHM_IDENTIFIER, ALGORITHM_QUERY_PARAM, AMZ_DATE_HEADER, AMZ_DATE_QUERY_PARAM, AUTH_HEADER, CREDENTIAL_QUERY_PARAM, EVENT_ALGORITHM_IDENTIFIER, EXPIRES_QUERY_PARAM, MAX_PRESIGNED_TTL, SHA256_HEADER, SIGNATURE_QUERY_PARAM, SIGNED_HEADERS_QUERY_PARAM, TOKEN_HEADER, TOKEN_QUERY_PARAM, } from \"./constants\";\nimport { createScope, getSigningKey } from \"./credentialDerivation\";\nimport { getCanonicalHeaders } from \"./getCanonicalHeaders\";\nimport { getCanonicalQuery } from \"./getCanonicalQuery\";\nimport { getPayloadHash } from \"./getPayloadHash\";\nimport { hasHeader } from \"./headerUtil\";\nimport { moveHeadersToQuery } from \"./moveHeadersToQuery\";\nimport { prepareRequest } from \"./prepareRequest\";\nimport { iso8601 } from \"./utilDate\";\nexport class SignatureV4 {\n    constructor({ applyChecksum, credentials, region, service, sha256, uriEscapePath = true, }) {\n        this.headerMarshaller = new HeaderMarshaller(toUtf8, fromUtf8);\n        this.service = service;\n        this.sha256 = sha256;\n        this.uriEscapePath = uriEscapePath;\n        this.applyChecksum = typeof applyChecksum === \"boolean\" ? applyChecksum : true;\n        this.regionProvider = normalizeProvider(region);\n        this.credentialProvider = normalizeProvider(credentials);\n    }\n    async presign(originalRequest, options = {}) {\n        const { signingDate = new Date(), expiresIn = 3600, unsignableHeaders, unhoistableHeaders, signableHeaders, signingRegion, signingService, } = options;\n        const credentials = await this.credentialProvider();\n        this.validateResolvedCredentials(credentials);\n        const region = signingRegion ?? (await this.regionProvider());\n        const { longDate, shortDate } = formatDate(signingDate);\n        if (expiresIn > MAX_PRESIGNED_TTL) {\n            return Promise.reject(\"Signature version 4 presigned URLs\" + \" must have an expiration date less than one week in\" + \" the future\");\n        }\n        const scope = createScope(shortDate, region, signingService ?? this.service);\n        const request = moveHeadersToQuery(prepareRequest(originalRequest), { unhoistableHeaders });\n        if (credentials.sessionToken) {\n            request.query[TOKEN_QUERY_PARAM] = credentials.sessionToken;\n        }\n        request.query[ALGORITHM_QUERY_PARAM] = ALGORITHM_IDENTIFIER;\n        request.query[CREDENTIAL_QUERY_PARAM] = `${credentials.accessKeyId}/${scope}`;\n        request.query[AMZ_DATE_QUERY_PARAM] = longDate;\n        request.query[EXPIRES_QUERY_PARAM] = expiresIn.toString(10);\n        const canonicalHeaders = getCanonicalHeaders(request, unsignableHeaders, signableHeaders);\n        request.query[SIGNED_HEADERS_QUERY_PARAM] = getCanonicalHeaderList(canonicalHeaders);\n        request.query[SIGNATURE_QUERY_PARAM] = await this.getSignature(longDate, scope, this.getSigningKey(credentials, region, shortDate, signingService), this.createCanonicalRequest(request, canonicalHeaders, await getPayloadHash(originalRequest, this.sha256)));\n        return request;\n    }\n    async sign(toSign, options) {\n        if (typeof toSign === \"string\") {\n            return this.signString(toSign, options);\n        }\n        else if (toSign.headers && toSign.payload) {\n            return this.signEvent(toSign, options);\n        }\n        else if (toSign.message) {\n            return this.signMessage(toSign, options);\n        }\n        else {\n            return this.signRequest(toSign, options);\n        }\n    }\n    async signEvent({ headers, payload }, { signingDate = new Date(), priorSignature, signingRegion, signingService }) {\n        const region = signingRegion ?? (await this.regionProvider());\n        const { shortDate, longDate } = formatDate(signingDate);\n        const scope = createScope(shortDate, region, signingService ?? this.service);\n        const hashedPayload = await getPayloadHash({ headers: {}, body: payload }, this.sha256);\n        const hash = new this.sha256();\n        hash.update(headers);\n        const hashedHeaders = toHex(await hash.digest());\n        const stringToSign = [\n            EVENT_ALGORITHM_IDENTIFIER,\n            longDate,\n            scope,\n            priorSignature,\n            hashedHeaders,\n            hashedPayload,\n        ].join(\"\\n\");\n        return this.signString(stringToSign, { signingDate, signingRegion: region, signingService });\n    }\n    async signMessage(signableMessage, { signingDate = new Date(), signingRegion, signingService }) {\n        const promise = this.signEvent({\n            headers: this.headerMarshaller.format(signableMessage.message.headers),\n            payload: signableMessage.message.body,\n        }, {\n            signingDate,\n            signingRegion,\n            signingService,\n            priorSignature: signableMessage.priorSignature,\n        });\n        return promise.then((signature) => {\n            return { message: signableMessage.message, signature };\n        });\n    }\n    async signString(stringToSign, { signingDate = new Date(), signingRegion, signingService } = {}) {\n        const credentials = await this.credentialProvider();\n        this.validateResolvedCredentials(credentials);\n        const region = signingRegion ?? (await this.regionProvider());\n        const { shortDate } = formatDate(signingDate);\n        const hash = new this.sha256(await this.getSigningKey(credentials, region, shortDate, signingService));\n        hash.update(toUint8Array(stringToSign));\n        return toHex(await hash.digest());\n    }\n    async signRequest(requestToSign, { signingDate = new Date(), signableHeaders, unsignableHeaders, signingRegion, signingService, } = {}) {\n        const credentials = await this.credentialProvider();\n        this.validateResolvedCredentials(credentials);\n        const region = signingRegion ?? (await this.regionProvider());\n        const request = prepareRequest(requestToSign);\n        const { longDate, shortDate } = formatDate(signingDate);\n        const scope = createScope(shortDate, region, signingService ?? this.service);\n        request.headers[AMZ_DATE_HEADER] = longDate;\n        if (credentials.sessionToken) {\n            request.headers[TOKEN_HEADER] = credentials.sessionToken;\n        }\n        const payloadHash = await getPayloadHash(request, this.sha256);\n        if (!hasHeader(SHA256_HEADER, request.headers) && this.applyChecksum) {\n            request.headers[SHA256_HEADER] = payloadHash;\n        }\n        const canonicalHeaders = getCanonicalHeaders(request, unsignableHeaders, signableHeaders);\n        const signature = await this.getSignature(longDate, scope, this.getSigningKey(credentials, region, shortDate, signingService), this.createCanonicalRequest(request, canonicalHeaders, payloadHash));\n        request.headers[AUTH_HEADER] =\n            `${ALGORITHM_IDENTIFIER} ` +\n                `Credential=${credentials.accessKeyId}/${scope}, ` +\n                `SignedHeaders=${getCanonicalHeaderList(canonicalHeaders)}, ` +\n                `Signature=${signature}`;\n        return request;\n    }\n    createCanonicalRequest(request, canonicalHeaders, payloadHash) {\n        const sortedHeaders = Object.keys(canonicalHeaders).sort();\n        return `${request.method}\n${this.getCanonicalPath(request)}\n${getCanonicalQuery(request)}\n${sortedHeaders.map((name) => `${name}:${canonicalHeaders[name]}`).join(\"\\n\")}\n\n${sortedHeaders.join(\";\")}\n${payloadHash}`;\n    }\n    async createStringToSign(longDate, credentialScope, canonicalRequest) {\n        const hash = new this.sha256();\n        hash.update(toUint8Array(canonicalRequest));\n        const hashedRequest = await hash.digest();\n        return `${ALGORITHM_IDENTIFIER}\n${longDate}\n${credentialScope}\n${toHex(hashedRequest)}`;\n    }\n    getCanonicalPath({ path }) {\n        if (this.uriEscapePath) {\n            const normalizedPathSegments = [];\n            for (const pathSegment of path.split(\"/\")) {\n                if (pathSegment?.length === 0)\n                    continue;\n                if (pathSegment === \".\")\n                    continue;\n                if (pathSegment === \"..\") {\n                    normalizedPathSegments.pop();\n                }\n                else {\n                    normalizedPathSegments.push(pathSegment);\n                }\n            }\n            const normalizedPath = `${path?.startsWith(\"/\") ? \"/\" : \"\"}${normalizedPathSegments.join(\"/\")}${normalizedPathSegments.length > 0 && path?.endsWith(\"/\") ? \"/\" : \"\"}`;\n            const doubleEncoded = encodeURIComponent(normalizedPath);\n            return doubleEncoded.replace(/%2F/g, \"/\");\n        }\n        return path;\n    }\n    async getSignature(longDate, credentialScope, keyPromise, canonicalRequest) {\n        const stringToSign = await this.createStringToSign(longDate, credentialScope, canonicalRequest);\n        const hash = new this.sha256(await keyPromise);\n        hash.update(toUint8Array(stringToSign));\n        return toHex(await hash.digest());\n    }\n    getSigningKey(credentials, region, shortDate, service) {\n        return getSigningKey(this.sha256, credentials, shortDate, region, service || this.service);\n    }\n    validateResolvedCredentials(credentials) {\n        if (typeof credentials !== \"object\" ||\n            typeof credentials.accessKeyId !== \"string\" ||\n            typeof credentials.secretAccessKey !== \"string\") {\n            throw new Error(\"Resolved credential object is not valid\");\n        }\n    }\n}\nconst formatDate = (now) => {\n    const longDate = iso8601(now).replace(/[\\-:]/g, \"\");\n    return {\n        longDate,\n        shortDate: longDate.slice(0, 8),\n    };\n};\nconst getCanonicalHeaderList = (headers) => Object.keys(headers).sort().join(\";\");\n","import { memoize } from \"@smithy/property-provider\";\nimport { SignatureV4 } from \"@smithy/signature-v4\";\nimport { normalizeProvider } from \"@smithy/util-middleware\";\nconst CREDENTIAL_EXPIRE_WINDOW = 300000;\nexport const resolveAwsAuthConfig = (input) => {\n    const normalizedCreds = input.credentials\n        ? normalizeCredentialProvider(input.credentials)\n        : input.credentialDefaultProvider(input);\n    const { signingEscapePath = true, systemClockOffset = input.systemClockOffset || 0, sha256 } = input;\n    let signer;\n    if (input.signer) {\n        signer = normalizeProvider(input.signer);\n    }\n    else if (input.regionInfoProvider) {\n        signer = () => normalizeProvider(input.region)()\n            .then(async (region) => [\n            (await input.regionInfoProvider(region, {\n                useFipsEndpoint: await input.useFipsEndpoint(),\n                useDualstackEndpoint: await input.useDualstackEndpoint(),\n            })) || {},\n            region,\n        ])\n            .then(([regionInfo, region]) => {\n            const { signingRegion, signingService } = regionInfo;\n            input.signingRegion = input.signingRegion || signingRegion || region;\n            input.signingName = input.signingName || signingService || input.serviceId;\n            const params = {\n                ...input,\n                credentials: normalizedCreds,\n                region: input.signingRegion,\n                service: input.signingName,\n                sha256,\n                uriEscapePath: signingEscapePath,\n            };\n            const SignerCtor = input.signerConstructor || SignatureV4;\n            return new SignerCtor(params);\n        });\n    }\n    else {\n        signer = async (authScheme) => {\n            authScheme = Object.assign({}, {\n                name: \"sigv4\",\n                signingName: input.signingName || input.defaultSigningName,\n                signingRegion: await normalizeProvider(input.region)(),\n                properties: {},\n            }, authScheme);\n            const signingRegion = authScheme.signingRegion;\n            const signingService = authScheme.signingName;\n            input.signingRegion = input.signingRegion || signingRegion;\n            input.signingName = input.signingName || signingService || input.serviceId;\n            const params = {\n                ...input,\n                credentials: normalizedCreds,\n                region: input.signingRegion,\n                service: input.signingName,\n                sha256,\n                uriEscapePath: signingEscapePath,\n            };\n            const SignerCtor = input.signerConstructor || SignatureV4;\n            return new SignerCtor(params);\n        };\n    }\n    return {\n        ...input,\n        systemClockOffset,\n        signingEscapePath,\n        credentials: normalizedCreds,\n        signer,\n    };\n};\nexport const resolveSigV4AuthConfig = (input) => {\n    const normalizedCreds = input.credentials\n        ? normalizeCredentialProvider(input.credentials)\n        : input.credentialDefaultProvider(input);\n    const { signingEscapePath = true, systemClockOffset = input.systemClockOffset || 0, sha256 } = input;\n    let signer;\n    if (input.signer) {\n        signer = normalizeProvider(input.signer);\n    }\n    else {\n        signer = normalizeProvider(new SignatureV4({\n            credentials: normalizedCreds,\n            region: input.region,\n            service: input.signingName,\n            sha256,\n            uriEscapePath: signingEscapePath,\n        }));\n    }\n    return {\n        ...input,\n        systemClockOffset,\n        signingEscapePath,\n        credentials: normalizedCreds,\n        signer,\n    };\n};\nconst normalizeCredentialProvider = (credentials) => {\n    if (typeof credentials === \"function\") {\n        return memoize(credentials, (credentials) => credentials.expiration !== undefined &&\n            credentials.expiration.getTime() - Date.now() < CREDENTIAL_EXPIRE_WINDOW, (credentials) => credentials.expiration !== undefined);\n    }\n    return normalizeProvider(credentials);\n};\n","export const getSkewCorrectedDate = (systemClockOffset) => new Date(Date.now() + systemClockOffset);\n","import { getSkewCorrectedDate } from \"./getSkewCorrectedDate\";\nexport const isClockSkewed = (clockTime, systemClockOffset) => Math.abs(getSkewCorrectedDate(systemClockOffset).getTime() - clockTime) >= 300000;\n","import { isClockSkewed } from \"./isClockSkewed\";\nexport const getUpdatedSystemClockOffset = (clockTime, currentSystemClockOffset) => {\n    const clockTimeInMs = Date.parse(clockTime);\n    if (isClockSkewed(clockTimeInMs, currentSystemClockOffset)) {\n        return clockTimeInMs - Date.now();\n    }\n    return currentSystemClockOffset;\n};\n","import { HttpRequest, HttpResponse } from \"@smithy/protocol-http\";\nimport { getSkewCorrectedDate } from \"./utils/getSkewCorrectedDate\";\nimport { getUpdatedSystemClockOffset } from \"./utils/getUpdatedSystemClockOffset\";\nexport const awsAuthMiddleware = (options) => (next, context) => async function (args) {\n    if (!HttpRequest.isInstance(args.request))\n        return next(args);\n    const authScheme = context.endpointV2?.properties?.authSchemes?.[0];\n    const multiRegionOverride = authScheme?.name === \"sigv4a\" ? authScheme?.signingRegionSet?.join(\",\") : undefined;\n    const signer = await options.signer(authScheme);\n    const output = await next({\n        ...args,\n        request: await signer.sign(args.request, {\n            signingDate: getSkewCorrectedDate(options.systemClockOffset),\n            signingRegion: multiRegionOverride || context[\"signing_region\"],\n            signingService: context[\"signing_service\"],\n        }),\n    }).catch((error) => {\n        const serverTime = error.ServerTime ?? getDateHeader(error.$response);\n        if (serverTime) {\n            options.systemClockOffset = getUpdatedSystemClockOffset(serverTime, options.systemClockOffset);\n        }\n        throw error;\n    });\n    const dateHeader = getDateHeader(output.response);\n    if (dateHeader) {\n        options.systemClockOffset = getUpdatedSystemClockOffset(dateHeader, options.systemClockOffset);\n    }\n    return output;\n};\nconst getDateHeader = (response) => HttpResponse.isInstance(response) ? response.headers?.date ?? response.headers?.Date : undefined;\nexport const awsAuthMiddlewareOptions = {\n    name: \"awsAuthMiddleware\",\n    tags: [\"SIGNATURE\", \"AWSAUTH\"],\n    relation: \"after\",\n    toMiddleware: \"retryMiddleware\",\n    override: true,\n};\nexport const getAwsAuthPlugin = (options) => ({\n    applyToStack: (clientStack) => {\n        clientStack.addRelativeTo(awsAuthMiddleware(options), awsAuthMiddlewareOptions);\n    },\n});\nexport const getSigV4AuthPlugin = getAwsAuthPlugin;\n","export function resolveUserAgentConfig(input) {\n    return {\n        ...input,\n        customUserAgent: typeof input.customUserAgent === \"string\" ? [[input.customUserAgent]] : input.customUserAgent,\n    };\n}\n","import partitionsInfo from \"./partitions.json\";\nlet selectedPartitionsInfo = partitionsInfo;\nlet selectedUserAgentPrefix = \"\";\nexport const partition = (value) => {\n    const { partitions } = selectedPartitionsInfo;\n    for (const partition of partitions) {\n        const { regions, outputs } = partition;\n        for (const [region, regionData] of Object.entries(regions)) {\n            if (region === value) {\n                return {\n                    ...outputs,\n                    ...regionData,\n                };\n            }\n        }\n    }\n    for (const partition of partitions) {\n        const { regionRegex, outputs } = partition;\n        if (new RegExp(regionRegex).test(value)) {\n            return {\n                ...outputs,\n            };\n        }\n    }\n    const DEFAULT_PARTITION = partitions.find((partition) => partition.id === \"aws\");\n    if (!DEFAULT_PARTITION) {\n        throw new Error(\"Provided region was not found in the partition array or regex,\" +\n            \" and default partition with id 'aws' doesn't exist.\");\n    }\n    return {\n        ...DEFAULT_PARTITION.outputs,\n    };\n};\nexport const setPartitionInfo = (partitionsInfo, userAgentPrefix = \"\") => {\n    selectedPartitionsInfo = partitionsInfo;\n    selectedUserAgentPrefix = userAgentPrefix;\n};\nexport const useDefaultPartitionInfo = () => {\n    setPartitionInfo(partitionsInfo, \"\");\n};\nexport const getUserAgentPrefix = () => selectedUserAgentPrefix;\n","const IP_V4_REGEX = new RegExp(`^(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)(?:\\\\.(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)){3}$`);\nexport const isIpAddress = (value) => IP_V4_REGEX.test(value) || (value.startsWith(\"[\") && value.endsWith(\"]\"));\n","export const debugId = \"endpoints\";\n","export function toDebugString(input) {\n    if (typeof input !== \"object\" || input == null) {\n        return input;\n    }\n    if (\"ref\" in input) {\n        return `$${toDebugString(input.ref)}`;\n    }\n    if (\"fn\" in input) {\n        return `${input.fn}(${(input.argv || []).map(toDebugString).join(\", \")})`;\n    }\n    return JSON.stringify(input, null, 2);\n}\n","export class EndpointError extends Error {\n    constructor(message) {\n        super(message);\n        this.name = \"EndpointError\";\n    }\n}\n","const VALID_HOST_LABEL_REGEX = new RegExp(`^(?!.*-$)(?!-)[a-zA-Z0-9-]{1,63}$`);\nexport const isValidHostLabel = (value, allowSubDomains = false) => {\n    if (!allowSubDomains) {\n        return VALID_HOST_LABEL_REGEX.test(value);\n    }\n    const labels = value.split(\".\");\n    for (const label of labels) {\n        if (!isValidHostLabel(label)) {\n            return false;\n        }\n    }\n    return true;\n};\n","import { isIpAddress } from \"../isIpAddress\";\nimport { isValidHostLabel } from \"../isValidHostLabel\";\nexport const isVirtualHostableS3Bucket = (value, allowSubDomains = false) => {\n    if (allowSubDomains) {\n        for (const label of value.split(\".\")) {\n            if (!isVirtualHostableS3Bucket(label)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    if (!isValidHostLabel(value)) {\n        return false;\n    }\n    if (value.length < 3 || value.length > 63) {\n        return false;\n    }\n    if (value !== value.toLowerCase()) {\n        return false;\n    }\n    if (isIpAddress(value)) {\n        return false;\n    }\n    return true;\n};\n","export const parseArn = (value) => {\n    const segments = value.split(\":\");\n    if (segments.length < 6)\n        return null;\n    const [arn, partition, service, region, accountId, ...resourceId] = segments;\n    if (arn !== \"arn\" || partition === \"\" || service === \"\" || resourceId[0] === \"\")\n        return null;\n    return {\n        partition,\n        service,\n        region,\n        accountId,\n        resourceId: resourceId[0].includes(\"/\") ? resourceId[0].split(\"/\") : resourceId,\n    };\n};\n","export const booleanEquals = (value1, value2) => value1 === value2;\n","import { EndpointError } from \"../types\";\nexport const getAttrPathList = (path) => {\n    const parts = path.split(\".\");\n    const pathList = [];\n    for (const part of parts) {\n        const squareBracketIndex = part.indexOf(\"[\");\n        if (squareBracketIndex !== -1) {\n            if (part.indexOf(\"]\") !== part.length - 1) {\n                throw new EndpointError(`Path: '${path}' does not end with ']'`);\n            }\n            const arrayIndex = part.slice(squareBracketIndex + 1, -1);\n            if (Number.isNaN(parseInt(arrayIndex))) {\n                throw new EndpointError(`Invalid array index: '${arrayIndex}' in path: '${path}'`);\n            }\n            if (squareBracketIndex !== 0) {\n                pathList.push(part.slice(0, squareBracketIndex));\n            }\n            pathList.push(arrayIndex);\n        }\n        else {\n            pathList.push(part);\n        }\n    }\n    return pathList;\n};\n","import { EndpointError } from \"../types\";\nimport { getAttrPathList } from \"./getAttrPathList\";\nexport const getAttr = (value, path) => getAttrPathList(path).reduce((acc, index) => {\n    if (typeof acc !== \"object\") {\n        throw new EndpointError(`Index '${index}' in '${path}' not found in '${JSON.stringify(value)}'`);\n    }\n    else if (Array.isArray(acc)) {\n        return acc[parseInt(index)];\n    }\n    return acc[index];\n}, value);\n","export const isSet = (value) => value != null;\n","export const not = (value) => !value;\n","export var HostAddressType;\n(function (HostAddressType) {\n    HostAddressType[\"AAAA\"] = \"AAAA\";\n    HostAddressType[\"A\"] = \"A\";\n})(HostAddressType || (HostAddressType = {}));\n","import { EndpointURLScheme } from \"@aws-sdk/types\";\nimport { isIpAddress } from \"./isIpAddress\";\nconst DEFAULT_PORTS = {\n    [EndpointURLScheme.HTTP]: 80,\n    [EndpointURLScheme.HTTPS]: 443,\n};\nexport const parseURL = (value) => {\n    const whatwgURL = (() => {\n        try {\n            if (value instanceof URL) {\n                return value;\n            }\n            if (typeof value === \"object\" && \"hostname\" in value) {\n                const { hostname, port, protocol = \"\", path = \"\", query = {} } = value;\n                const url = new URL(`${protocol}//${hostname}${port ? `:${port}` : \"\"}${path}`);\n                url.search = Object.entries(query)\n                    .map(([k, v]) => `${k}=${v}`)\n                    .join(\"&\");\n                return url;\n            }\n            return new URL(value);\n        }\n        catch (error) {\n            return null;\n        }\n    })();\n    if (!whatwgURL) {\n        console.error(`Unable to parse ${JSON.stringify(value)} as a whatwg URL.`);\n        return null;\n    }\n    const urlString = whatwgURL.href;\n    const { host, hostname, pathname, protocol, search } = whatwgURL;\n    if (search) {\n        return null;\n    }\n    const scheme = protocol.slice(0, -1);\n    if (!Object.values(EndpointURLScheme).includes(scheme)) {\n        return null;\n    }\n    const isIp = isIpAddress(hostname);\n    const inputContainsDefaultPort = urlString.includes(`${host}:${DEFAULT_PORTS[scheme]}`) ||\n        (typeof value === \"string\" && value.includes(`${host}:${DEFAULT_PORTS[scheme]}`));\n    const authority = `${host}${inputContainsDefaultPort ? `:${DEFAULT_PORTS[scheme]}` : ``}`;\n    return {\n        scheme,\n        authority,\n        path: pathname,\n        normalizedPath: pathname.endsWith(\"/\") ? pathname : `${pathname}/`,\n        isIp,\n    };\n};\n","export const stringEquals = (value1, value2) => value1 === value2;\n","export const substring = (input, start, stop, reverse) => {\n    if (start >= stop || input.length < stop) {\n        return null;\n    }\n    if (!reverse) {\n        return input.substring(start, stop);\n    }\n    return input.substring(input.length - stop, input.length - start);\n};\n","export const uriEncode = (value) => encodeURIComponent(value).replace(/[!*'()]/g, (c) => `%${c.charCodeAt(0).toString(16).toUpperCase()}`);\n","import { getAttr } from \"../lib\";\nexport const evaluateTemplate = (template, options) => {\n    const evaluatedTemplateArr = [];\n    const templateContext = {\n        ...options.endpointParams,\n        ...options.referenceRecord,\n    };\n    let currentIndex = 0;\n    while (currentIndex < template.length) {\n        const openingBraceIndex = template.indexOf(\"{\", currentIndex);\n        if (openingBraceIndex === -1) {\n            evaluatedTemplateArr.push(template.slice(currentIndex));\n            break;\n        }\n        evaluatedTemplateArr.push(template.slice(currentIndex, openingBraceIndex));\n        const closingBraceIndex = template.indexOf(\"}\", openingBraceIndex);\n        if (closingBraceIndex === -1) {\n            evaluatedTemplateArr.push(template.slice(openingBraceIndex));\n            break;\n        }\n        if (template[openingBraceIndex + 1] === \"{\" && template[closingBraceIndex + 1] === \"}\") {\n            evaluatedTemplateArr.push(template.slice(openingBraceIndex + 1, closingBraceIndex));\n            currentIndex = closingBraceIndex + 2;\n        }\n        const parameterName = template.substring(openingBraceIndex + 1, closingBraceIndex);\n        if (parameterName.includes(\"#\")) {\n            const [refName, attrName] = parameterName.split(\"#\");\n            evaluatedTemplateArr.push(getAttr(templateContext[refName], attrName));\n        }\n        else {\n            evaluatedTemplateArr.push(templateContext[parameterName]);\n        }\n        currentIndex = closingBraceIndex + 1;\n    }\n    return evaluatedTemplateArr.join(\"\");\n};\n","export const getReferenceValue = ({ ref }, options) => {\n    const referenceRecord = {\n        ...options.endpointParams,\n        ...options.referenceRecord,\n    };\n    return referenceRecord[ref];\n};\n","import { EndpointError } from \"../types\";\nimport { callFunction } from \"./callFunction\";\nimport { evaluateTemplate } from \"./evaluateTemplate\";\nimport { getReferenceValue } from \"./getReferenceValue\";\nexport const evaluateExpression = (obj, keyName, options) => {\n    if (typeof obj === \"string\") {\n        return evaluateTemplate(obj, options);\n    }\n    else if (obj[\"fn\"]) {\n        return callFunction(obj, options);\n    }\n    else if (obj[\"ref\"]) {\n        return getReferenceValue(obj, options);\n    }\n    throw new EndpointError(`'${keyName}': ${String(obj)} is not a string, function or reference.`);\n};\n","import * as lib from \"../lib\";\nimport { evaluateExpression } from \"./evaluateExpression\";\nexport const callFunction = ({ fn, argv }, options) => {\n    const evaluatedArgs = argv.map((arg) => [\"boolean\", \"number\"].includes(typeof arg) ? arg : evaluateExpression(arg, \"arg\", options));\n    return fn.split(\".\").reduce((acc, key) => acc[key], lib)(...evaluatedArgs);\n};\n","import { debugId, toDebugString } from \"../debug\";\nimport { EndpointError } from \"../types\";\nimport { callFunction } from \"./callFunction\";\nexport const evaluateCondition = ({ assign, ...fnArgs }, options) => {\n    if (assign && assign in options.referenceRecord) {\n        throw new EndpointError(`'${assign}' is already defined in Reference Record.`);\n    }\n    const value = callFunction(fnArgs, options);\n    options.logger?.debug?.(debugId, `evaluateCondition: ${toDebugString(fnArgs)} = ${toDebugString(value)}`);\n    return {\n        result: value === \"\" ? true : !!value,\n        ...(assign != null && { toAssign: { name: assign, value } }),\n    };\n};\n","import { debugId, toDebugString } from \"../debug\";\nimport { evaluateCondition } from \"./evaluateCondition\";\nexport const evaluateConditions = (conditions = [], options) => {\n    const conditionsReferenceRecord = {};\n    for (const condition of conditions) {\n        const { result, toAssign } = evaluateCondition(condition, {\n            ...options,\n            referenceRecord: {\n                ...options.referenceRecord,\n                ...conditionsReferenceRecord,\n            },\n        });\n        if (!result) {\n            return { result };\n        }\n        if (toAssign) {\n            conditionsReferenceRecord[toAssign.name] = toAssign.value;\n            options.logger?.debug?.(debugId, `assign: ${toAssign.name} := ${toDebugString(toAssign.value)}`);\n        }\n    }\n    return { result: true, referenceRecord: conditionsReferenceRecord };\n};\n","import { EndpointError } from \"../types\";\nimport { evaluateExpression } from \"./evaluateExpression\";\nexport const getEndpointHeaders = (headers, options) => Object.entries(headers).reduce((acc, [headerKey, headerVal]) => ({\n    ...acc,\n    [headerKey]: headerVal.map((headerValEntry) => {\n        const processedExpr = evaluateExpression(headerValEntry, \"Header value entry\", options);\n        if (typeof processedExpr !== \"string\") {\n            throw new EndpointError(`Header '${headerKey}' value '${processedExpr}' is not a string`);\n        }\n        return processedExpr;\n    }),\n}), {});\n","import { EndpointError } from \"../types\";\nimport { evaluateTemplate } from \"./evaluateTemplate\";\nimport { getEndpointProperties } from \"./getEndpointProperties\";\nexport const getEndpointProperty = (property, options) => {\n    if (Array.isArray(property)) {\n        return property.map((propertyEntry) => getEndpointProperty(propertyEntry, options));\n    }\n    switch (typeof property) {\n        case \"string\":\n            return evaluateTemplate(property, options);\n        case \"object\":\n            if (property === null) {\n                throw new EndpointError(`Unexpected endpoint property: ${property}`);\n            }\n            return getEndpointProperties(property, options);\n        case \"boolean\":\n            return property;\n        default:\n            throw new EndpointError(`Unexpected endpoint property type: ${typeof property}`);\n    }\n};\n","import { getEndpointProperty } from \"./getEndpointProperty\";\nexport const getEndpointProperties = (properties, options) => Object.entries(properties).reduce((acc, [propertyKey, propertyVal]) => ({\n    ...acc,\n    [propertyKey]: getEndpointProperty(propertyVal, options),\n}), {});\n","import { EndpointError } from \"../types\";\nimport { evaluateExpression } from \"./evaluateExpression\";\nexport const getEndpointUrl = (endpointUrl, options) => {\n    const expression = evaluateExpression(endpointUrl, \"Endpoint URL\", options);\n    if (typeof expression === \"string\") {\n        try {\n            return new URL(expression);\n        }\n        catch (error) {\n            console.error(`Failed to construct URL with ${expression}`, error);\n            throw error;\n        }\n    }\n    throw new EndpointError(`Endpoint URL must be a string, got ${typeof expression}`);\n};\n","import { debugId, toDebugString } from \"../debug\";\nimport { evaluateConditions } from \"./evaluateConditions\";\nimport { getEndpointHeaders } from \"./getEndpointHeaders\";\nimport { getEndpointProperties } from \"./getEndpointProperties\";\nimport { getEndpointUrl } from \"./getEndpointUrl\";\nexport const evaluateEndpointRule = (endpointRule, options) => {\n    const { conditions, endpoint } = endpointRule;\n    const { result, referenceRecord } = evaluateConditions(conditions, options);\n    if (!result) {\n        return;\n    }\n    const endpointRuleOptions = {\n        ...options,\n        referenceRecord: { ...options.referenceRecord, ...referenceRecord },\n    };\n    const { url, properties, headers } = endpoint;\n    options.logger?.debug?.(debugId, `Resolving endpoint from template: ${toDebugString(endpoint)}`);\n    return {\n        ...(headers != undefined && {\n            headers: getEndpointHeaders(headers, endpointRuleOptions),\n        }),\n        ...(properties != undefined && {\n            properties: getEndpointProperties(properties, endpointRuleOptions),\n        }),\n        url: getEndpointUrl(url, endpointRuleOptions),\n    };\n};\n","import { EndpointError } from \"../types\";\nimport { evaluateConditions } from \"./evaluateConditions\";\nimport { evaluateExpression } from \"./evaluateExpression\";\nexport const evaluateErrorRule = (errorRule, options) => {\n    const { conditions, error } = errorRule;\n    const { result, referenceRecord } = evaluateConditions(conditions, options);\n    if (!result) {\n        return;\n    }\n    throw new EndpointError(evaluateExpression(error, \"Error\", {\n        ...options,\n        referenceRecord: { ...options.referenceRecord, ...referenceRecord },\n    }));\n};\n","import { evaluateConditions } from \"./evaluateConditions\";\nimport { evaluateRules } from \"./evaluateRules\";\nexport const evaluateTreeRule = (treeRule, options) => {\n    const { conditions, rules } = treeRule;\n    const { result, referenceRecord } = evaluateConditions(conditions, options);\n    if (!result) {\n        return;\n    }\n    return evaluateRules(rules, {\n        ...options,\n        referenceRecord: { ...options.referenceRecord, ...referenceRecord },\n    });\n};\n","import { EndpointError } from \"../types\";\nimport { evaluateEndpointRule } from \"./evaluateEndpointRule\";\nimport { evaluateErrorRule } from \"./evaluateErrorRule\";\nimport { evaluateTreeRule } from \"./evaluateTreeRule\";\nexport const evaluateRules = (rules, options) => {\n    for (const rule of rules) {\n        if (rule.type === \"endpoint\") {\n            const endpointOrUndefined = evaluateEndpointRule(rule, options);\n            if (endpointOrUndefined) {\n                return endpointOrUndefined;\n            }\n        }\n        else if (rule.type === \"error\") {\n            evaluateErrorRule(rule, options);\n        }\n        else if (rule.type === \"tree\") {\n            const endpointOrUndefined = evaluateTreeRule(rule, options);\n            if (endpointOrUndefined) {\n                return endpointOrUndefined;\n            }\n        }\n        else {\n            throw new EndpointError(`Unknown endpoint rule: ${rule}`);\n        }\n    }\n    throw new EndpointError(`Rules evaluation failed`);\n};\n","import { debugId, toDebugString } from \"./debug\";\nimport { EndpointError } from \"./types\";\nimport { evaluateRules } from \"./utils\";\nexport const resolveEndpoint = (ruleSetObject, options) => {\n    const { endpointParams, logger } = options;\n    const { parameters, rules } = ruleSetObject;\n    options.logger?.debug?.(`${debugId} Initial EndpointParams: ${toDebugString(endpointParams)}`);\n    const paramsWithDefault = Object.entries(parameters)\n        .filter(([, v]) => v.default != null)\n        .map(([k, v]) => [k, v.default]);\n    if (paramsWithDefault.length > 0) {\n        for (const [paramKey, paramDefaultValue] of paramsWithDefault) {\n            endpointParams[paramKey] = endpointParams[paramKey] ?? paramDefaultValue;\n        }\n    }\n    const requiredParams = Object.entries(parameters)\n        .filter(([, v]) => v.required)\n        .map(([k]) => k);\n    for (const requiredParam of requiredParams) {\n        if (endpointParams[requiredParam] == null) {\n            throw new EndpointError(`Missing required parameter: '${requiredParam}'`);\n        }\n    }\n    const endpoint = evaluateRules(rules, { endpointParams, logger, referenceRecord: {} });\n    if (options.endpointParams?.Endpoint) {\n        try {\n            const givenEndpoint = new URL(options.endpointParams.Endpoint);\n            const { protocol, port } = givenEndpoint;\n            endpoint.url.protocol = protocol;\n            endpoint.url.port = port;\n        }\n        catch (e) {\n        }\n    }\n    options.logger?.debug?.(`${debugId} Resolved endpoint: ${toDebugString(endpoint)}`);\n    return endpoint;\n};\n","export const USER_AGENT = \"user-agent\";\nexport const X_AMZ_USER_AGENT = \"x-amz-user-agent\";\nexport const SPACE = \" \";\nexport const UA_NAME_SEPARATOR = \"/\";\nexport const UA_NAME_ESCAPE_REGEX = /[^\\!\\$\\%\\&\\'\\*\\+\\-\\.\\^\\_\\`\\|\\~\\d\\w]/g;\nexport const UA_VALUE_ESCAPE_REGEX = /[^\\!\\$\\%\\&\\'\\*\\+\\-\\.\\^\\_\\`\\|\\~\\d\\w\\#]/g;\nexport const UA_ESCAPE_CHAR = \"-\";\n","import { getUserAgentPrefix } from \"@aws-sdk/util-endpoints\";\nimport { HttpRequest } from \"@smithy/protocol-http\";\nimport { SPACE, UA_ESCAPE_CHAR, UA_NAME_ESCAPE_REGEX, UA_NAME_SEPARATOR, UA_VALUE_ESCAPE_REGEX, USER_AGENT, X_AMZ_USER_AGENT, } from \"./constants\";\nexport const userAgentMiddleware = (options) => (next, context) => async (args) => {\n    const { request } = args;\n    if (!HttpRequest.isInstance(request))\n        return next(args);\n    const { headers } = request;\n    const userAgent = context?.userAgent?.map(escapeUserAgent) || [];\n    const defaultUserAgent = (await options.defaultUserAgentProvider()).map(escapeUserAgent);\n    const customUserAgent = options?.customUserAgent?.map(escapeUserAgent) || [];\n    const prefix = getUserAgentPrefix();\n    const sdkUserAgentValue = (prefix ? [prefix] : [])\n        .concat([...defaultUserAgent, ...userAgent, ...customUserAgent])\n        .join(SPACE);\n    const normalUAValue = [\n        ...defaultUserAgent.filter((section) => section.startsWith(\"aws-sdk-\")),\n        ...customUserAgent,\n    ].join(SPACE);\n    if (options.runtime !== \"browser\") {\n        if (normalUAValue) {\n            headers[X_AMZ_USER_AGENT] = headers[X_AMZ_USER_AGENT]\n                ? `${headers[USER_AGENT]} ${normalUAValue}`\n                : normalUAValue;\n        }\n        headers[USER_AGENT] = sdkUserAgentValue;\n    }\n    else {\n        headers[X_AMZ_USER_AGENT] = sdkUserAgentValue;\n    }\n    return next({\n        ...args,\n        request,\n    });\n};\nconst escapeUserAgent = (userAgentPair) => {\n    const name = userAgentPair[0]\n        .split(UA_NAME_SEPARATOR)\n        .map((part) => part.replace(UA_NAME_ESCAPE_REGEX, UA_ESCAPE_CHAR))\n        .join(UA_NAME_SEPARATOR);\n    const version = userAgentPair[1]?.replace(UA_VALUE_ESCAPE_REGEX, UA_ESCAPE_CHAR);\n    const prefixSeparatorIndex = name.indexOf(UA_NAME_SEPARATOR);\n    const prefix = name.substring(0, prefixSeparatorIndex);\n    let uaName = name.substring(prefixSeparatorIndex + 1);\n    if (prefix === \"api\") {\n        uaName = uaName.toLowerCase();\n    }\n    return [prefix, uaName, version]\n        .filter((item) => item && item.length > 0)\n        .reduce((acc, item, index) => {\n        switch (index) {\n            case 0:\n                return item;\n            case 1:\n                return `${acc}/${item}`;\n            default:\n                return `${acc}#${item}`;\n        }\n    }, \"\");\n};\nexport const getUserAgentMiddlewareOptions = {\n    name: \"getUserAgentMiddleware\",\n    step: \"build\",\n    priority: \"low\",\n    tags: [\"SET_USER_AGENT\", \"USER_AGENT\"],\n    override: true,\n};\nexport const getUserAgentPlugin = (config) => ({\n    applyToStack: (clientStack) => {\n        clientStack.add(userAgentMiddleware(config), getUserAgentMiddlewareOptions);\n    },\n});\n","export var SelectorType;\n(function (SelectorType) {\n    SelectorType[\"ENV\"] = \"env\";\n    SelectorType[\"CONFIG\"] = \"shared config entry\";\n})(SelectorType || (SelectorType = {}));\nexport const booleanSelector = (obj, key, type) => {\n    if (!(key in obj))\n        return undefined;\n    if (obj[key] === \"true\")\n        return true;\n    if (obj[key] === \"false\")\n        return false;\n    throw new Error(`Cannot load ${type} \"${key}\". Expected \"true\" or \"false\", got ${obj[key]}.`);\n};\n","import { booleanSelector, SelectorType } from \"@smithy/util-config-provider\";\nexport const ENV_USE_DUALSTACK_ENDPOINT = \"AWS_USE_DUALSTACK_ENDPOINT\";\nexport const CONFIG_USE_DUALSTACK_ENDPOINT = \"use_dualstack_endpoint\";\nexport const DEFAULT_USE_DUALSTACK_ENDPOINT = false;\nexport const NODE_USE_DUALSTACK_ENDPOINT_CONFIG_OPTIONS = {\n    environmentVariableSelector: (env) => booleanSelector(env, ENV_USE_DUALSTACK_ENDPOINT, SelectorType.ENV),\n    configFileSelector: (profile) => booleanSelector(profile, CONFIG_USE_DUALSTACK_ENDPOINT, SelectorType.CONFIG),\n    default: false,\n};\n","import { booleanSelector, SelectorType } from \"@smithy/util-config-provider\";\nexport const ENV_USE_FIPS_ENDPOINT = \"AWS_USE_FIPS_ENDPOINT\";\nexport const CONFIG_USE_FIPS_ENDPOINT = \"use_fips_endpoint\";\nexport const DEFAULT_USE_FIPS_ENDPOINT = false;\nexport const NODE_USE_FIPS_ENDPOINT_CONFIG_OPTIONS = {\n    environmentVariableSelector: (env) => booleanSelector(env, ENV_USE_FIPS_ENDPOINT, SelectorType.ENV),\n    configFileSelector: (profile) => booleanSelector(profile, CONFIG_USE_FIPS_ENDPOINT, SelectorType.CONFIG),\n    default: false,\n};\n","export const isFipsRegion = (region) => typeof region === \"string\" && (region.startsWith(\"fips-\") || region.endsWith(\"-fips\"));\n","import { isFipsRegion } from \"./isFipsRegion\";\nexport const getRealRegion = (region) => isFipsRegion(region)\n    ? [\"fips-aws-global\", \"aws-fips\"].includes(region)\n        ? \"us-east-1\"\n        : region.replace(/fips-(dkr-|prod-)?|-fips/, \"\")\n    : region;\n","import { getRealRegion } from \"./getRealRegion\";\nimport { isFipsRegion } from \"./isFipsRegion\";\nexport const resolveRegionConfig = (input) => {\n    const { region, useFipsEndpoint } = input;\n    if (!region) {\n        throw new Error(\"Region is missing\");\n    }\n    return {\n        ...input,\n        region: async () => {\n            if (typeof region === \"string\") {\n                return getRealRegion(region);\n            }\n            const providedRegion = await region();\n            return getRealRegion(providedRegion);\n        },\n        useFipsEndpoint: async () => {\n            const providedRegion = typeof region === \"string\" ? region : await region();\n            if (isFipsRegion(providedRegion)) {\n                return true;\n            }\n            return typeof useFipsEndpoint !== \"function\" ? Promise.resolve(!!useFipsEndpoint) : useFipsEndpoint();\n        },\n    };\n};\n","export const resolveEventStreamSerdeConfig = (input) => ({\n    ...input,\n    eventStreamMarshaller: input.eventStreamSerdeProvider(input),\n});\n","import { HttpRequest } from \"@smithy/protocol-http\";\nconst CONTENT_LENGTH_HEADER = \"content-length\";\nexport function contentLengthMiddleware(bodyLengthChecker) {\n    return (next) => async (args) => {\n        const request = args.request;\n        if (HttpRequest.isInstance(request)) {\n            const { body, headers } = request;\n            if (body &&\n                Object.keys(headers)\n                    .map((str) => str.toLowerCase())\n                    .indexOf(CONTENT_LENGTH_HEADER) === -1) {\n                try {\n                    const length = bodyLengthChecker(body);\n                    request.headers = {\n                        ...request.headers,\n                        [CONTENT_LENGTH_HEADER]: String(length),\n                    };\n                }\n                catch (error) {\n                }\n            }\n        }\n        return next({\n            ...args,\n            request,\n        });\n    };\n}\nexport const contentLengthMiddlewareOptions = {\n    step: \"build\",\n    tags: [\"SET_CONTENT_LENGTH\", \"CONTENT_LENGTH\"],\n    name: \"contentLengthMiddleware\",\n    override: true,\n};\nexport const getContentLengthPlugin = (options) => ({\n    applyToStack: (clientStack) => {\n        clientStack.add(contentLengthMiddleware(options.bodyLengthChecker), contentLengthMiddlewareOptions);\n    },\n});\n","export const resolveParamsForS3 = async (endpointParams) => {\n    const bucket = endpointParams?.Bucket || \"\";\n    if (typeof endpointParams.Bucket === \"string\") {\n        endpointParams.Bucket = bucket.replace(/#/g, encodeURIComponent(\"#\")).replace(/\\?/g, encodeURIComponent(\"?\"));\n    }\n    if (isArnBucketName(bucket)) {\n        if (endpointParams.ForcePathStyle === true) {\n            throw new Error(\"Path-style addressing cannot be used with ARN buckets\");\n        }\n    }\n    else if (!isDnsCompatibleBucketName(bucket) ||\n        (bucket.indexOf(\".\") !== -1 && !String(endpointParams.Endpoint).startsWith(\"http:\")) ||\n        bucket.toLowerCase() !== bucket ||\n        bucket.length < 3) {\n        endpointParams.ForcePathStyle = true;\n    }\n    if (endpointParams.DisableMultiRegionAccessPoints) {\n        endpointParams.disableMultiRegionAccessPoints = true;\n        endpointParams.DisableMRAP = true;\n    }\n    return endpointParams;\n};\nconst DOMAIN_PATTERN = /^[a-z0-9][a-z0-9\\.\\-]{1,61}[a-z0-9]$/;\nconst IP_ADDRESS_PATTERN = /(\\d+\\.){3}\\d+/;\nconst DOTS_PATTERN = /\\.\\./;\nexport const DOT_PATTERN = /\\./;\nexport const S3_HOSTNAME_PATTERN = /^(.+\\.)?s3(-fips)?(\\.dualstack)?[.-]([a-z0-9-]+)\\./;\nexport const isDnsCompatibleBucketName = (bucketName) => DOMAIN_PATTERN.test(bucketName) && !IP_ADDRESS_PATTERN.test(bucketName) && !DOTS_PATTERN.test(bucketName);\nexport const isArnBucketName = (bucketName) => {\n    const [arn, partition, service, region, account, typeOrId] = bucketName.split(\":\");\n    const isArn = arn === \"arn\" && bucketName.split(\":\").length >= 6;\n    const isValidArn = [arn, partition, service, account, typeOrId].filter(Boolean).length === 5;\n    if (isArn && !isValidArn) {\n        throw new Error(`Invalid ARN: ${bucketName} was an invalid ARN.`);\n    }\n    return arn === \"arn\" && !!partition && !!service && !!account && !!typeOrId;\n};\n","export const createConfigValueProvider = (configKey, canonicalEndpointParamKey, config) => {\n    const configProvider = async () => {\n        const configValue = config[configKey] ?? config[canonicalEndpointParamKey];\n        if (typeof configValue === \"function\") {\n            return configValue();\n        }\n        return configValue;\n    };\n    if (configKey === \"endpoint\" || canonicalEndpointParamKey === \"endpoint\") {\n        return async () => {\n            const endpoint = await configProvider();\n            if (endpoint && typeof endpoint === \"object\") {\n                if (\"url\" in endpoint) {\n                    return endpoint.url.href;\n                }\n                if (\"hostname\" in endpoint) {\n                    const { protocol, hostname, port, path } = endpoint;\n                    return `${protocol}//${hostname}${port ? \":\" + port : \"\"}${path}`;\n                }\n            }\n            return endpoint;\n        };\n    }\n    return configProvider;\n};\n","import { resolveParamsForS3 } from \"../service-customizations\";\nimport { createConfigValueProvider } from \"./createConfigValueProvider\";\nexport const getEndpointFromInstructions = async (commandInput, instructionsSupplier, clientConfig, context) => {\n    const endpointParams = await resolveParams(commandInput, instructionsSupplier, clientConfig);\n    if (typeof clientConfig.endpointProvider !== \"function\") {\n        throw new Error(\"config.endpointProvider is not set.\");\n    }\n    const endpoint = clientConfig.endpointProvider(endpointParams, context);\n    return endpoint;\n};\nexport const resolveParams = async (commandInput, instructionsSupplier, clientConfig) => {\n    const endpointParams = {};\n    const instructions = instructionsSupplier?.getEndpointParameterInstructions?.() || {};\n    for (const [name, instruction] of Object.entries(instructions)) {\n        switch (instruction.type) {\n            case \"staticContextParams\":\n                endpointParams[name] = instruction.value;\n                break;\n            case \"contextParams\":\n                endpointParams[name] = commandInput[instruction.name];\n                break;\n            case \"clientContextParams\":\n            case \"builtInParams\":\n                endpointParams[name] = await createConfigValueProvider(instruction.name, name, clientConfig)();\n                break;\n            default:\n                throw new Error(\"Unrecognized endpoint parameter instruction: \" + JSON.stringify(instruction));\n        }\n    }\n    if (Object.keys(instructions).length === 0) {\n        Object.assign(endpointParams, clientConfig);\n    }\n    if (String(clientConfig.serviceId).toLowerCase() === \"s3\") {\n        await resolveParamsForS3(endpointParams);\n    }\n    return endpointParams;\n};\n","export function parseQueryString(querystring) {\n    const query = {};\n    querystring = querystring.replace(/^\\?/, \"\");\n    if (querystring) {\n        for (const pair of querystring.split(\"&\")) {\n            let [key, value = null] = pair.split(\"=\");\n            key = decodeURIComponent(key);\n            if (value) {\n                value = decodeURIComponent(value);\n            }\n            if (!(key in query)) {\n                query[key] = value;\n            }\n            else if (Array.isArray(query[key])) {\n                query[key].push(value);\n            }\n            else {\n                query[key] = [query[key], value];\n            }\n        }\n    }\n    return query;\n}\n","import { parseQueryString } from \"@smithy/querystring-parser\";\nexport const parseUrl = (url) => {\n    if (typeof url === \"string\") {\n        return parseUrl(new URL(url));\n    }\n    const { hostname, pathname, port, protocol, search } = url;\n    let query;\n    if (search) {\n        query = parseQueryString(search);\n    }\n    return {\n        hostname,\n        port: port ? parseInt(port) : undefined,\n        protocol,\n        path: pathname,\n        query,\n    };\n};\n","import { parseUrl } from \"@smithy/url-parser\";\nexport const toEndpointV1 = (endpoint) => {\n    if (typeof endpoint === \"object\") {\n        if (\"url\" in endpoint) {\n            return parseUrl(endpoint.url);\n        }\n        return endpoint;\n    }\n    return parseUrl(endpoint);\n};\n","import { getEndpointFromInstructions } from \"./adaptors/getEndpointFromInstructions\";\nexport const endpointMiddleware = ({ config, instructions, }) => {\n    return (next, context) => async (args) => {\n        const endpoint = await getEndpointFromInstructions(args.input, {\n            getEndpointParameterInstructions() {\n                return instructions;\n            },\n        }, { ...config }, context);\n        context.endpointV2 = endpoint;\n        context.authSchemes = endpoint.properties?.authSchemes;\n        const authScheme = context.authSchemes?.[0];\n        if (authScheme) {\n            context[\"signing_region\"] = authScheme.signingRegion;\n            context[\"signing_service\"] = authScheme.signingName;\n        }\n        return next({\n            ...args,\n        });\n    };\n};\n","export const deserializerMiddleware = (options, deserializer) => (next, context) => async (args) => {\n    const { response } = await next(args);\n    try {\n        const parsed = await deserializer(response, options);\n        return {\n            response,\n            output: parsed,\n        };\n    }\n    catch (error) {\n        Object.defineProperty(error, \"$response\", {\n            value: response,\n        });\n        if (!(\"$metadata\" in error)) {\n            const hint = `Deserialization error: to see the raw response, inspect the hidden field {error}.$response on this object.`;\n            error.message += \"\\n  \" + hint;\n        }\n        throw error;\n    }\n};\n","export const serializerMiddleware = (options, serializer) => (next, context) => async (args) => {\n    const endpoint = context.endpointV2?.url && options.urlParser\n        ? async () => options.urlParser(context.endpointV2.url)\n        : options.endpoint;\n    if (!endpoint) {\n        throw new Error(\"No valid endpoint provider available.\");\n    }\n    const request = await serializer(args.input, { ...options, endpoint });\n    return next({\n        ...args,\n        request,\n    });\n};\n","import { deserializerMiddleware } from \"./deserializerMiddleware\";\nimport { serializerMiddleware } from \"./serializerMiddleware\";\nexport const deserializerMiddlewareOption = {\n    name: \"deserializerMiddleware\",\n    step: \"deserialize\",\n    tags: [\"DESERIALIZER\"],\n    override: true,\n};\nexport const serializerMiddlewareOption = {\n    name: \"serializerMiddleware\",\n    step: \"serialize\",\n    tags: [\"SERIALIZER\"],\n    override: true,\n};\nexport function getSerdePlugin(config, serializer, deserializer) {\n    return {\n        applyToStack: (commandStack) => {\n            commandStack.add(deserializerMiddleware(config, deserializer), deserializerMiddlewareOption);\n            commandStack.add(serializerMiddleware(config, serializer), serializerMiddlewareOption);\n        },\n    };\n}\n","import { serializerMiddlewareOption } from \"@smithy/middleware-serde\";\nimport { endpointMiddleware } from \"./endpointMiddleware\";\nexport const endpointMiddlewareOptions = {\n    step: \"serialize\",\n    tags: [\"ENDPOINT_PARAMETERS\", \"ENDPOINT_V2\", \"ENDPOINT\"],\n    name: \"endpointV2Middleware\",\n    override: true,\n    relation: \"before\",\n    toMiddleware: serializerMiddlewareOption.name,\n};\nexport const getEndpointPlugin = (config, instructions) => ({\n    applyToStack: (clientStack) => {\n        clientStack.addRelativeTo(endpointMiddleware({\n            config,\n            instructions,\n        }), endpointMiddlewareOptions);\n    },\n});\n","import { normalizeProvider } from \"@smithy/util-middleware\";\nimport { toEndpointV1 } from \"./adaptors/toEndpointV1\";\nexport const resolveEndpointConfig = (input) => {\n    const tls = input.tls ?? true;\n    const { endpoint } = input;\n    const customEndpointProvider = endpoint != null ? async () => toEndpointV1(await normalizeProvider(endpoint)()) : undefined;\n    const isCustomEndpoint = !!endpoint;\n    return {\n        ...input,\n        endpoint: customEndpointProvider,\n        tls,\n        isCustomEndpoint,\n        useDualstackEndpoint: normalizeProvider(input.useDualstackEndpoint ?? false),\n        useFipsEndpoint: normalizeProvider(input.useFipsEndpoint ?? false),\n    };\n};\n","export var RETRY_MODES;\n(function (RETRY_MODES) {\n    RETRY_MODES[\"STANDARD\"] = \"standard\";\n    RETRY_MODES[\"ADAPTIVE\"] = \"adaptive\";\n})(RETRY_MODES || (RETRY_MODES = {}));\nexport const DEFAULT_MAX_ATTEMPTS = 3;\nexport const DEFAULT_RETRY_MODE = RETRY_MODES.STANDARD;\n","export const CLOCK_SKEW_ERROR_CODES = [\n    \"AuthFailure\",\n    \"InvalidSignatureException\",\n    \"RequestExpired\",\n    \"RequestInTheFuture\",\n    \"RequestTimeTooSkewed\",\n    \"SignatureDoesNotMatch\",\n];\nexport const THROTTLING_ERROR_CODES = [\n    \"BandwidthLimitExceeded\",\n    \"EC2ThrottledException\",\n    \"LimitExceededException\",\n    \"PriorRequestNotComplete\",\n    \"ProvisionedThroughputExceededException\",\n    \"RequestLimitExceeded\",\n    \"RequestThrottled\",\n    \"RequestThrottledException\",\n    \"SlowDown\",\n    \"ThrottledException\",\n    \"Throttling\",\n    \"ThrottlingException\",\n    \"TooManyRequestsException\",\n    \"TransactionInProgressException\",\n];\nexport const TRANSIENT_ERROR_CODES = [\"TimeoutError\", \"RequestTimeout\", \"RequestTimeoutException\"];\nexport const TRANSIENT_ERROR_STATUS_CODES = [500, 502, 503, 504];\nexport const NODEJS_TIMEOUT_ERROR_CODES = [\"ECONNRESET\", \"ECONNREFUSED\", \"EPIPE\", \"ETIMEDOUT\"];\n","import { CLOCK_SKEW_ERROR_CODES, NODEJS_TIMEOUT_ERROR_CODES, THROTTLING_ERROR_CODES, TRANSIENT_ERROR_CODES, TRANSIENT_ERROR_STATUS_CODES, } from \"./constants\";\nexport const isRetryableByTrait = (error) => error.$retryable !== undefined;\nexport const isClockSkewError = (error) => CLOCK_SKEW_ERROR_CODES.includes(error.name);\nexport const isThrottlingError = (error) => error.$metadata?.httpStatusCode === 429 ||\n    THROTTLING_ERROR_CODES.includes(error.name) ||\n    error.$retryable?.throttling == true;\nexport const isTransientError = (error) => TRANSIENT_ERROR_CODES.includes(error.name) ||\n    NODEJS_TIMEOUT_ERROR_CODES.includes(error?.code || \"\") ||\n    TRANSIENT_ERROR_STATUS_CODES.includes(error.$metadata?.httpStatusCode || 0);\nexport const isServerError = (error) => {\n    if (error.$metadata?.httpStatusCode !== undefined) {\n        const statusCode = error.$metadata.httpStatusCode;\n        if (500 <= statusCode && statusCode <= 599 && !isTransientError(error)) {\n            return true;\n        }\n        return false;\n    }\n    return false;\n};\n","import { isThrottlingError } from \"@smithy/service-error-classification\";\nexport class DefaultRateLimiter {\n    constructor(options) {\n        this.currentCapacity = 0;\n        this.enabled = false;\n        this.lastMaxRate = 0;\n        this.measuredTxRate = 0;\n        this.requestCount = 0;\n        this.lastTimestamp = 0;\n        this.timeWindow = 0;\n        this.beta = options?.beta ?? 0.7;\n        this.minCapacity = options?.minCapacity ?? 1;\n        this.minFillRate = options?.minFillRate ?? 0.5;\n        this.scaleConstant = options?.scaleConstant ?? 0.4;\n        this.smooth = options?.smooth ?? 0.8;\n        const currentTimeInSeconds = this.getCurrentTimeInSeconds();\n        this.lastThrottleTime = currentTimeInSeconds;\n        this.lastTxRateBucket = Math.floor(this.getCurrentTimeInSeconds());\n        this.fillRate = this.minFillRate;\n        this.maxCapacity = this.minCapacity;\n    }\n    getCurrentTimeInSeconds() {\n        return Date.now() / 1000;\n    }\n    async getSendToken() {\n        return this.acquireTokenBucket(1);\n    }\n    async acquireTokenBucket(amount) {\n        if (!this.enabled) {\n            return;\n        }\n        this.refillTokenBucket();\n        if (amount > this.currentCapacity) {\n            const delay = ((amount - this.currentCapacity) / this.fillRate) * 1000;\n            await new Promise((resolve) => setTimeout(resolve, delay));\n        }\n        this.currentCapacity = this.currentCapacity - amount;\n    }\n    refillTokenBucket() {\n        const timestamp = this.getCurrentTimeInSeconds();\n        if (!this.lastTimestamp) {\n            this.lastTimestamp = timestamp;\n            return;\n        }\n        const fillAmount = (timestamp - this.lastTimestamp) * this.fillRate;\n        this.currentCapacity = Math.min(this.maxCapacity, this.currentCapacity + fillAmount);\n        this.lastTimestamp = timestamp;\n    }\n    updateClientSendingRate(response) {\n        let calculatedRate;\n        this.updateMeasuredRate();\n        if (isThrottlingError(response)) {\n            const rateToUse = !this.enabled ? this.measuredTxRate : Math.min(this.measuredTxRate, this.fillRate);\n            this.lastMaxRate = rateToUse;\n            this.calculateTimeWindow();\n            this.lastThrottleTime = this.getCurrentTimeInSeconds();\n            calculatedRate = this.cubicThrottle(rateToUse);\n            this.enableTokenBucket();\n        }\n        else {\n            this.calculateTimeWindow();\n            calculatedRate = this.cubicSuccess(this.getCurrentTimeInSeconds());\n        }\n        const newRate = Math.min(calculatedRate, 2 * this.measuredTxRate);\n        this.updateTokenBucketRate(newRate);\n    }\n    calculateTimeWindow() {\n        this.timeWindow = this.getPrecise(Math.pow((this.lastMaxRate * (1 - this.beta)) / this.scaleConstant, 1 / 3));\n    }\n    cubicThrottle(rateToUse) {\n        return this.getPrecise(rateToUse * this.beta);\n    }\n    cubicSuccess(timestamp) {\n        return this.getPrecise(this.scaleConstant * Math.pow(timestamp - this.lastThrottleTime - this.timeWindow, 3) + this.lastMaxRate);\n    }\n    enableTokenBucket() {\n        this.enabled = true;\n    }\n    updateTokenBucketRate(newRate) {\n        this.refillTokenBucket();\n        this.fillRate = Math.max(newRate, this.minFillRate);\n        this.maxCapacity = Math.max(newRate, this.minCapacity);\n        this.currentCapacity = Math.min(this.currentCapacity, this.maxCapacity);\n    }\n    updateMeasuredRate() {\n        const t = this.getCurrentTimeInSeconds();\n        const timeBucket = Math.floor(t * 2) / 2;\n        this.requestCount++;\n        if (timeBucket > this.lastTxRateBucket) {\n            const currentRate = this.requestCount / (timeBucket - this.lastTxRateBucket);\n            this.measuredTxRate = this.getPrecise(currentRate * this.smooth + this.measuredTxRate * (1 - this.smooth));\n            this.requestCount = 0;\n            this.lastTxRateBucket = timeBucket;\n        }\n    }\n    getPrecise(num) {\n        return parseFloat(num.toFixed(8));\n    }\n}\n","export const DEFAULT_RETRY_DELAY_BASE = 100;\nexport const MAXIMUM_RETRY_DELAY = 20 * 1000;\nexport const THROTTLING_RETRY_DELAY_BASE = 500;\nexport const INITIAL_RETRY_TOKENS = 500;\nexport const RETRY_COST = 5;\nexport const TIMEOUT_RETRY_COST = 10;\nexport const NO_RETRY_INCREMENT = 1;\nexport const INVOCATION_ID_HEADER = \"amz-sdk-invocation-id\";\nexport const REQUEST_HEADER = \"amz-sdk-request\";\n","import { DEFAULT_RETRY_DELAY_BASE, MAXIMUM_RETRY_DELAY } from \"./constants\";\nexport const getDefaultRetryBackoffStrategy = () => {\n    let delayBase = DEFAULT_RETRY_DELAY_BASE;\n    const computeNextBackoffDelay = (attempts) => {\n        return Math.floor(Math.min(MAXIMUM_RETRY_DELAY, Math.random() * 2 ** attempts * delayBase));\n    };\n    const setDelayBase = (delay) => {\n        delayBase = delay;\n    };\n    return {\n        computeNextBackoffDelay,\n        setDelayBase,\n    };\n};\n","import { MAXIMUM_RETRY_DELAY } from \"./constants\";\nexport const createDefaultRetryToken = ({ retryDelay, retryCount, retryCost, }) => {\n    const getRetryCount = () => retryCount;\n    const getRetryDelay = () => Math.min(MAXIMUM_RETRY_DELAY, retryDelay);\n    const getRetryCost = () => retryCost;\n    return {\n        getRetryCount,\n        getRetryDelay,\n        getRetryCost,\n    };\n};\n","import { DEFAULT_MAX_ATTEMPTS, RETRY_MODES } from \"./config\";\nimport { DEFAULT_RETRY_DELAY_BASE, INITIAL_RETRY_TOKENS, NO_RETRY_INCREMENT, RETRY_COST, THROTTLING_RETRY_DELAY_BASE, TIMEOUT_RETRY_COST, } from \"./constants\";\nimport { getDefaultRetryBackoffStrategy } from \"./defaultRetryBackoffStrategy\";\nimport { createDefaultRetryToken } from \"./defaultRetryToken\";\nexport class StandardRetryStrategy {\n    constructor(maxAttempts) {\n        this.maxAttempts = maxAttempts;\n        this.mode = RETRY_MODES.STANDARD;\n        this.capacity = INITIAL_RETRY_TOKENS;\n        this.retryBackoffStrategy = getDefaultRetryBackoffStrategy();\n        this.maxAttemptsProvider = typeof maxAttempts === \"function\" ? maxAttempts : async () => maxAttempts;\n    }\n    async acquireInitialRetryToken(retryTokenScope) {\n        return createDefaultRetryToken({\n            retryDelay: DEFAULT_RETRY_DELAY_BASE,\n            retryCount: 0,\n        });\n    }\n    async refreshRetryTokenForRetry(token, errorInfo) {\n        const maxAttempts = await this.getMaxAttempts();\n        if (this.shouldRetry(token, errorInfo, maxAttempts)) {\n            const errorType = errorInfo.errorType;\n            this.retryBackoffStrategy.setDelayBase(errorType === \"THROTTLING\" ? THROTTLING_RETRY_DELAY_BASE : DEFAULT_RETRY_DELAY_BASE);\n            const delayFromErrorType = this.retryBackoffStrategy.computeNextBackoffDelay(token.getRetryCount());\n            const retryDelay = errorInfo.retryAfterHint\n                ? Math.max(errorInfo.retryAfterHint.getTime() - Date.now() || 0, delayFromErrorType)\n                : delayFromErrorType;\n            const capacityCost = this.getCapacityCost(errorType);\n            this.capacity -= capacityCost;\n            return createDefaultRetryToken({\n                retryDelay,\n                retryCount: token.getRetryCount() + 1,\n                retryCost: capacityCost,\n            });\n        }\n        throw new Error(\"No retry token available\");\n    }\n    recordSuccess(token) {\n        this.capacity = Math.max(INITIAL_RETRY_TOKENS, this.capacity + (token.getRetryCost() ?? NO_RETRY_INCREMENT));\n    }\n    getCapacity() {\n        return this.capacity;\n    }\n    async getMaxAttempts() {\n        try {\n            return await this.maxAttemptsProvider();\n        }\n        catch (error) {\n            console.warn(`Max attempts provider could not resolve. Using default of ${DEFAULT_MAX_ATTEMPTS}`);\n            return DEFAULT_MAX_ATTEMPTS;\n        }\n    }\n    shouldRetry(tokenToRenew, errorInfo, maxAttempts) {\n        const attempts = tokenToRenew.getRetryCount() + 1;\n        return (attempts < maxAttempts &&\n            this.capacity >= this.getCapacityCost(errorInfo.errorType) &&\n            this.isRetryableError(errorInfo.errorType));\n    }\n    getCapacityCost(errorType) {\n        return errorType === \"TRANSIENT\" ? TIMEOUT_RETRY_COST : RETRY_COST;\n    }\n    isRetryableError(errorType) {\n        return errorType === \"THROTTLING\" || errorType === \"TRANSIENT\";\n    }\n}\n","import { RETRY_MODES } from \"./config\";\nimport { DefaultRateLimiter } from \"./DefaultRateLimiter\";\nimport { StandardRetryStrategy } from \"./StandardRetryStrategy\";\nexport class AdaptiveRetryStrategy {\n    constructor(maxAttemptsProvider, options) {\n        this.maxAttemptsProvider = maxAttemptsProvider;\n        this.mode = RETRY_MODES.ADAPTIVE;\n        const { rateLimiter } = options ?? {};\n        this.rateLimiter = rateLimiter ?? new DefaultRateLimiter();\n        this.standardRetryStrategy = new StandardRetryStrategy(maxAttemptsProvider);\n    }\n    async acquireInitialRetryToken(retryTokenScope) {\n        await this.rateLimiter.getSendToken();\n        return this.standardRetryStrategy.acquireInitialRetryToken(retryTokenScope);\n    }\n    async refreshRetryTokenForRetry(tokenToRenew, errorInfo) {\n        this.rateLimiter.updateClientSendingRate(errorInfo);\n        return this.standardRetryStrategy.refreshRetryTokenForRetry(tokenToRenew, errorInfo);\n    }\n    recordSuccess(token) {\n        this.rateLimiter.updateClientSendingRate({});\n        this.standardRetryStrategy.recordSuccess(token);\n    }\n}\n","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","export const asSdkError = (error) => {\n    if (error instanceof Error)\n        return error;\n    if (error instanceof Object)\n        return Object.assign(new Error(), error);\n    if (typeof error === \"string\")\n        return new Error(error);\n    return new Error(`AWS SDK error wrapper for ${error}`);\n};\n","import { normalizeProvider } from \"@smithy/util-middleware\";\nimport { AdaptiveRetryStrategy, DEFAULT_MAX_ATTEMPTS, DEFAULT_RETRY_MODE, RETRY_MODES, StandardRetryStrategy, } from \"@smithy/util-retry\";\nexport const ENV_MAX_ATTEMPTS = \"AWS_MAX_ATTEMPTS\";\nexport const CONFIG_MAX_ATTEMPTS = \"max_attempts\";\nexport const NODE_MAX_ATTEMPT_CONFIG_OPTIONS = {\n    environmentVariableSelector: (env) => {\n        const value = env[ENV_MAX_ATTEMPTS];\n        if (!value)\n            return undefined;\n        const maxAttempt = parseInt(value);\n        if (Number.isNaN(maxAttempt)) {\n            throw new Error(`Environment variable ${ENV_MAX_ATTEMPTS} mast be a number, got \"${value}\"`);\n        }\n        return maxAttempt;\n    },\n    configFileSelector: (profile) => {\n        const value = profile[CONFIG_MAX_ATTEMPTS];\n        if (!value)\n            return undefined;\n        const maxAttempt = parseInt(value);\n        if (Number.isNaN(maxAttempt)) {\n            throw new Error(`Shared config file entry ${CONFIG_MAX_ATTEMPTS} mast be a number, got \"${value}\"`);\n        }\n        return maxAttempt;\n    },\n    default: DEFAULT_MAX_ATTEMPTS,\n};\nexport const resolveRetryConfig = (input) => {\n    const { retryStrategy } = input;\n    const maxAttempts = normalizeProvider(input.maxAttempts ?? DEFAULT_MAX_ATTEMPTS);\n    return {\n        ...input,\n        maxAttempts,\n        retryStrategy: async () => {\n            if (retryStrategy) {\n                return retryStrategy;\n            }\n            const retryMode = await normalizeProvider(input.retryMode)();\n            if (retryMode === RETRY_MODES.ADAPTIVE) {\n                return new AdaptiveRetryStrategy(maxAttempts);\n            }\n            return new StandardRetryStrategy(maxAttempts);\n        },\n    };\n};\nexport const ENV_RETRY_MODE = \"AWS_RETRY_MODE\";\nexport const CONFIG_RETRY_MODE = \"retry_mode\";\nexport const NODE_RETRY_MODE_CONFIG_OPTIONS = {\n    environmentVariableSelector: (env) => env[ENV_RETRY_MODE],\n    configFileSelector: (profile) => profile[CONFIG_RETRY_MODE],\n    default: DEFAULT_RETRY_MODE,\n};\n","import { HttpRequest, HttpResponse } from \"@smithy/protocol-http\";\nimport { isServerError, isThrottlingError, isTransientError } from \"@smithy/service-error-classification\";\nimport { INVOCATION_ID_HEADER, REQUEST_HEADER } from \"@smithy/util-retry\";\nimport { v4 } from \"uuid\";\nimport { asSdkError } from \"./util\";\nexport const retryMiddleware = (options) => (next, context) => async (args) => {\n    let retryStrategy = await options.retryStrategy();\n    const maxAttempts = await options.maxAttempts();\n    if (isRetryStrategyV2(retryStrategy)) {\n        retryStrategy = retryStrategy;\n        let retryToken = await retryStrategy.acquireInitialRetryToken(context[\"partition_id\"]);\n        let lastError = new Error();\n        let attempts = 0;\n        let totalRetryDelay = 0;\n        const { request } = args;\n        if (HttpRequest.isInstance(request)) {\n            request.headers[INVOCATION_ID_HEADER] = v4();\n        }\n        while (true) {\n            try {\n                if (HttpRequest.isInstance(request)) {\n                    request.headers[REQUEST_HEADER] = `attempt=${attempts + 1}; max=${maxAttempts}`;\n                }\n                const { response, output } = await next(args);\n                retryStrategy.recordSuccess(retryToken);\n                output.$metadata.attempts = attempts + 1;\n                output.$metadata.totalRetryDelay = totalRetryDelay;\n                return { response, output };\n            }\n            catch (e) {\n                const retryErrorInfo = getRetryErrorInfo(e);\n                lastError = asSdkError(e);\n                try {\n                    retryToken = await retryStrategy.refreshRetryTokenForRetry(retryToken, retryErrorInfo);\n                }\n                catch (refreshError) {\n                    if (!lastError.$metadata) {\n                        lastError.$metadata = {};\n                    }\n                    lastError.$metadata.attempts = attempts + 1;\n                    lastError.$metadata.totalRetryDelay = totalRetryDelay;\n                    throw lastError;\n                }\n                attempts = retryToken.getRetryCount();\n                const delay = retryToken.getRetryDelay();\n                totalRetryDelay += delay;\n                await new Promise((resolve) => setTimeout(resolve, delay));\n            }\n        }\n    }\n    else {\n        retryStrategy = retryStrategy;\n        if (retryStrategy?.mode)\n            context.userAgent = [...(context.userAgent || []), [\"cfg/retry-mode\", retryStrategy.mode]];\n        return retryStrategy.retry(next, args);\n    }\n};\nconst isRetryStrategyV2 = (retryStrategy) => typeof retryStrategy.acquireInitialRetryToken !== \"undefined\" &&\n    typeof retryStrategy.refreshRetryTokenForRetry !== \"undefined\" &&\n    typeof retryStrategy.recordSuccess !== \"undefined\";\nconst getRetryErrorInfo = (error) => {\n    const errorInfo = {\n        errorType: getRetryErrorType(error),\n    };\n    const retryAfterHint = getRetryAfterHint(error.$response);\n    if (retryAfterHint) {\n        errorInfo.retryAfterHint = retryAfterHint;\n    }\n    return errorInfo;\n};\nconst getRetryErrorType = (error) => {\n    if (isThrottlingError(error))\n        return \"THROTTLING\";\n    if (isTransientError(error))\n        return \"TRANSIENT\";\n    if (isServerError(error))\n        return \"SERVER_ERROR\";\n    return \"CLIENT_ERROR\";\n};\nexport const retryMiddlewareOptions = {\n    name: \"retryMiddleware\",\n    tags: [\"RETRY\"],\n    step: \"finalizeRequest\",\n    priority: \"high\",\n    override: true,\n};\nexport const getRetryPlugin = (options) => ({\n    applyToStack: (clientStack) => {\n        clientStack.add(retryMiddleware(options), retryMiddlewareOptions);\n    },\n});\nexport const getRetryAfterHint = (response) => {\n    if (!HttpResponse.isInstance(response))\n        return;\n    const retryAfterHeaderName = Object.keys(response.headers).find((key) => key.toLowerCase() === \"retry-after\");\n    if (!retryAfterHeaderName)\n        return;\n    const retryAfter = response.headers[retryAfterHeaderName];\n    const retryAfterSeconds = Number(retryAfter);\n    if (!Number.isNaN(retryAfterSeconds))\n        return new Date(retryAfterSeconds * 1000);\n    const retryAfterDate = new Date(retryAfter);\n    return retryAfterDate;\n};\n","export class NoOpLogger {\n    trace() { }\n    debug() { }\n    info() { }\n    warn() { }\n    error() { }\n}\n","export const constructStack = () => {\n    let absoluteEntries = [];\n    let relativeEntries = [];\n    const entriesNameSet = new Set();\n    const sort = (entries) => entries.sort((a, b) => stepWeights[b.step] - stepWeights[a.step] ||\n        priorityWeights[b.priority || \"normal\"] - priorityWeights[a.priority || \"normal\"]);\n    const removeByName = (toRemove) => {\n        let isRemoved = false;\n        const filterCb = (entry) => {\n            if (entry.name && entry.name === toRemove) {\n                isRemoved = true;\n                entriesNameSet.delete(toRemove);\n                return false;\n            }\n            return true;\n        };\n        absoluteEntries = absoluteEntries.filter(filterCb);\n        relativeEntries = relativeEntries.filter(filterCb);\n        return isRemoved;\n    };\n    const removeByReference = (toRemove) => {\n        let isRemoved = false;\n        const filterCb = (entry) => {\n            if (entry.middleware === toRemove) {\n                isRemoved = true;\n                if (entry.name)\n                    entriesNameSet.delete(entry.name);\n                return false;\n            }\n            return true;\n        };\n        absoluteEntries = absoluteEntries.filter(filterCb);\n        relativeEntries = relativeEntries.filter(filterCb);\n        return isRemoved;\n    };\n    const cloneTo = (toStack) => {\n        absoluteEntries.forEach((entry) => {\n            toStack.add(entry.middleware, { ...entry });\n        });\n        relativeEntries.forEach((entry) => {\n            toStack.addRelativeTo(entry.middleware, { ...entry });\n        });\n        return toStack;\n    };\n    const expandRelativeMiddlewareList = (from) => {\n        const expandedMiddlewareList = [];\n        from.before.forEach((entry) => {\n            if (entry.before.length === 0 && entry.after.length === 0) {\n                expandedMiddlewareList.push(entry);\n            }\n            else {\n                expandedMiddlewareList.push(...expandRelativeMiddlewareList(entry));\n            }\n        });\n        expandedMiddlewareList.push(from);\n        from.after.reverse().forEach((entry) => {\n            if (entry.before.length === 0 && entry.after.length === 0) {\n                expandedMiddlewareList.push(entry);\n            }\n            else {\n                expandedMiddlewareList.push(...expandRelativeMiddlewareList(entry));\n            }\n        });\n        return expandedMiddlewareList;\n    };\n    const getMiddlewareList = (debug = false) => {\n        const normalizedAbsoluteEntries = [];\n        const normalizedRelativeEntries = [];\n        const normalizedEntriesNameMap = {};\n        absoluteEntries.forEach((entry) => {\n            const normalizedEntry = {\n                ...entry,\n                before: [],\n                after: [],\n            };\n            if (normalizedEntry.name)\n                normalizedEntriesNameMap[normalizedEntry.name] = normalizedEntry;\n            normalizedAbsoluteEntries.push(normalizedEntry);\n        });\n        relativeEntries.forEach((entry) => {\n            const normalizedEntry = {\n                ...entry,\n                before: [],\n                after: [],\n            };\n            if (normalizedEntry.name)\n                normalizedEntriesNameMap[normalizedEntry.name] = normalizedEntry;\n            normalizedRelativeEntries.push(normalizedEntry);\n        });\n        normalizedRelativeEntries.forEach((entry) => {\n            if (entry.toMiddleware) {\n                const toMiddleware = normalizedEntriesNameMap[entry.toMiddleware];\n                if (toMiddleware === undefined) {\n                    if (debug) {\n                        return;\n                    }\n                    throw new Error(`${entry.toMiddleware} is not found when adding ${entry.name || \"anonymous\"} middleware ${entry.relation} ${entry.toMiddleware}`);\n                }\n                if (entry.relation === \"after\") {\n                    toMiddleware.after.push(entry);\n                }\n                if (entry.relation === \"before\") {\n                    toMiddleware.before.push(entry);\n                }\n            }\n        });\n        const mainChain = sort(normalizedAbsoluteEntries)\n            .map(expandRelativeMiddlewareList)\n            .reduce((wholeList, expandedMiddlewareList) => {\n            wholeList.push(...expandedMiddlewareList);\n            return wholeList;\n        }, []);\n        return mainChain;\n    };\n    const stack = {\n        add: (middleware, options = {}) => {\n            const { name, override } = options;\n            const entry = {\n                step: \"initialize\",\n                priority: \"normal\",\n                middleware,\n                ...options,\n            };\n            if (name) {\n                if (entriesNameSet.has(name)) {\n                    if (!override)\n                        throw new Error(`Duplicate middleware name '${name}'`);\n                    const toOverrideIndex = absoluteEntries.findIndex((entry) => entry.name === name);\n                    const toOverride = absoluteEntries[toOverrideIndex];\n                    if (toOverride.step !== entry.step || toOverride.priority !== entry.priority) {\n                        throw new Error(`\"${name}\" middleware with ${toOverride.priority} priority in ${toOverride.step} step cannot be ` +\n                            `overridden by same-name middleware with ${entry.priority} priority in ${entry.step} step.`);\n                    }\n                    absoluteEntries.splice(toOverrideIndex, 1);\n                }\n                entriesNameSet.add(name);\n            }\n            absoluteEntries.push(entry);\n        },\n        addRelativeTo: (middleware, options) => {\n            const { name, override } = options;\n            const entry = {\n                middleware,\n                ...options,\n            };\n            if (name) {\n                if (entriesNameSet.has(name)) {\n                    if (!override)\n                        throw new Error(`Duplicate middleware name '${name}'`);\n                    const toOverrideIndex = relativeEntries.findIndex((entry) => entry.name === name);\n                    const toOverride = relativeEntries[toOverrideIndex];\n                    if (toOverride.toMiddleware !== entry.toMiddleware || toOverride.relation !== entry.relation) {\n                        throw new Error(`\"${name}\" middleware ${toOverride.relation} \"${toOverride.toMiddleware}\" middleware cannot be overridden ` +\n                            `by same-name middleware ${entry.relation} \"${entry.toMiddleware}\" middleware.`);\n                    }\n                    relativeEntries.splice(toOverrideIndex, 1);\n                }\n                entriesNameSet.add(name);\n            }\n            relativeEntries.push(entry);\n        },\n        clone: () => cloneTo(constructStack()),\n        use: (plugin) => {\n            plugin.applyToStack(stack);\n        },\n        remove: (toRemove) => {\n            if (typeof toRemove === \"string\")\n                return removeByName(toRemove);\n            else\n                return removeByReference(toRemove);\n        },\n        removeByTag: (toRemove) => {\n            let isRemoved = false;\n            const filterCb = (entry) => {\n                const { tags, name } = entry;\n                if (tags && tags.includes(toRemove)) {\n                    if (name)\n                        entriesNameSet.delete(name);\n                    isRemoved = true;\n                    return false;\n                }\n                return true;\n            };\n            absoluteEntries = absoluteEntries.filter(filterCb);\n            relativeEntries = relativeEntries.filter(filterCb);\n            return isRemoved;\n        },\n        concat: (from) => {\n            const cloned = cloneTo(constructStack());\n            cloned.use(from);\n            return cloned;\n        },\n        applyToStack: cloneTo,\n        identify: () => {\n            return getMiddlewareList(true).map((mw) => {\n                return mw.name + \": \" + (mw.tags || []).join(\",\");\n            });\n        },\n        resolve: (handler, context) => {\n            for (const middleware of getMiddlewareList()\n                .map((entry) => entry.middleware)\n                .reverse()) {\n                handler = middleware(handler, context);\n            }\n            return handler;\n        },\n    };\n    return stack;\n};\nconst stepWeights = {\n    initialize: 5,\n    serialize: 4,\n    build: 3,\n    finalizeRequest: 2,\n    deserialize: 1,\n};\nconst priorityWeights = {\n    high: 3,\n    normal: 2,\n    low: 1,\n};\n","import { constructStack } from \"@smithy/middleware-stack\";\nexport class Client {\n    constructor(config) {\n        this.middlewareStack = constructStack();\n        this.config = config;\n    }\n    send(command, optionsOrCb, cb) {\n        const options = typeof optionsOrCb !== \"function\" ? optionsOrCb : undefined;\n        const callback = typeof optionsOrCb === \"function\" ? optionsOrCb : cb;\n        const handler = command.resolveMiddleware(this.middlewareStack, this.config, options);\n        if (callback) {\n            handler(command)\n                .then((result) => callback(null, result.output), (err) => callback(err))\n                .catch(() => { });\n        }\n        else {\n            return handler(command).then((result) => result.output);\n        }\n    }\n    destroy() {\n        if (this.config.requestHandler.destroy)\n            this.config.requestHandler.destroy();\n    }\n}\n","const alphabetByEncoding = {};\nconst alphabetByValue = new Array(64);\nfor (let i = 0, start = \"A\".charCodeAt(0), limit = \"Z\".charCodeAt(0); i + start <= limit; i++) {\n    const char = String.fromCharCode(i + start);\n    alphabetByEncoding[char] = i;\n    alphabetByValue[i] = char;\n}\nfor (let i = 0, start = \"a\".charCodeAt(0), limit = \"z\".charCodeAt(0); i + start <= limit; i++) {\n    const char = String.fromCharCode(i + start);\n    const index = i + 26;\n    alphabetByEncoding[char] = index;\n    alphabetByValue[index] = char;\n}\nfor (let i = 0; i < 10; i++) {\n    alphabetByEncoding[i.toString(10)] = i + 52;\n    const char = i.toString(10);\n    const index = i + 52;\n    alphabetByEncoding[char] = index;\n    alphabetByValue[index] = char;\n}\nalphabetByEncoding[\"+\"] = 62;\nalphabetByValue[62] = \"+\";\nalphabetByEncoding[\"/\"] = 63;\nalphabetByValue[63] = \"/\";\nconst bitsPerLetter = 6;\nconst bitsPerByte = 8;\nconst maxLetterValue = 0b111111;\nexport { alphabetByEncoding, alphabetByValue, bitsPerLetter, bitsPerByte, maxLetterValue };\n","import { alphabetByEncoding, bitsPerByte, bitsPerLetter } from \"./constants.browser\";\nexport const fromBase64 = (input) => {\n    let totalByteLength = (input.length / 4) * 3;\n    if (input.slice(-2) === \"==\") {\n        totalByteLength -= 2;\n    }\n    else if (input.slice(-1) === \"=\") {\n        totalByteLength--;\n    }\n    const out = new ArrayBuffer(totalByteLength);\n    const dataView = new DataView(out);\n    for (let i = 0; i < input.length; i += 4) {\n        let bits = 0;\n        let bitLength = 0;\n        for (let j = i, limit = i + 3; j <= limit; j++) {\n            if (input[j] !== \"=\") {\n                if (!(input[j] in alphabetByEncoding)) {\n                    throw new TypeError(`Invalid character ${input[j]} in base64 string.`);\n                }\n                bits |= alphabetByEncoding[input[j]] << ((limit - j) * bitsPerLetter);\n                bitLength += bitsPerLetter;\n            }\n            else {\n                bits >>= bitsPerLetter;\n            }\n        }\n        const chunkOffset = (i / 4) * 3;\n        bits >>= bitLength % bitsPerByte;\n        const byteLength = Math.floor(bitLength / bitsPerByte);\n        for (let k = 0; k < byteLength; k++) {\n            const offset = (byteLength - k - 1) * bitsPerByte;\n            dataView.setUint8(chunkOffset + k, (bits & (255 << offset)) >> offset);\n        }\n    }\n    return new Uint8Array(out);\n};\n","import { alphabetByValue, bitsPerByte, bitsPerLetter, maxLetterValue } from \"./constants.browser\";\nexport function toBase64(input) {\n    let str = \"\";\n    for (let i = 0; i < input.length; i += 3) {\n        let bits = 0;\n        let bitLength = 0;\n        for (let j = i, limit = Math.min(i + 3, input.length); j < limit; j++) {\n            bits |= input[j] << ((limit - j - 1) * bitsPerByte);\n            bitLength += bitsPerByte;\n        }\n        const bitClusterCount = Math.ceil(bitLength / bitsPerLetter);\n        bits <<= bitClusterCount * bitsPerLetter - bitLength;\n        for (let k = 1; k <= bitClusterCount; k++) {\n            const offset = (bitClusterCount - k) * bitsPerLetter;\n            str += alphabetByValue[(bits & (maxLetterValue << offset)) >> offset];\n        }\n        str += \"==\".slice(0, 4 - bitClusterCount);\n    }\n    return str;\n}\n","import { fromBase64, toBase64 } from \"@smithy/util-base64\";\nimport { fromUtf8, toUtf8 } from \"@smithy/util-utf8\";\nimport { Uint8ArrayBlobAdapter } from \"./Uint8ArrayBlobAdapter\";\nexport function transformToString(payload, encoding = \"utf-8\") {\n    if (encoding === \"base64\") {\n        return toBase64(payload);\n    }\n    return toUtf8(payload);\n}\nexport function transformFromString(str, encoding) {\n    if (encoding === \"base64\") {\n        return Uint8ArrayBlobAdapter.mutate(fromBase64(str));\n    }\n    return Uint8ArrayBlobAdapter.mutate(fromUtf8(str));\n}\n","import { transformFromString, transformToString } from \"./transforms\";\nexport class Uint8ArrayBlobAdapter extends Uint8Array {\n    static fromString(source, encoding = \"utf-8\") {\n        switch (typeof source) {\n            case \"string\":\n                return transformFromString(source, encoding);\n            default:\n                throw new Error(`Unsupported conversion from ${typeof source} to Uint8ArrayBlobAdapter.`);\n        }\n    }\n    static mutate(source) {\n        Object.setPrototypeOf(source, Uint8ArrayBlobAdapter.prototype);\n        return source;\n    }\n    transformToString(encoding = \"utf-8\") {\n        return transformToString(this, encoding);\n    }\n}\n","export const getAwsChunkedEncodingStream = (readableStream, options) => {\n    const { base64Encoder, bodyLengthChecker, checksumAlgorithmFn, checksumLocationName, streamHasher } = options;\n    const checksumRequired = base64Encoder !== undefined &&\n        bodyLengthChecker !== undefined &&\n        checksumAlgorithmFn !== undefined &&\n        checksumLocationName !== undefined &&\n        streamHasher !== undefined;\n    const digest = checksumRequired ? streamHasher(checksumAlgorithmFn, readableStream) : undefined;\n    const reader = readableStream.getReader();\n    return new ReadableStream({\n        async pull(controller) {\n            const { value, done } = await reader.read();\n            if (done) {\n                controller.enqueue(`0\\r\\n`);\n                if (checksumRequired) {\n                    const checksum = base64Encoder(await digest);\n                    controller.enqueue(`${checksumLocationName}:${checksum}\\r\\n`);\n                    controller.enqueue(`\\r\\n`);\n                }\n                controller.close();\n            }\n            else {\n                controller.enqueue(`${(bodyLengthChecker(value) || 0).toString(16)}\\r\\n${value}\\r\\n`);\n            }\n        },\n    });\n};\n","import { escapeUri } from \"@smithy/util-uri-escape\";\nexport function buildQueryString(query) {\n    const parts = [];\n    for (let key of Object.keys(query).sort()) {\n        const value = query[key];\n        key = escapeUri(key);\n        if (Array.isArray(value)) {\n            for (let i = 0, iLen = value.length; i < iLen; i++) {\n                parts.push(`${key}=${escapeUri(value[i])}`);\n            }\n        }\n        else {\n            let qsEntry = key;\n            if (value || typeof value === \"string\") {\n                qsEntry += `=${escapeUri(value)}`;\n            }\n            parts.push(qsEntry);\n        }\n    }\n    return parts.join(\"&\");\n}\n","export function requestTimeout(timeoutInMs = 0) {\n    return new Promise((resolve, reject) => {\n        if (timeoutInMs) {\n            setTimeout(() => {\n                const timeoutError = new Error(`Request did not complete within ${timeoutInMs} ms`);\n                timeoutError.name = \"TimeoutError\";\n                reject(timeoutError);\n            }, timeoutInMs);\n        }\n    });\n}\n","import { HttpResponse } from \"@smithy/protocol-http\";\nimport { buildQueryString } from \"@smithy/querystring-builder\";\nimport { requestTimeout } from \"./request-timeout\";\nexport class FetchHttpHandler {\n    constructor(options) {\n        if (typeof options === \"function\") {\n            this.configProvider = options().then((opts) => opts || {});\n        }\n        else {\n            this.config = options ?? {};\n            this.configProvider = Promise.resolve(this.config);\n        }\n    }\n    destroy() {\n    }\n    async handle(request, { abortSignal } = {}) {\n        if (!this.config) {\n            this.config = await this.configProvider;\n        }\n        const requestTimeoutInMs = this.config.requestTimeout;\n        if (abortSignal?.aborted) {\n            const abortError = new Error(\"Request aborted\");\n            abortError.name = \"AbortError\";\n            return Promise.reject(abortError);\n        }\n        let path = request.path;\n        const queryString = buildQueryString(request.query || {});\n        if (queryString) {\n            path += `?${queryString}`;\n        }\n        if (request.fragment) {\n            path += `#${request.fragment}`;\n        }\n        let auth = \"\";\n        if (request.username != null || request.password != null) {\n            const username = request.username ?? \"\";\n            const password = request.password ?? \"\";\n            auth = `${username}:${password}@`;\n        }\n        const { port, method } = request;\n        const url = `${request.protocol}//${auth}${request.hostname}${port ? `:${port}` : \"\"}${path}`;\n        const body = method === \"GET\" || method === \"HEAD\" ? undefined : request.body;\n        const requestOptions = {\n            body,\n            headers: new Headers(request.headers),\n            method: method,\n        };\n        if (typeof AbortController !== \"undefined\") {\n            requestOptions[\"signal\"] = abortSignal;\n        }\n        const fetchRequest = new Request(url, requestOptions);\n        const raceOfPromises = [\n            fetch(fetchRequest).then((response) => {\n                const fetchHeaders = response.headers;\n                const transformedHeaders = {};\n                for (const pair of fetchHeaders.entries()) {\n                    transformedHeaders[pair[0]] = pair[1];\n                }\n                const hasReadableStream = response.body != undefined;\n                if (!hasReadableStream) {\n                    return response.blob().then((body) => ({\n                        response: new HttpResponse({\n                            headers: transformedHeaders,\n                            reason: response.statusText,\n                            statusCode: response.status,\n                            body,\n                        }),\n                    }));\n                }\n                return {\n                    response: new HttpResponse({\n                        headers: transformedHeaders,\n                        reason: response.statusText,\n                        statusCode: response.status,\n                        body: response.body,\n                    }),\n                };\n            }),\n            requestTimeout(requestTimeoutInMs),\n        ];\n        if (abortSignal) {\n            raceOfPromises.push(new Promise((resolve, reject) => {\n                abortSignal.onabort = () => {\n                    const abortError = new Error(\"Request aborted\");\n                    abortError.name = \"AbortError\";\n                    reject(abortError);\n                };\n            }));\n        }\n        return Promise.race(raceOfPromises);\n    }\n}\n","import { fromBase64 } from \"@smithy/util-base64\";\nexport const streamCollector = (stream) => {\n    if (typeof Blob === \"function\" && stream instanceof Blob) {\n        return collectBlob(stream);\n    }\n    return collectStream(stream);\n};\nasync function collectBlob(blob) {\n    const base64 = await readToBase64(blob);\n    const arrayBuffer = fromBase64(base64);\n    return new Uint8Array(arrayBuffer);\n}\nasync function collectStream(stream) {\n    let res = new Uint8Array(0);\n    const reader = stream.getReader();\n    let isDone = false;\n    while (!isDone) {\n        const { done, value } = await reader.read();\n        if (value) {\n            const prior = res;\n            res = new Uint8Array(prior.length + value.length);\n            res.set(prior);\n            res.set(value, prior.length);\n        }\n        isDone = done;\n    }\n    return res;\n}\nfunction readToBase64(blob) {\n    return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.onloadend = () => {\n            if (reader.readyState !== 2) {\n                return reject(new Error(\"Reader aborted too early\"));\n            }\n            const result = (reader.result ?? \"\");\n            const commaIndex = result.indexOf(\",\");\n            const dataOffset = commaIndex > -1 ? commaIndex + 1 : result.length;\n            resolve(result.substring(dataOffset));\n        };\n        reader.onabort = () => reject(new Error(\"Read aborted\"));\n        reader.onerror = () => reject(reader.error);\n        reader.readAsDataURL(blob);\n    });\n}\n","import { streamCollector } from \"@smithy/fetch-http-handler\";\nimport { toBase64 } from \"@smithy/util-base64\";\nimport { toHex } from \"@smithy/util-hex-encoding\";\nimport { toUtf8 } from \"@smithy/util-utf8\";\nconst ERR_MSG_STREAM_HAS_BEEN_TRANSFORMED = \"The stream has already been transformed.\";\nexport const sdkStreamMixin = (stream) => {\n    if (!isBlobInstance(stream) && !isReadableStreamInstance(stream)) {\n        const name = stream?.__proto__?.constructor?.name || stream;\n        throw new Error(`Unexpected stream implementation, expect Blob or ReadableStream, got ${name}`);\n    }\n    let transformed = false;\n    const transformToByteArray = async () => {\n        if (transformed) {\n            throw new Error(ERR_MSG_STREAM_HAS_BEEN_TRANSFORMED);\n        }\n        transformed = true;\n        return await streamCollector(stream);\n    };\n    const blobToWebStream = (blob) => {\n        if (typeof blob.stream !== \"function\") {\n            throw new Error(\"Cannot transform payload Blob to web stream. Please make sure the Blob.stream() is polyfilled.\\n\" +\n                \"If you are using React Native, this API is not yet supported, see: https://react-native.canny.io/feature-requests/p/fetch-streaming-body\");\n        }\n        return blob.stream();\n    };\n    return Object.assign(stream, {\n        transformToByteArray: transformToByteArray,\n        transformToString: async (encoding) => {\n            const buf = await transformToByteArray();\n            if (encoding === \"base64\") {\n                return toBase64(buf);\n            }\n            else if (encoding === \"hex\") {\n                return toHex(buf);\n            }\n            else if (encoding === undefined || encoding === \"utf8\" || encoding === \"utf-8\") {\n                return toUtf8(buf);\n            }\n            else if (typeof TextDecoder === \"function\") {\n                return new TextDecoder(encoding).decode(buf);\n            }\n            else {\n                throw new Error(\"TextDecoder is not available, please make sure polyfill is provided.\");\n            }\n        },\n        transformToWebStream: () => {\n            if (transformed) {\n                throw new Error(ERR_MSG_STREAM_HAS_BEEN_TRANSFORMED);\n            }\n            transformed = true;\n            if (isBlobInstance(stream)) {\n                return blobToWebStream(stream);\n            }\n            else if (isReadableStreamInstance(stream)) {\n                return stream;\n            }\n            else {\n                throw new Error(`Cannot transform payload to web stream, got ${stream}`);\n            }\n        },\n    });\n};\nconst isBlobInstance = (stream) => typeof Blob === \"function\" && stream instanceof Blob;\nconst isReadableStreamInstance = (stream) => typeof ReadableStream === \"function\" && stream instanceof ReadableStream;\n","import { Uint8ArrayBlobAdapter } from \"@smithy/util-stream\";\nexport const collectBody = async (streamBody = new Uint8Array(), context) => {\n    if (streamBody instanceof Uint8Array) {\n        return Uint8ArrayBlobAdapter.mutate(streamBody);\n    }\n    if (!streamBody) {\n        return Uint8ArrayBlobAdapter.mutate(new Uint8Array());\n    }\n    const fromContext = context.streamCollector(streamBody);\n    return Uint8ArrayBlobAdapter.mutate(await fromContext);\n};\n","import { constructStack } from \"@smithy/middleware-stack\";\nexport class Command {\n    constructor() {\n        this.middlewareStack = constructStack();\n    }\n}\n","export const SENSITIVE_STRING = \"***SensitiveInformation***\";\n","export const parseBoolean = (value) => {\n    switch (value) {\n        case \"true\":\n            return true;\n        case \"false\":\n            return false;\n        default:\n            throw new Error(`Unable to parse boolean value \"${value}\"`);\n    }\n};\nexport const expectBoolean = (value) => {\n    if (value === null || value === undefined) {\n        return undefined;\n    }\n    if (typeof value === \"number\") {\n        if (value === 0 || value === 1) {\n            logger.warn(stackTraceWarning(`Expected boolean, got ${typeof value}: ${value}`));\n        }\n        if (value === 0) {\n            return false;\n        }\n        if (value === 1) {\n            return true;\n        }\n    }\n    if (typeof value === \"string\") {\n        const lower = value.toLowerCase();\n        if (lower === \"false\" || lower === \"true\") {\n            logger.warn(stackTraceWarning(`Expected boolean, got ${typeof value}: ${value}`));\n        }\n        if (lower === \"false\") {\n            return false;\n        }\n        if (lower === \"true\") {\n            return true;\n        }\n    }\n    if (typeof value === \"boolean\") {\n        return value;\n    }\n    throw new TypeError(`Expected boolean, got ${typeof value}: ${value}`);\n};\nexport const expectNumber = (value) => {\n    if (value === null || value === undefined) {\n        return undefined;\n    }\n    if (typeof value === \"string\") {\n        const parsed = parseFloat(value);\n        if (!Number.isNaN(parsed)) {\n            if (String(parsed) !== String(value)) {\n                logger.warn(stackTraceWarning(`Expected number but observed string: ${value}`));\n            }\n            return parsed;\n        }\n    }\n    if (typeof value === \"number\") {\n        return value;\n    }\n    throw new TypeError(`Expected number, got ${typeof value}: ${value}`);\n};\nconst MAX_FLOAT = Math.ceil(2 ** 127 * (2 - 2 ** -23));\nexport const expectFloat32 = (value) => {\n    const expected = expectNumber(value);\n    if (expected !== undefined && !Number.isNaN(expected) && expected !== Infinity && expected !== -Infinity) {\n        if (Math.abs(expected) > MAX_FLOAT) {\n            throw new TypeError(`Expected 32-bit float, got ${value}`);\n        }\n    }\n    return expected;\n};\nexport const expectLong = (value) => {\n    if (value === null || value === undefined) {\n        return undefined;\n    }\n    if (Number.isInteger(value) && !Number.isNaN(value)) {\n        return value;\n    }\n    throw new TypeError(`Expected integer, got ${typeof value}: ${value}`);\n};\nexport const expectInt = expectLong;\nexport const expectInt32 = (value) => expectSizedInt(value, 32);\nexport const expectShort = (value) => expectSizedInt(value, 16);\nexport const expectByte = (value) => expectSizedInt(value, 8);\nconst expectSizedInt = (value, size) => {\n    const expected = expectLong(value);\n    if (expected !== undefined && castInt(expected, size) !== expected) {\n        throw new TypeError(`Expected ${size}-bit integer, got ${value}`);\n    }\n    return expected;\n};\nconst castInt = (value, size) => {\n    switch (size) {\n        case 32:\n            return Int32Array.of(value)[0];\n        case 16:\n            return Int16Array.of(value)[0];\n        case 8:\n            return Int8Array.of(value)[0];\n    }\n};\nexport const expectNonNull = (value, location) => {\n    if (value === null || value === undefined) {\n        if (location) {\n            throw new TypeError(`Expected a non-null value for ${location}`);\n        }\n        throw new TypeError(\"Expected a non-null value\");\n    }\n    return value;\n};\nexport const expectObject = (value) => {\n    if (value === null || value === undefined) {\n        return undefined;\n    }\n    if (typeof value === \"object\" && !Array.isArray(value)) {\n        return value;\n    }\n    const receivedType = Array.isArray(value) ? \"array\" : typeof value;\n    throw new TypeError(`Expected object, got ${receivedType}: ${value}`);\n};\nexport const expectString = (value) => {\n    if (value === null || value === undefined) {\n        return undefined;\n    }\n    if (typeof value === \"string\") {\n        return value;\n    }\n    if ([\"boolean\", \"number\", \"bigint\"].includes(typeof value)) {\n        logger.warn(stackTraceWarning(`Expected string, got ${typeof value}: ${value}`));\n        return String(value);\n    }\n    throw new TypeError(`Expected string, got ${typeof value}: ${value}`);\n};\nexport const expectUnion = (value) => {\n    if (value === null || value === undefined) {\n        return undefined;\n    }\n    const asObject = expectObject(value);\n    const setKeys = Object.entries(asObject)\n        .filter(([, v]) => v != null)\n        .map(([k]) => k);\n    if (setKeys.length === 0) {\n        throw new TypeError(`Unions must have exactly one non-null member. None were found.`);\n    }\n    if (setKeys.length > 1) {\n        throw new TypeError(`Unions must have exactly one non-null member. Keys ${setKeys} were not null.`);\n    }\n    return asObject;\n};\nexport const strictParseDouble = (value) => {\n    if (typeof value == \"string\") {\n        return expectNumber(parseNumber(value));\n    }\n    return expectNumber(value);\n};\nexport const strictParseFloat = strictParseDouble;\nexport const strictParseFloat32 = (value) => {\n    if (typeof value == \"string\") {\n        return expectFloat32(parseNumber(value));\n    }\n    return expectFloat32(value);\n};\nconst NUMBER_REGEX = /(-?(?:0|[1-9]\\d*)(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)|(-?Infinity)|(NaN)/g;\nconst parseNumber = (value) => {\n    const matches = value.match(NUMBER_REGEX);\n    if (matches === null || matches[0].length !== value.length) {\n        throw new TypeError(`Expected real number, got implicit NaN`);\n    }\n    return parseFloat(value);\n};\nexport const limitedParseDouble = (value) => {\n    if (typeof value == \"string\") {\n        return parseFloatString(value);\n    }\n    return expectNumber(value);\n};\nexport const handleFloat = limitedParseDouble;\nexport const limitedParseFloat = limitedParseDouble;\nexport const limitedParseFloat32 = (value) => {\n    if (typeof value == \"string\") {\n        return parseFloatString(value);\n    }\n    return expectFloat32(value);\n};\nconst parseFloatString = (value) => {\n    switch (value) {\n        case \"NaN\":\n            return NaN;\n        case \"Infinity\":\n            return Infinity;\n        case \"-Infinity\":\n            return -Infinity;\n        default:\n            throw new Error(`Unable to parse float value: ${value}`);\n    }\n};\nexport const strictParseLong = (value) => {\n    if (typeof value === \"string\") {\n        return expectLong(parseNumber(value));\n    }\n    return expectLong(value);\n};\nexport const strictParseInt = strictParseLong;\nexport const strictParseInt32 = (value) => {\n    if (typeof value === \"string\") {\n        return expectInt32(parseNumber(value));\n    }\n    return expectInt32(value);\n};\nexport const strictParseShort = (value) => {\n    if (typeof value === \"string\") {\n        return expectShort(parseNumber(value));\n    }\n    return expectShort(value);\n};\nexport const strictParseByte = (value) => {\n    if (typeof value === \"string\") {\n        return expectByte(parseNumber(value));\n    }\n    return expectByte(value);\n};\nconst stackTraceWarning = (message) => {\n    return String(new TypeError(message).stack || message)\n        .split(\"\\n\")\n        .slice(0, 5)\n        .filter((s) => !s.includes(\"stackTraceWarning\"))\n        .join(\"\\n\");\n};\nexport const logger = {\n    warn: console.warn,\n};\n","import { strictParseByte, strictParseDouble, strictParseFloat32, strictParseShort } from \"./parse-utils\";\nconst DAYS = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\nconst MONTHS = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\nexport function dateToUtcString(date) {\n    const year = date.getUTCFullYear();\n    const month = date.getUTCMonth();\n    const dayOfWeek = date.getUTCDay();\n    const dayOfMonthInt = date.getUTCDate();\n    const hoursInt = date.getUTCHours();\n    const minutesInt = date.getUTCMinutes();\n    const secondsInt = date.getUTCSeconds();\n    const dayOfMonthString = dayOfMonthInt < 10 ? `0${dayOfMonthInt}` : `${dayOfMonthInt}`;\n    const hoursString = hoursInt < 10 ? `0${hoursInt}` : `${hoursInt}`;\n    const minutesString = minutesInt < 10 ? `0${minutesInt}` : `${minutesInt}`;\n    const secondsString = secondsInt < 10 ? `0${secondsInt}` : `${secondsInt}`;\n    return `${DAYS[dayOfWeek]}, ${dayOfMonthString} ${MONTHS[month]} ${year} ${hoursString}:${minutesString}:${secondsString} GMT`;\n}\nconst RFC3339 = new RegExp(/^(\\d{4})-(\\d{2})-(\\d{2})[tT](\\d{2}):(\\d{2}):(\\d{2})(?:\\.(\\d+))?[zZ]$/);\nexport const parseRfc3339DateTime = (value) => {\n    if (value === null || value === undefined) {\n        return undefined;\n    }\n    if (typeof value !== \"string\") {\n        throw new TypeError(\"RFC-3339 date-times must be expressed as strings\");\n    }\n    const match = RFC3339.exec(value);\n    if (!match) {\n        throw new TypeError(\"Invalid RFC-3339 date-time value\");\n    }\n    const [_, yearStr, monthStr, dayStr, hours, minutes, seconds, fractionalMilliseconds] = match;\n    const year = strictParseShort(stripLeadingZeroes(yearStr));\n    const month = parseDateValue(monthStr, \"month\", 1, 12);\n    const day = parseDateValue(dayStr, \"day\", 1, 31);\n    return buildDate(year, month, day, { hours, minutes, seconds, fractionalMilliseconds });\n};\nconst RFC3339_WITH_OFFSET = new RegExp(/^(\\d{4})-(\\d{2})-(\\d{2})[tT](\\d{2}):(\\d{2}):(\\d{2})(?:\\.(\\d+))?(([-+]\\d{2}\\:\\d{2})|[zZ])$/);\nexport const parseRfc3339DateTimeWithOffset = (value) => {\n    if (value === null || value === undefined) {\n        return undefined;\n    }\n    if (typeof value !== \"string\") {\n        throw new TypeError(\"RFC-3339 date-times must be expressed as strings\");\n    }\n    const match = RFC3339_WITH_OFFSET.exec(value);\n    if (!match) {\n        throw new TypeError(\"Invalid RFC-3339 date-time value\");\n    }\n    const [_, yearStr, monthStr, dayStr, hours, minutes, seconds, fractionalMilliseconds, offsetStr] = match;\n    const year = strictParseShort(stripLeadingZeroes(yearStr));\n    const month = parseDateValue(monthStr, \"month\", 1, 12);\n    const day = parseDateValue(dayStr, \"day\", 1, 31);\n    const date = buildDate(year, month, day, { hours, minutes, seconds, fractionalMilliseconds });\n    if (offsetStr.toUpperCase() != \"Z\") {\n        date.setTime(date.getTime() - parseOffsetToMilliseconds(offsetStr));\n    }\n    return date;\n};\nconst IMF_FIXDATE = new RegExp(/^(?:Mon|Tue|Wed|Thu|Fri|Sat|Sun), (\\d{2}) (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) (\\d{4}) (\\d{1,2}):(\\d{2}):(\\d{2})(?:\\.(\\d+))? GMT$/);\nconst RFC_850_DATE = new RegExp(/^(?:Monday|Tuesday|Wednesday|Thursday|Friday|Saturday|Sunday), (\\d{2})-(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)-(\\d{2}) (\\d{1,2}):(\\d{2}):(\\d{2})(?:\\.(\\d+))? GMT$/);\nconst ASC_TIME = new RegExp(/^(?:Mon|Tue|Wed|Thu|Fri|Sat|Sun) (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) ( [1-9]|\\d{2}) (\\d{1,2}):(\\d{2}):(\\d{2})(?:\\.(\\d+))? (\\d{4})$/);\nexport const parseRfc7231DateTime = (value) => {\n    if (value === null || value === undefined) {\n        return undefined;\n    }\n    if (typeof value !== \"string\") {\n        throw new TypeError(\"RFC-7231 date-times must be expressed as strings\");\n    }\n    let match = IMF_FIXDATE.exec(value);\n    if (match) {\n        const [_, dayStr, monthStr, yearStr, hours, minutes, seconds, fractionalMilliseconds] = match;\n        return buildDate(strictParseShort(stripLeadingZeroes(yearStr)), parseMonthByShortName(monthStr), parseDateValue(dayStr, \"day\", 1, 31), { hours, minutes, seconds, fractionalMilliseconds });\n    }\n    match = RFC_850_DATE.exec(value);\n    if (match) {\n        const [_, dayStr, monthStr, yearStr, hours, minutes, seconds, fractionalMilliseconds] = match;\n        return adjustRfc850Year(buildDate(parseTwoDigitYear(yearStr), parseMonthByShortName(monthStr), parseDateValue(dayStr, \"day\", 1, 31), {\n            hours,\n            minutes,\n            seconds,\n            fractionalMilliseconds,\n        }));\n    }\n    match = ASC_TIME.exec(value);\n    if (match) {\n        const [_, monthStr, dayStr, hours, minutes, seconds, fractionalMilliseconds, yearStr] = match;\n        return buildDate(strictParseShort(stripLeadingZeroes(yearStr)), parseMonthByShortName(monthStr), parseDateValue(dayStr.trimLeft(), \"day\", 1, 31), { hours, minutes, seconds, fractionalMilliseconds });\n    }\n    throw new TypeError(\"Invalid RFC-7231 date-time value\");\n};\nexport const parseEpochTimestamp = (value) => {\n    if (value === null || value === undefined) {\n        return undefined;\n    }\n    let valueAsDouble;\n    if (typeof value === \"number\") {\n        valueAsDouble = value;\n    }\n    else if (typeof value === \"string\") {\n        valueAsDouble = strictParseDouble(value);\n    }\n    else {\n        throw new TypeError(\"Epoch timestamps must be expressed as floating point numbers or their string representation\");\n    }\n    if (Number.isNaN(valueAsDouble) || valueAsDouble === Infinity || valueAsDouble === -Infinity) {\n        throw new TypeError(\"Epoch timestamps must be valid, non-Infinite, non-NaN numerics\");\n    }\n    return new Date(Math.round(valueAsDouble * 1000));\n};\nconst buildDate = (year, month, day, time) => {\n    const adjustedMonth = month - 1;\n    validateDayOfMonth(year, adjustedMonth, day);\n    return new Date(Date.UTC(year, adjustedMonth, day, parseDateValue(time.hours, \"hour\", 0, 23), parseDateValue(time.minutes, \"minute\", 0, 59), parseDateValue(time.seconds, \"seconds\", 0, 60), parseMilliseconds(time.fractionalMilliseconds)));\n};\nconst parseTwoDigitYear = (value) => {\n    const thisYear = new Date().getUTCFullYear();\n    const valueInThisCentury = Math.floor(thisYear / 100) * 100 + strictParseShort(stripLeadingZeroes(value));\n    if (valueInThisCentury < thisYear) {\n        return valueInThisCentury + 100;\n    }\n    return valueInThisCentury;\n};\nconst FIFTY_YEARS_IN_MILLIS = 50 * 365 * 24 * 60 * 60 * 1000;\nconst adjustRfc850Year = (input) => {\n    if (input.getTime() - new Date().getTime() > FIFTY_YEARS_IN_MILLIS) {\n        return new Date(Date.UTC(input.getUTCFullYear() - 100, input.getUTCMonth(), input.getUTCDate(), input.getUTCHours(), input.getUTCMinutes(), input.getUTCSeconds(), input.getUTCMilliseconds()));\n    }\n    return input;\n};\nconst parseMonthByShortName = (value) => {\n    const monthIdx = MONTHS.indexOf(value);\n    if (monthIdx < 0) {\n        throw new TypeError(`Invalid month: ${value}`);\n    }\n    return monthIdx + 1;\n};\nconst DAYS_IN_MONTH = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\nconst validateDayOfMonth = (year, month, day) => {\n    let maxDays = DAYS_IN_MONTH[month];\n    if (month === 1 && isLeapYear(year)) {\n        maxDays = 29;\n    }\n    if (day > maxDays) {\n        throw new TypeError(`Invalid day for ${MONTHS[month]} in ${year}: ${day}`);\n    }\n};\nconst isLeapYear = (year) => {\n    return year % 4 === 0 && (year % 100 !== 0 || year % 400 === 0);\n};\nconst parseDateValue = (value, type, lower, upper) => {\n    const dateVal = strictParseByte(stripLeadingZeroes(value));\n    if (dateVal < lower || dateVal > upper) {\n        throw new TypeError(`${type} must be between ${lower} and ${upper}, inclusive`);\n    }\n    return dateVal;\n};\nconst parseMilliseconds = (value) => {\n    if (value === null || value === undefined) {\n        return 0;\n    }\n    return strictParseFloat32(\"0.\" + value) * 1000;\n};\nconst parseOffsetToMilliseconds = (value) => {\n    const directionStr = value[0];\n    let direction = 1;\n    if (directionStr == \"+\") {\n        direction = 1;\n    }\n    else if (directionStr == \"-\") {\n        direction = -1;\n    }\n    else {\n        throw new TypeError(`Offset direction, ${directionStr}, must be \"+\" or \"-\"`);\n    }\n    const hour = Number(value.substring(1, 3));\n    const minute = Number(value.substring(4, 6));\n    return direction * (hour * 60 + minute) * 60 * 1000;\n};\nconst stripLeadingZeroes = (value) => {\n    let idx = 0;\n    while (idx < value.length - 1 && value.charAt(idx) === \"0\") {\n        idx++;\n    }\n    if (idx === 0) {\n        return value;\n    }\n    return value.slice(idx);\n};\n","export class ServiceException extends Error {\n    constructor(options) {\n        super(options.message);\n        Object.setPrototypeOf(this, ServiceException.prototype);\n        this.name = options.name;\n        this.$fault = options.$fault;\n        this.$metadata = options.$metadata;\n    }\n}\nexport const decorateServiceException = (exception, additions = {}) => {\n    Object.entries(additions)\n        .filter(([, v]) => v !== undefined)\n        .forEach(([k, v]) => {\n        if (exception[k] == undefined || exception[k] === \"\") {\n            exception[k] = v;\n        }\n    });\n    const message = exception.message || exception.Message || \"UnknownError\";\n    exception.message = message;\n    delete exception.Message;\n    return exception;\n};\n","import { decorateServiceException } from \"./exceptions\";\nexport const throwDefaultError = ({ output, parsedBody, exceptionCtor, errorCode }) => {\n    const $metadata = deserializeMetadata(output);\n    const statusCode = $metadata.httpStatusCode ? $metadata.httpStatusCode + \"\" : undefined;\n    const response = new exceptionCtor({\n        name: parsedBody?.code || parsedBody?.Code || errorCode || statusCode || \"UnknownError\",\n        $fault: \"client\",\n        $metadata,\n    });\n    throw decorateServiceException(response, parsedBody);\n};\nexport const withBaseException = (ExceptionCtor) => {\n    return ({ output, parsedBody, errorCode }) => {\n        throwDefaultError({ output, parsedBody, exceptionCtor: ExceptionCtor, errorCode });\n    };\n};\nconst deserializeMetadata = (output) => ({\n    httpStatusCode: output.statusCode,\n    requestId: output.headers[\"x-amzn-requestid\"] ?? output.headers[\"x-amzn-request-id\"] ?? output.headers[\"x-amz-request-id\"],\n    extendedRequestId: output.headers[\"x-amz-id-2\"],\n    cfId: output.headers[\"x-amz-cf-id\"],\n});\n","export const loadConfigsForDefaultMode = (mode) => {\n    switch (mode) {\n        case \"standard\":\n            return {\n                retryMode: \"standard\",\n                connectionTimeout: 3100,\n            };\n        case \"in-region\":\n            return {\n                retryMode: \"standard\",\n                connectionTimeout: 1100,\n            };\n        case \"cross-region\":\n            return {\n                retryMode: \"standard\",\n                connectionTimeout: 3100,\n            };\n        case \"mobile\":\n            return {\n                retryMode: \"standard\",\n                connectionTimeout: 30000,\n            };\n        default:\n            return {};\n    }\n};\n","export function extendedEncodeURIComponent(str) {\n    return encodeURIComponent(str).replace(/[!'()*]/g, function (c) {\n        return \"%\" + c.charCodeAt(0).toString(16).toUpperCase();\n    });\n}\n","export const getValueFromTextNode = (obj) => {\n    const textNodeName = \"#text\";\n    for (const key in obj) {\n        if (obj.hasOwnProperty(key) && obj[key][textNodeName] !== undefined) {\n            obj[key] = obj[key][textNodeName];\n        }\n        else if (typeof obj[key] === \"object\" && obj[key] !== null) {\n            obj[key] = getValueFromTextNode(obj[key]);\n        }\n    }\n    return obj;\n};\n","export const StringWrapper = function () {\n    const Class = Object.getPrototypeOf(this).constructor;\n    const Constructor = Function.bind.apply(String, [null, ...arguments]);\n    const instance = new Constructor();\n    Object.setPrototypeOf(instance, Class.prototype);\n    return instance;\n};\nStringWrapper.prototype = Object.create(String.prototype, {\n    constructor: {\n        value: StringWrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true,\n    },\n});\nObject.setPrototypeOf(StringWrapper, String);\nexport class LazyJsonString extends StringWrapper {\n    deserializeJSON() {\n        return JSON.parse(super.toString());\n    }\n    toJSON() {\n        return super.toString();\n    }\n    static fromObject(object) {\n        if (object instanceof LazyJsonString) {\n            return object;\n        }\n        else if (object instanceof String || typeof object === \"string\") {\n            return new LazyJsonString(object);\n        }\n        return new LazyJsonString(JSON.stringify(object));\n    }\n}\n","export function map(arg0, arg1, arg2) {\n    let target;\n    let filter;\n    let instructions;\n    if (typeof arg1 === \"undefined\" && typeof arg2 === \"undefined\") {\n        target = {};\n        instructions = arg0;\n    }\n    else {\n        target = arg0;\n        if (typeof arg1 === \"function\") {\n            filter = arg1;\n            instructions = arg2;\n            return mapWithFilter(target, filter, instructions);\n        }\n        else {\n            instructions = arg1;\n        }\n    }\n    for (const key of Object.keys(instructions)) {\n        if (!Array.isArray(instructions[key])) {\n            target[key] = instructions[key];\n            continue;\n        }\n        applyInstruction(target, null, instructions, key);\n    }\n    return target;\n}\nexport const convertMap = (target) => {\n    const output = {};\n    for (const [k, v] of Object.entries(target || {})) {\n        output[k] = [, v];\n    }\n    return output;\n};\nexport const take = (source, instructions) => {\n    const out = {};\n    for (const key in instructions) {\n        applyInstruction(out, source, instructions, key);\n    }\n    return out;\n};\nconst mapWithFilter = (target, filter, instructions) => {\n    return map(target, Object.entries(instructions).reduce((_instructions, [key, value]) => {\n        if (Array.isArray(value)) {\n            _instructions[key] = value;\n        }\n        else {\n            if (typeof value === \"function\") {\n                _instructions[key] = [filter, value()];\n            }\n            else {\n                _instructions[key] = [filter, value];\n            }\n        }\n        return _instructions;\n    }, {}));\n};\nconst applyInstruction = (target, source, instructions, targetKey) => {\n    if (source !== null) {\n        let instruction = instructions[targetKey];\n        if (typeof instruction === \"function\") {\n            instruction = [, instruction];\n        }\n        const [filter = nonNullish, valueFn = pass, sourceKey = targetKey] = instruction;\n        if ((typeof filter === \"function\" && filter(source[sourceKey])) || (typeof filter !== \"function\" && !!filter)) {\n            target[targetKey] = valueFn(source[sourceKey]);\n        }\n        return;\n    }\n    let [filter, value] = instructions[targetKey];\n    if (typeof value === \"function\") {\n        let _value;\n        const defaultFilterPassed = filter === undefined && (_value = value()) != null;\n        const customFilterPassed = (typeof filter === \"function\" && !!filter(void 0)) || (typeof filter !== \"function\" && !!filter);\n        if (defaultFilterPassed) {\n            target[targetKey] = _value;\n        }\n        else if (customFilterPassed) {\n            target[targetKey] = value();\n        }\n    }\n    else {\n        const defaultFilterPassed = filter === undefined && value != null;\n        const customFilterPassed = (typeof filter === \"function\" && !!filter(value)) || (typeof filter !== \"function\" && !!filter);\n        if (defaultFilterPassed || customFilterPassed) {\n            target[targetKey] = value;\n        }\n    }\n};\nconst nonNullish = (_) => _ != null;\nconst pass = (_) => _;\n","import { extendedEncodeURIComponent } from \"./extended-encode-uri-component\";\nexport const resolvedPath = (resolvedPath, input, memberName, labelValueProvider, uriLabel, isGreedyLabel) => {\n    if (input != null && input[memberName] !== undefined) {\n        const labelValue = labelValueProvider();\n        if (labelValue.length <= 0) {\n            throw new Error(\"Empty value provided for input HTTP label: \" + memberName + \".\");\n        }\n        resolvedPath = resolvedPath.replace(uriLabel, isGreedyLabel\n            ? labelValue\n                .split(\"/\")\n                .map((segment) => extendedEncodeURIComponent(segment))\n                .join(\"/\")\n            : extendedEncodeURIComponent(labelValue));\n    }\n    else {\n        throw new Error(\"No value provided for input HTTP label: \" + memberName + \".\");\n    }\n    return resolvedPath;\n};\n","export const resolveClientEndpointParameters = (options) => {\n    return {\n        ...options,\n        useFipsEndpoint: options.useFipsEndpoint ?? false,\n        useDualstackEndpoint: options.useDualstackEndpoint ?? false,\n        forcePathStyle: options.forcePathStyle ?? false,\n        useAccelerateEndpoint: options.useAccelerateEndpoint ?? false,\n        useGlobalEndpoint: options.useGlobalEndpoint ?? false,\n        disableMultiregionAccessPoints: options.disableMultiregionAccessPoints ?? false,\n        defaultSigningName: \"s3\",\n    };\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isEmptyData = void 0;\nfunction isEmptyData(data) {\n    if (typeof data === \"string\") {\n        return data.length === 0;\n    }\n    return data.byteLength === 0;\n}\nexports.isEmptyData = isEmptyData;\n//# sourceMappingURL=isEmptyData.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EMPTY_DATA_SHA_1 = exports.SHA_1_HMAC_ALGO = exports.SHA_1_HASH = void 0;\nexports.SHA_1_HASH = { name: \"SHA-1\" };\nexports.SHA_1_HMAC_ALGO = {\n    name: \"HMAC\",\n    hash: exports.SHA_1_HASH,\n};\nexports.EMPTY_DATA_SHA_1 = new Uint8Array([\n    218,\n    57,\n    163,\n    238,\n    94,\n    107,\n    75,\n    13,\n    50,\n    85,\n    191,\n    239,\n    149,\n    96,\n    24,\n    144,\n    175,\n    216,\n    7,\n    9,\n]);\n//# sourceMappingURL=constants.js.map","const fallbackWindow = {};\nexport function locateWindow() {\n    if (typeof window !== \"undefined\") {\n        return window;\n    }\n    else if (typeof self !== \"undefined\") {\n        return self;\n    }\n    return fallbackWindow;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Sha1 = void 0;\nvar isEmptyData_1 = require(\"./isEmptyData\");\nvar constants_1 = require(\"./constants\");\nvar util_utf8_browser_1 = require(\"@aws-sdk/util-utf8-browser\");\nvar util_locate_window_1 = require(\"@aws-sdk/util-locate-window\");\nvar Sha1 = /** @class */ (function () {\n    function Sha1(secret) {\n        this.secret = secret;\n        this.reset();\n    }\n    Sha1.prototype.update = function (toHash) {\n        var _this = this;\n        if ((0, isEmptyData_1.isEmptyData)(toHash)) {\n            return;\n        }\n        this.operation = this.operation.then(function (operation) {\n            operation.onerror = function () {\n                _this.operation = Promise.reject(new Error(\"Error encountered updating hash\"));\n            };\n            operation.process(toArrayBufferView(toHash));\n            return operation;\n        });\n        this.operation.catch(function () { });\n    };\n    Sha1.prototype.digest = function () {\n        return this.operation.then(function (operation) {\n            return new Promise(function (resolve, reject) {\n                operation.onerror = function () {\n                    reject(new Error(\"Error encountered finalizing hash\"));\n                };\n                operation.oncomplete = function () {\n                    if (operation.result) {\n                        resolve(new Uint8Array(operation.result));\n                    }\n                    reject(new Error(\"Error encountered finalizing hash\"));\n                };\n                operation.finish();\n            });\n        });\n    };\n    Sha1.prototype.reset = function () {\n        if (this.secret) {\n            this.operation = getKeyPromise(this.secret).then(function (keyData) {\n                return (0, util_locate_window_1.locateWindow)().msCrypto.subtle.sign(constants_1.SHA_1_HMAC_ALGO, keyData);\n            });\n            this.operation.catch(function () { });\n        }\n        else {\n            this.operation = Promise.resolve((0, util_locate_window_1.locateWindow)().msCrypto.subtle.digest(\"SHA-1\"));\n        }\n    };\n    return Sha1;\n}());\nexports.Sha1 = Sha1;\nfunction getKeyPromise(secret) {\n    return new Promise(function (resolve, reject) {\n        var keyOperation = (0, util_locate_window_1.locateWindow)().msCrypto.subtle.importKey(\"raw\", toArrayBufferView(secret), constants_1.SHA_1_HMAC_ALGO, false, [\"sign\"]);\n        keyOperation.oncomplete = function () {\n            if (keyOperation.result) {\n                resolve(keyOperation.result);\n            }\n            reject(new Error(\"ImportKey completed without importing key.\"));\n        };\n        keyOperation.onerror = function () {\n            reject(new Error(\"ImportKey failed to import key.\"));\n        };\n    });\n}\nfunction toArrayBufferView(data) {\n    if (typeof data === \"string\") {\n        return (0, util_utf8_browser_1.fromUtf8)(data);\n    }\n    if (ArrayBuffer.isView(data)) {\n        return new Uint8Array(data.buffer, data.byteOffset, data.byteLength / Uint8Array.BYTES_PER_ELEMENT);\n    }\n    return new Uint8Array(data);\n}\n//# sourceMappingURL=ie11Sha1.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Sha1 = void 0;\nvar util_utf8_browser_1 = require(\"@aws-sdk/util-utf8-browser\");\nvar isEmptyData_1 = require(\"./isEmptyData\");\nvar constants_1 = require(\"./constants\");\nvar util_locate_window_1 = require(\"@aws-sdk/util-locate-window\");\nvar Sha1 = /** @class */ (function () {\n    function Sha1(secret) {\n        this.toHash = new Uint8Array(0);\n        if (secret !== void 0) {\n            this.key = new Promise(function (resolve, reject) {\n                (0, util_locate_window_1.locateWindow)()\n                    .crypto.subtle.importKey(\"raw\", convertToBuffer(secret), constants_1.SHA_1_HMAC_ALGO, false, [\"sign\"])\n                    .then(resolve, reject);\n            });\n            this.key.catch(function () { });\n        }\n    }\n    Sha1.prototype.update = function (data) {\n        if ((0, isEmptyData_1.isEmptyData)(data)) {\n            return;\n        }\n        var update = convertToBuffer(data);\n        var typedArray = new Uint8Array(this.toHash.byteLength + update.byteLength);\n        typedArray.set(this.toHash, 0);\n        typedArray.set(update, this.toHash.byteLength);\n        this.toHash = typedArray;\n    };\n    Sha1.prototype.digest = function () {\n        var _this = this;\n        if (this.key) {\n            return this.key.then(function (key) {\n                return (0, util_locate_window_1.locateWindow)()\n                    .crypto.subtle.sign(constants_1.SHA_1_HMAC_ALGO, key, _this.toHash)\n                    .then(function (data) { return new Uint8Array(data); });\n            });\n        }\n        if ((0, isEmptyData_1.isEmptyData)(this.toHash)) {\n            return Promise.resolve(constants_1.EMPTY_DATA_SHA_1);\n        }\n        return Promise.resolve()\n            .then(function () { return (0, util_locate_window_1.locateWindow)().crypto.subtle.digest(constants_1.SHA_1_HASH, _this.toHash); })\n            .then(function (data) { return Promise.resolve(new Uint8Array(data)); });\n    };\n    Sha1.prototype.reset = function () {\n        this.toHash = new Uint8Array(0);\n    };\n    return Sha1;\n}());\nexports.Sha1 = Sha1;\nfunction convertToBuffer(data) {\n    if (typeof data === \"string\") {\n        return (0, util_utf8_browser_1.fromUtf8)(data);\n    }\n    if (ArrayBuffer.isView(data)) {\n        return new Uint8Array(data.buffer, data.byteOffset, data.byteLength / Uint8Array.BYTES_PER_ELEMENT);\n    }\n    return new Uint8Array(data);\n}\n//# sourceMappingURL=webCryptoSha1.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.supportsZeroByteGCM = exports.supportsSubtleCrypto = exports.supportsSecureRandom = exports.supportsWebCrypto = void 0;\nvar tslib_1 = require(\"tslib\");\nvar subtleCryptoMethods = [\n    \"decrypt\",\n    \"digest\",\n    \"encrypt\",\n    \"exportKey\",\n    \"generateKey\",\n    \"importKey\",\n    \"sign\",\n    \"verify\"\n];\nfunction supportsWebCrypto(window) {\n    if (supportsSecureRandom(window) &&\n        typeof window.crypto.subtle === \"object\") {\n        var subtle = window.crypto.subtle;\n        return supportsSubtleCrypto(subtle);\n    }\n    return false;\n}\nexports.supportsWebCrypto = supportsWebCrypto;\nfunction supportsSecureRandom(window) {\n    if (typeof window === \"object\" && typeof window.crypto === \"object\") {\n        var getRandomValues = window.crypto.getRandomValues;\n        return typeof getRandomValues === \"function\";\n    }\n    return false;\n}\nexports.supportsSecureRandom = supportsSecureRandom;\nfunction supportsSubtleCrypto(subtle) {\n    return (subtle &&\n        subtleCryptoMethods.every(function (methodName) { return typeof subtle[methodName] === \"function\"; }));\n}\nexports.supportsSubtleCrypto = supportsSubtleCrypto;\nfunction supportsZeroByteGCM(subtle) {\n    return tslib_1.__awaiter(this, void 0, void 0, function () {\n        var key, zeroByteAuthTag, _a;\n        return tslib_1.__generator(this, function (_b) {\n            switch (_b.label) {\n                case 0:\n                    if (!supportsSubtleCrypto(subtle))\n                        return [2 /*return*/, false];\n                    _b.label = 1;\n                case 1:\n                    _b.trys.push([1, 4, , 5]);\n                    return [4 /*yield*/, subtle.generateKey({ name: \"AES-GCM\", length: 128 }, false, [\"encrypt\"])];\n                case 2:\n                    key = _b.sent();\n                    return [4 /*yield*/, subtle.encrypt({\n                            name: \"AES-GCM\",\n                            iv: new Uint8Array(Array(12)),\n                            additionalData: new Uint8Array(Array(16)),\n                            tagLength: 128\n                        }, key, new Uint8Array(0))];\n                case 3:\n                    zeroByteAuthTag = _b.sent();\n                    return [2 /*return*/, zeroByteAuthTag.byteLength === 16];\n                case 4:\n                    _a = _b.sent();\n                    return [2 /*return*/, false];\n                case 5: return [2 /*return*/];\n            }\n        });\n    });\n}\nexports.supportsZeroByteGCM = supportsZeroByteGCM;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3VwcG9ydHNXZWJDcnlwdG8uanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvc3VwcG9ydHNXZWJDcnlwdG8udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQVVBLElBQU0sbUJBQW1CLEdBQThCO0lBQ3JELFNBQVM7SUFDVCxRQUFRO0lBQ1IsU0FBUztJQUNULFdBQVc7SUFDWCxhQUFhO0lBQ2IsV0FBVztJQUNYLE1BQU07SUFDTixRQUFRO0NBQ1QsQ0FBQztBQUVGLFNBQWdCLGlCQUFpQixDQUFDLE1BQWM7SUFDOUMsSUFDRSxvQkFBb0IsQ0FBQyxNQUFNLENBQUM7UUFDNUIsT0FBTyxNQUFNLENBQUMsTUFBTSxDQUFDLE1BQU0sS0FBSyxRQUFRLEVBQ3hDO1FBQ1EsSUFBQSxNQUFNLEdBQUssTUFBTSxDQUFDLE1BQU0sT0FBbEIsQ0FBbUI7UUFFakMsT0FBTyxvQkFBb0IsQ0FBQyxNQUFNLENBQUMsQ0FBQztLQUNyQztJQUVELE9BQU8sS0FBSyxDQUFDO0FBQ2YsQ0FBQztBQVhELDhDQVdDO0FBRUQsU0FBZ0Isb0JBQW9CLENBQUMsTUFBYztJQUNqRCxJQUFJLE9BQU8sTUFBTSxLQUFLLFFBQVEsSUFBSSxPQUFPLE1BQU0sQ0FBQyxNQUFNLEtBQUssUUFBUSxFQUFFO1FBQzNELElBQUEsZUFBZSxHQUFLLE1BQU0sQ0FBQyxNQUFNLGdCQUFsQixDQUFtQjtRQUUxQyxPQUFPLE9BQU8sZUFBZSxLQUFLLFVBQVUsQ0FBQztLQUM5QztJQUVELE9BQU8sS0FBSyxDQUFDO0FBQ2YsQ0FBQztBQVJELG9EQVFDO0FBRUQsU0FBZ0Isb0JBQW9CLENBQUMsTUFBb0I7SUFDdkQsT0FBTyxDQUNMLE1BQU07UUFDTixtQkFBbUIsQ0FBQyxLQUFLLENBQ3ZCLFVBQUEsVUFBVSxJQUFJLE9BQUEsT0FBTyxNQUFNLENBQUMsVUFBVSxDQUFDLEtBQUssVUFBVSxFQUF4QyxDQUF3QyxDQUN2RCxDQUNGLENBQUM7QUFDSixDQUFDO0FBUEQsb0RBT0M7QUFFRCxTQUFzQixtQkFBbUIsQ0FBQyxNQUFvQjs7Ozs7O29CQUM1RCxJQUFJLENBQUMsb0JBQW9CLENBQUMsTUFBTSxDQUFDO3dCQUFFLHNCQUFPLEtBQUssRUFBQzs7OztvQkFFbEMscUJBQU0sTUFBTSxDQUFDLFdBQVcsQ0FDbEMsRUFBRSxJQUFJLEVBQUUsU0FBUyxFQUFFLE1BQU0sRUFBRSxHQUFHLEVBQUUsRUFDaEMsS0FBSyxFQUNMLENBQUMsU0FBUyxDQUFDLENBQ1osRUFBQTs7b0JBSkssR0FBRyxHQUFHLFNBSVg7b0JBQ3VCLHFCQUFNLE1BQU0sQ0FBQyxPQUFPLENBQzFDOzRCQUNFLElBQUksRUFBRSxTQUFTOzRCQUNmLEVBQUUsRUFBRSxJQUFJLFVBQVUsQ0FBQyxLQUFLLENBQUMsRUFBRSxDQUFDLENBQUM7NEJBQzdCLGNBQWMsRUFBRSxJQUFJLFVBQVUsQ0FBQyxLQUFLLENBQUMsRUFBRSxDQUFDLENBQUM7NEJBQ3pDLFNBQVMsRUFBRSxHQUFHO3lCQUNmLEVBQ0QsR0FBRyxFQUNILElBQUksVUFBVSxDQUFDLENBQUMsQ0FBQyxDQUNsQixFQUFBOztvQkFUSyxlQUFlLEdBQUcsU0FTdkI7b0JBQ0Qsc0JBQU8sZUFBZSxDQUFDLFVBQVUsS0FBSyxFQUFFLEVBQUM7OztvQkFFekMsc0JBQU8sS0FBSyxFQUFDOzs7OztDQUVoQjtBQXRCRCxrREFzQkMiLCJzb3VyY2VzQ29udGVudCI6WyJ0eXBlIFN1YnRsZUNyeXB0b01ldGhvZCA9XG4gIHwgXCJkZWNyeXB0XCJcbiAgfCBcImRpZ2VzdFwiXG4gIHwgXCJlbmNyeXB0XCJcbiAgfCBcImV4cG9ydEtleVwiXG4gIHwgXCJnZW5lcmF0ZUtleVwiXG4gIHwgXCJpbXBvcnRLZXlcIlxuICB8IFwic2lnblwiXG4gIHwgXCJ2ZXJpZnlcIjtcblxuY29uc3Qgc3VidGxlQ3J5cHRvTWV0aG9kczogQXJyYXk8U3VidGxlQ3J5cHRvTWV0aG9kPiA9IFtcbiAgXCJkZWNyeXB0XCIsXG4gIFwiZGlnZXN0XCIsXG4gIFwiZW5jcnlwdFwiLFxuICBcImV4cG9ydEtleVwiLFxuICBcImdlbmVyYXRlS2V5XCIsXG4gIFwiaW1wb3J0S2V5XCIsXG4gIFwic2lnblwiLFxuICBcInZlcmlmeVwiXG5dO1xuXG5leHBvcnQgZnVuY3Rpb24gc3VwcG9ydHNXZWJDcnlwdG8od2luZG93OiBXaW5kb3cpOiBib29sZWFuIHtcbiAgaWYgKFxuICAgIHN1cHBvcnRzU2VjdXJlUmFuZG9tKHdpbmRvdykgJiZcbiAgICB0eXBlb2Ygd2luZG93LmNyeXB0by5zdWJ0bGUgPT09IFwib2JqZWN0XCJcbiAgKSB7XG4gICAgY29uc3QgeyBzdWJ0bGUgfSA9IHdpbmRvdy5jcnlwdG87XG5cbiAgICByZXR1cm4gc3VwcG9ydHNTdWJ0bGVDcnlwdG8oc3VidGxlKTtcbiAgfVxuXG4gIHJldHVybiBmYWxzZTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHN1cHBvcnRzU2VjdXJlUmFuZG9tKHdpbmRvdzogV2luZG93KTogYm9vbGVhbiB7XG4gIGlmICh0eXBlb2Ygd2luZG93ID09PSBcIm9iamVjdFwiICYmIHR5cGVvZiB3aW5kb3cuY3J5cHRvID09PSBcIm9iamVjdFwiKSB7XG4gICAgY29uc3QgeyBnZXRSYW5kb21WYWx1ZXMgfSA9IHdpbmRvdy5jcnlwdG87XG5cbiAgICByZXR1cm4gdHlwZW9mIGdldFJhbmRvbVZhbHVlcyA9PT0gXCJmdW5jdGlvblwiO1xuICB9XG5cbiAgcmV0dXJuIGZhbHNlO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gc3VwcG9ydHNTdWJ0bGVDcnlwdG8oc3VidGxlOiBTdWJ0bGVDcnlwdG8pIHtcbiAgcmV0dXJuIChcbiAgICBzdWJ0bGUgJiZcbiAgICBzdWJ0bGVDcnlwdG9NZXRob2RzLmV2ZXJ5KFxuICAgICAgbWV0aG9kTmFtZSA9PiB0eXBlb2Ygc3VidGxlW21ldGhvZE5hbWVdID09PSBcImZ1bmN0aW9uXCJcbiAgICApXG4gICk7XG59XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBzdXBwb3J0c1plcm9CeXRlR0NNKHN1YnRsZTogU3VidGxlQ3J5cHRvKSB7XG4gIGlmICghc3VwcG9ydHNTdWJ0bGVDcnlwdG8oc3VidGxlKSkgcmV0dXJuIGZhbHNlO1xuICB0cnkge1xuICAgIGNvbnN0IGtleSA9IGF3YWl0IHN1YnRsZS5nZW5lcmF0ZUtleShcbiAgICAgIHsgbmFtZTogXCJBRVMtR0NNXCIsIGxlbmd0aDogMTI4IH0sXG4gICAgICBmYWxzZSxcbiAgICAgIFtcImVuY3J5cHRcIl1cbiAgICApO1xuICAgIGNvbnN0IHplcm9CeXRlQXV0aFRhZyA9IGF3YWl0IHN1YnRsZS5lbmNyeXB0KFxuICAgICAge1xuICAgICAgICBuYW1lOiBcIkFFUy1HQ01cIixcbiAgICAgICAgaXY6IG5ldyBVaW50OEFycmF5KEFycmF5KDEyKSksXG4gICAgICAgIGFkZGl0aW9uYWxEYXRhOiBuZXcgVWludDhBcnJheShBcnJheSgxNikpLFxuICAgICAgICB0YWdMZW5ndGg6IDEyOFxuICAgICAgfSxcbiAgICAgIGtleSxcbiAgICAgIG5ldyBVaW50OEFycmF5KDApXG4gICAgKTtcbiAgICByZXR1cm4gemVyb0J5dGVBdXRoVGFnLmJ5dGVMZW5ndGggPT09IDE2O1xuICB9IGNhdGNoIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbn1cbiJdfQ==","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./supportsWebCrypto\"), exports);\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEsOERBQW9DIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0ICogZnJvbSBcIi4vc3VwcG9ydHNXZWJDcnlwdG9cIjtcbiJdfQ==","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=CryptoOperation.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=Key.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=KeyOperation.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=MsSubtleCrypto.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isMsWindow = void 0;\nvar msSubtleCryptoMethods = [\n    \"decrypt\",\n    \"digest\",\n    \"encrypt\",\n    \"exportKey\",\n    \"generateKey\",\n    \"importKey\",\n    \"sign\",\n    \"verify\"\n];\nfunction quacksLikeAnMsWindow(window) {\n    return \"MSInputMethodContext\" in window && \"msCrypto\" in window;\n}\n/**\n * Determines if the provided window is (or is like) the window object one would\n * expect to encounter in Internet Explorer 11.\n */\nfunction isMsWindow(window) {\n    if (quacksLikeAnMsWindow(window) && window.msCrypto.subtle !== undefined) {\n        var _a = window.msCrypto, getRandomValues = _a.getRandomValues, subtle_1 = _a.subtle;\n        return msSubtleCryptoMethods\n            .map(function (methodName) { return subtle_1[methodName]; })\n            .concat(getRandomValues)\n            .every(function (method) { return typeof method === \"function\"; });\n    }\n    return false;\n}\nexports.isMsWindow = isMsWindow;\n//# sourceMappingURL=MsWindow.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./CryptoOperation\"), exports);\ntslib_1.__exportStar(require(\"./Key\"), exports);\ntslib_1.__exportStar(require(\"./KeyOperation\"), exports);\ntslib_1.__exportStar(require(\"./MsSubtleCrypto\"), exports);\ntslib_1.__exportStar(require(\"./MsWindow\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Sha1 = void 0;\nvar ie11Sha1_1 = require(\"./ie11Sha1\");\nvar webCryptoSha1_1 = require(\"./webCryptoSha1\");\nvar supports_web_crypto_1 = require(\"@aws-crypto/supports-web-crypto\");\nvar ie11_detection_1 = require(\"@aws-crypto/ie11-detection\");\nvar util_locate_window_1 = require(\"@aws-sdk/util-locate-window\");\nvar util_1 = require(\"@aws-crypto/util\");\nvar Sha1 = /** @class */ (function () {\n    function Sha1(secret) {\n        if ((0, supports_web_crypto_1.supportsWebCrypto)((0, util_locate_window_1.locateWindow)())) {\n            this.hash = new webCryptoSha1_1.Sha1(secret);\n        }\n        else if ((0, ie11_detection_1.isMsWindow)((0, util_locate_window_1.locateWindow)())) {\n            this.hash = new ie11Sha1_1.Sha1(secret);\n        }\n        else {\n            throw new Error(\"SHA1 not supported\");\n        }\n    }\n    Sha1.prototype.update = function (data, encoding) {\n        this.hash.update((0, util_1.convertToBuffer)(data));\n    };\n    Sha1.prototype.digest = function () {\n        return this.hash.digest();\n    };\n    Sha1.prototype.reset = function () {\n        this.hash.reset();\n    };\n    return Sha1;\n}());\nexports.Sha1 = Sha1;\n//# sourceMappingURL=crossPlatformSha1.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WebCryptoSha1 = exports.Ie11Sha1 = void 0;\nvar tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./crossPlatformSha1\"), exports);\nvar ie11Sha1_1 = require(\"./ie11Sha1\");\nObject.defineProperty(exports, \"Ie11Sha1\", { enumerable: true, get: function () { return ie11Sha1_1.Sha1; } });\nvar webCryptoSha1_1 = require(\"./webCryptoSha1\");\nObject.defineProperty(exports, \"WebCryptoSha1\", { enumerable: true, get: function () { return webCryptoSha1_1.Sha1; } });\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isEmptyData = void 0;\nfunction isEmptyData(data) {\n    if (typeof data === \"string\") {\n        return data.length === 0;\n    }\n    return data.byteLength === 0;\n}\nexports.isEmptyData = isEmptyData;\n//# sourceMappingURL=isEmptyData.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EMPTY_DATA_SHA_256 = exports.SHA_256_HMAC_ALGO = exports.SHA_256_HASH = void 0;\nexports.SHA_256_HASH = { name: \"SHA-256\" };\nexports.SHA_256_HMAC_ALGO = {\n    name: \"HMAC\",\n    hash: exports.SHA_256_HASH\n};\nexports.EMPTY_DATA_SHA_256 = new Uint8Array([\n    227,\n    176,\n    196,\n    66,\n    152,\n    252,\n    28,\n    20,\n    154,\n    251,\n    244,\n    200,\n    153,\n    111,\n    185,\n    36,\n    39,\n    174,\n    65,\n    228,\n    100,\n    155,\n    147,\n    76,\n    164,\n    149,\n    153,\n    27,\n    120,\n    82,\n    184,\n    85\n]);\n//# sourceMappingURL=constants.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Sha256 = void 0;\nvar isEmptyData_1 = require(\"./isEmptyData\");\nvar constants_1 = require(\"./constants\");\nvar util_utf8_browser_1 = require(\"@aws-sdk/util-utf8-browser\");\nvar util_locate_window_1 = require(\"@aws-sdk/util-locate-window\");\nvar Sha256 = /** @class */ (function () {\n    function Sha256(secret) {\n        this.secret = secret;\n        this.reset();\n    }\n    Sha256.prototype.update = function (toHash) {\n        var _this = this;\n        if ((0, isEmptyData_1.isEmptyData)(toHash)) {\n            return;\n        }\n        this.operation = this.operation.then(function (operation) {\n            operation.onerror = function () {\n                _this.operation = Promise.reject(new Error(\"Error encountered updating hash\"));\n            };\n            operation.process(toArrayBufferView(toHash));\n            return operation;\n        });\n        this.operation.catch(function () { });\n    };\n    Sha256.prototype.digest = function () {\n        return this.operation.then(function (operation) {\n            return new Promise(function (resolve, reject) {\n                operation.onerror = function () {\n                    reject(new Error(\"Error encountered finalizing hash\"));\n                };\n                operation.oncomplete = function () {\n                    if (operation.result) {\n                        resolve(new Uint8Array(operation.result));\n                    }\n                    reject(new Error(\"Error encountered finalizing hash\"));\n                };\n                operation.finish();\n            });\n        });\n    };\n    Sha256.prototype.reset = function () {\n        if (this.secret) {\n            this.operation = getKeyPromise(this.secret).then(function (keyData) {\n                return (0, util_locate_window_1.locateWindow)().msCrypto.subtle.sign(constants_1.SHA_256_HMAC_ALGO, keyData);\n            });\n            this.operation.catch(function () { });\n        }\n        else {\n            this.operation = Promise.resolve((0, util_locate_window_1.locateWindow)().msCrypto.subtle.digest(\"SHA-256\"));\n        }\n    };\n    return Sha256;\n}());\nexports.Sha256 = Sha256;\nfunction getKeyPromise(secret) {\n    return new Promise(function (resolve, reject) {\n        var keyOperation = (0, util_locate_window_1.locateWindow)().msCrypto.subtle.importKey(\"raw\", toArrayBufferView(secret), constants_1.SHA_256_HMAC_ALGO, false, [\"sign\"]);\n        keyOperation.oncomplete = function () {\n            if (keyOperation.result) {\n                resolve(keyOperation.result);\n            }\n            reject(new Error(\"ImportKey completed without importing key.\"));\n        };\n        keyOperation.onerror = function () {\n            reject(new Error(\"ImportKey failed to import key.\"));\n        };\n    });\n}\nfunction toArrayBufferView(data) {\n    if (typeof data === \"string\") {\n        return (0, util_utf8_browser_1.fromUtf8)(data);\n    }\n    if (ArrayBuffer.isView(data)) {\n        return new Uint8Array(data.buffer, data.byteOffset, data.byteLength / Uint8Array.BYTES_PER_ELEMENT);\n    }\n    return new Uint8Array(data);\n}\n//# sourceMappingURL=ie11Sha256.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Sha256 = void 0;\nvar util_1 = require(\"@aws-crypto/util\");\nvar constants_1 = require(\"./constants\");\nvar util_locate_window_1 = require(\"@aws-sdk/util-locate-window\");\nvar Sha256 = /** @class */ (function () {\n    function Sha256(secret) {\n        this.toHash = new Uint8Array(0);\n        this.secret = secret;\n        this.reset();\n    }\n    Sha256.prototype.update = function (data) {\n        if ((0, util_1.isEmptyData)(data)) {\n            return;\n        }\n        var update = (0, util_1.convertToBuffer)(data);\n        var typedArray = new Uint8Array(this.toHash.byteLength + update.byteLength);\n        typedArray.set(this.toHash, 0);\n        typedArray.set(update, this.toHash.byteLength);\n        this.toHash = typedArray;\n    };\n    Sha256.prototype.digest = function () {\n        var _this = this;\n        if (this.key) {\n            return this.key.then(function (key) {\n                return (0, util_locate_window_1.locateWindow)()\n                    .crypto.subtle.sign(constants_1.SHA_256_HMAC_ALGO, key, _this.toHash)\n                    .then(function (data) { return new Uint8Array(data); });\n            });\n        }\n        if ((0, util_1.isEmptyData)(this.toHash)) {\n            return Promise.resolve(constants_1.EMPTY_DATA_SHA_256);\n        }\n        return Promise.resolve()\n            .then(function () {\n            return (0, util_locate_window_1.locateWindow)().crypto.subtle.digest(constants_1.SHA_256_HASH, _this.toHash);\n        })\n            .then(function (data) { return Promise.resolve(new Uint8Array(data)); });\n    };\n    Sha256.prototype.reset = function () {\n        var _this = this;\n        this.toHash = new Uint8Array(0);\n        if (this.secret && this.secret !== void 0) {\n            this.key = new Promise(function (resolve, reject) {\n                (0, util_locate_window_1.locateWindow)()\n                    .crypto.subtle.importKey(\"raw\", (0, util_1.convertToBuffer)(_this.secret), constants_1.SHA_256_HMAC_ALGO, false, [\"sign\"])\n                    .then(resolve, reject);\n            });\n            this.key.catch(function () { });\n        }\n    };\n    return Sha256;\n}());\nexports.Sha256 = Sha256;\n//# sourceMappingURL=webCryptoSha256.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MAX_HASHABLE_LENGTH = exports.INIT = exports.KEY = exports.DIGEST_LENGTH = exports.BLOCK_SIZE = void 0;\n/**\n * @internal\n */\nexports.BLOCK_SIZE = 64;\n/**\n * @internal\n */\nexports.DIGEST_LENGTH = 32;\n/**\n * @internal\n */\nexports.KEY = new Uint32Array([\n    0x428a2f98,\n    0x71374491,\n    0xb5c0fbcf,\n    0xe9b5dba5,\n    0x3956c25b,\n    0x59f111f1,\n    0x923f82a4,\n    0xab1c5ed5,\n    0xd807aa98,\n    0x12835b01,\n    0x243185be,\n    0x550c7dc3,\n    0x72be5d74,\n    0x80deb1fe,\n    0x9bdc06a7,\n    0xc19bf174,\n    0xe49b69c1,\n    0xefbe4786,\n    0x0fc19dc6,\n    0x240ca1cc,\n    0x2de92c6f,\n    0x4a7484aa,\n    0x5cb0a9dc,\n    0x76f988da,\n    0x983e5152,\n    0xa831c66d,\n    0xb00327c8,\n    0xbf597fc7,\n    0xc6e00bf3,\n    0xd5a79147,\n    0x06ca6351,\n    0x14292967,\n    0x27b70a85,\n    0x2e1b2138,\n    0x4d2c6dfc,\n    0x53380d13,\n    0x650a7354,\n    0x766a0abb,\n    0x81c2c92e,\n    0x92722c85,\n    0xa2bfe8a1,\n    0xa81a664b,\n    0xc24b8b70,\n    0xc76c51a3,\n    0xd192e819,\n    0xd6990624,\n    0xf40e3585,\n    0x106aa070,\n    0x19a4c116,\n    0x1e376c08,\n    0x2748774c,\n    0x34b0bcb5,\n    0x391c0cb3,\n    0x4ed8aa4a,\n    0x5b9cca4f,\n    0x682e6ff3,\n    0x748f82ee,\n    0x78a5636f,\n    0x84c87814,\n    0x8cc70208,\n    0x90befffa,\n    0xa4506ceb,\n    0xbef9a3f7,\n    0xc67178f2\n]);\n/**\n * @internal\n */\nexports.INIT = [\n    0x6a09e667,\n    0xbb67ae85,\n    0x3c6ef372,\n    0xa54ff53a,\n    0x510e527f,\n    0x9b05688c,\n    0x1f83d9ab,\n    0x5be0cd19\n];\n/**\n * @internal\n */\nexports.MAX_HASHABLE_LENGTH = Math.pow(2, 53) - 1;\n//# sourceMappingURL=constants.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RawSha256 = void 0;\nvar constants_1 = require(\"./constants\");\n/**\n * @internal\n */\nvar RawSha256 = /** @class */ (function () {\n    function RawSha256() {\n        this.state = Int32Array.from(constants_1.INIT);\n        this.temp = new Int32Array(64);\n        this.buffer = new Uint8Array(64);\n        this.bufferLength = 0;\n        this.bytesHashed = 0;\n        /**\n         * @internal\n         */\n        this.finished = false;\n    }\n    RawSha256.prototype.update = function (data) {\n        if (this.finished) {\n            throw new Error(\"Attempted to update an already finished hash.\");\n        }\n        var position = 0;\n        var byteLength = data.byteLength;\n        this.bytesHashed += byteLength;\n        if (this.bytesHashed * 8 > constants_1.MAX_HASHABLE_LENGTH) {\n            throw new Error(\"Cannot hash more than 2^53 - 1 bits\");\n        }\n        while (byteLength > 0) {\n            this.buffer[this.bufferLength++] = data[position++];\n            byteLength--;\n            if (this.bufferLength === constants_1.BLOCK_SIZE) {\n                this.hashBuffer();\n                this.bufferLength = 0;\n            }\n        }\n    };\n    RawSha256.prototype.digest = function () {\n        if (!this.finished) {\n            var bitsHashed = this.bytesHashed * 8;\n            var bufferView = new DataView(this.buffer.buffer, this.buffer.byteOffset, this.buffer.byteLength);\n            var undecoratedLength = this.bufferLength;\n            bufferView.setUint8(this.bufferLength++, 0x80);\n            // Ensure the final block has enough room for the hashed length\n            if (undecoratedLength % constants_1.BLOCK_SIZE >= constants_1.BLOCK_SIZE - 8) {\n                for (var i = this.bufferLength; i < constants_1.BLOCK_SIZE; i++) {\n                    bufferView.setUint8(i, 0);\n                }\n                this.hashBuffer();\n                this.bufferLength = 0;\n            }\n            for (var i = this.bufferLength; i < constants_1.BLOCK_SIZE - 8; i++) {\n                bufferView.setUint8(i, 0);\n            }\n            bufferView.setUint32(constants_1.BLOCK_SIZE - 8, Math.floor(bitsHashed / 0x100000000), true);\n            bufferView.setUint32(constants_1.BLOCK_SIZE - 4, bitsHashed);\n            this.hashBuffer();\n            this.finished = true;\n        }\n        // The value in state is little-endian rather than big-endian, so flip\n        // each word into a new Uint8Array\n        var out = new Uint8Array(constants_1.DIGEST_LENGTH);\n        for (var i = 0; i < 8; i++) {\n            out[i * 4] = (this.state[i] >>> 24) & 0xff;\n            out[i * 4 + 1] = (this.state[i] >>> 16) & 0xff;\n            out[i * 4 + 2] = (this.state[i] >>> 8) & 0xff;\n            out[i * 4 + 3] = (this.state[i] >>> 0) & 0xff;\n        }\n        return out;\n    };\n    RawSha256.prototype.hashBuffer = function () {\n        var _a = this, buffer = _a.buffer, state = _a.state;\n        var state0 = state[0], state1 = state[1], state2 = state[2], state3 = state[3], state4 = state[4], state5 = state[5], state6 = state[6], state7 = state[7];\n        for (var i = 0; i < constants_1.BLOCK_SIZE; i++) {\n            if (i < 16) {\n                this.temp[i] =\n                    ((buffer[i * 4] & 0xff) << 24) |\n                        ((buffer[i * 4 + 1] & 0xff) << 16) |\n                        ((buffer[i * 4 + 2] & 0xff) << 8) |\n                        (buffer[i * 4 + 3] & 0xff);\n            }\n            else {\n                var u = this.temp[i - 2];\n                var t1_1 = ((u >>> 17) | (u << 15)) ^ ((u >>> 19) | (u << 13)) ^ (u >>> 10);\n                u = this.temp[i - 15];\n                var t2_1 = ((u >>> 7) | (u << 25)) ^ ((u >>> 18) | (u << 14)) ^ (u >>> 3);\n                this.temp[i] =\n                    ((t1_1 + this.temp[i - 7]) | 0) + ((t2_1 + this.temp[i - 16]) | 0);\n            }\n            var t1 = ((((((state4 >>> 6) | (state4 << 26)) ^\n                ((state4 >>> 11) | (state4 << 21)) ^\n                ((state4 >>> 25) | (state4 << 7))) +\n                ((state4 & state5) ^ (~state4 & state6))) |\n                0) +\n                ((state7 + ((constants_1.KEY[i] + this.temp[i]) | 0)) | 0)) |\n                0;\n            var t2 = ((((state0 >>> 2) | (state0 << 30)) ^\n                ((state0 >>> 13) | (state0 << 19)) ^\n                ((state0 >>> 22) | (state0 << 10))) +\n                ((state0 & state1) ^ (state0 & state2) ^ (state1 & state2))) |\n                0;\n            state7 = state6;\n            state6 = state5;\n            state5 = state4;\n            state4 = (state3 + t1) | 0;\n            state3 = state2;\n            state2 = state1;\n            state1 = state0;\n            state0 = (t1 + t2) | 0;\n        }\n        state[0] += state0;\n        state[1] += state1;\n        state[2] += state2;\n        state[3] += state3;\n        state[4] += state4;\n        state[5] += state5;\n        state[6] += state6;\n        state[7] += state7;\n    };\n    return RawSha256;\n}());\nexports.RawSha256 = RawSha256;\n//# sourceMappingURL=RawSha256.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Sha256 = void 0;\nvar tslib_1 = require(\"tslib\");\nvar constants_1 = require(\"./constants\");\nvar RawSha256_1 = require(\"./RawSha256\");\nvar util_1 = require(\"@aws-crypto/util\");\nvar Sha256 = /** @class */ (function () {\n    function Sha256(secret) {\n        this.secret = secret;\n        this.hash = new RawSha256_1.RawSha256();\n        this.reset();\n    }\n    Sha256.prototype.update = function (toHash) {\n        if ((0, util_1.isEmptyData)(toHash) || this.error) {\n            return;\n        }\n        try {\n            this.hash.update((0, util_1.convertToBuffer)(toHash));\n        }\n        catch (e) {\n            this.error = e;\n        }\n    };\n    /* This synchronous method keeps compatibility\n     * with the v2 aws-sdk.\n     */\n    Sha256.prototype.digestSync = function () {\n        if (this.error) {\n            throw this.error;\n        }\n        if (this.outer) {\n            if (!this.outer.finished) {\n                this.outer.update(this.hash.digest());\n            }\n            return this.outer.digest();\n        }\n        return this.hash.digest();\n    };\n    /* The underlying digest method here is synchronous.\n     * To keep the same interface with the other hash functions\n     * the default is to expose this as an async method.\n     * However, it can sometimes be useful to have a sync method.\n     */\n    Sha256.prototype.digest = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this.digestSync()];\n            });\n        });\n    };\n    Sha256.prototype.reset = function () {\n        this.hash = new RawSha256_1.RawSha256();\n        if (this.secret) {\n            this.outer = new RawSha256_1.RawSha256();\n            var inner = bufferFromSecret(this.secret);\n            var outer = new Uint8Array(constants_1.BLOCK_SIZE);\n            outer.set(inner);\n            for (var i = 0; i < constants_1.BLOCK_SIZE; i++) {\n                inner[i] ^= 0x36;\n                outer[i] ^= 0x5c;\n            }\n            this.hash.update(inner);\n            this.outer.update(outer);\n            // overwrite the copied key in memory\n            for (var i = 0; i < inner.byteLength; i++) {\n                inner[i] = 0;\n            }\n        }\n    };\n    return Sha256;\n}());\nexports.Sha256 = Sha256;\nfunction bufferFromSecret(secret) {\n    var input = (0, util_1.convertToBuffer)(secret);\n    if (input.byteLength > constants_1.BLOCK_SIZE) {\n        var bufferHash = new RawSha256_1.RawSha256();\n        bufferHash.update(input);\n        input = bufferHash.digest();\n    }\n    var buffer = new Uint8Array(constants_1.BLOCK_SIZE);\n    buffer.set(input);\n    return buffer;\n}\n//# sourceMappingURL=jsSha256.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./jsSha256\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Sha256 = void 0;\nvar ie11Sha256_1 = require(\"./ie11Sha256\");\nvar webCryptoSha256_1 = require(\"./webCryptoSha256\");\nvar sha256_js_1 = require(\"@aws-crypto/sha256-js\");\nvar supports_web_crypto_1 = require(\"@aws-crypto/supports-web-crypto\");\nvar ie11_detection_1 = require(\"@aws-crypto/ie11-detection\");\nvar util_locate_window_1 = require(\"@aws-sdk/util-locate-window\");\nvar util_1 = require(\"@aws-crypto/util\");\nvar Sha256 = /** @class */ (function () {\n    function Sha256(secret) {\n        if ((0, supports_web_crypto_1.supportsWebCrypto)((0, util_locate_window_1.locateWindow)())) {\n            this.hash = new webCryptoSha256_1.Sha256(secret);\n        }\n        else if ((0, ie11_detection_1.isMsWindow)((0, util_locate_window_1.locateWindow)())) {\n            this.hash = new ie11Sha256_1.Sha256(secret);\n        }\n        else {\n            this.hash = new sha256_js_1.Sha256(secret);\n        }\n    }\n    Sha256.prototype.update = function (data, encoding) {\n        this.hash.update((0, util_1.convertToBuffer)(data));\n    };\n    Sha256.prototype.digest = function () {\n        return this.hash.digest();\n    };\n    Sha256.prototype.reset = function () {\n        this.hash.reset();\n    };\n    return Sha256;\n}());\nexports.Sha256 = Sha256;\n//# sourceMappingURL=crossPlatformSha256.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WebCryptoSha256 = exports.Ie11Sha256 = void 0;\nvar tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./crossPlatformSha256\"), exports);\nvar ie11Sha256_1 = require(\"./ie11Sha256\");\nObject.defineProperty(exports, \"Ie11Sha256\", { enumerable: true, get: function () { return ie11Sha256_1.Sha256; } });\nvar webCryptoSha256_1 = require(\"./webCryptoSha256\");\nObject.defineProperty(exports, \"WebCryptoSha256\", { enumerable: true, get: function () { return webCryptoSha256_1.Sha256; } });\n//# sourceMappingURL=index.js.map","// NOTE: this list must be up-to-date with browsers listed in\n// test/acceptance/useragentstrings.yml\nexport const BROWSER_ALIASES_MAP = {\n  'Amazon Silk': 'amazon_silk',\n  'Android Browser': 'android',\n  Bada: 'bada',\n  BlackBerry: 'blackberry',\n  Chrome: 'chrome',\n  Chromium: 'chromium',\n  Electron: 'electron',\n  Epiphany: 'epiphany',\n  Firefox: 'firefox',\n  Focus: 'focus',\n  Generic: 'generic',\n  'Google Search': 'google_search',\n  Googlebot: 'googlebot',\n  'Internet Explorer': 'ie',\n  'K-Meleon': 'k_meleon',\n  Maxthon: 'maxthon',\n  'Microsoft Edge': 'edge',\n  'MZ Browser': 'mz',\n  'NAVER Whale Browser': 'naver',\n  Opera: 'opera',\n  'Opera Coast': 'opera_coast',\n  PhantomJS: 'phantomjs',\n  Puffin: 'puffin',\n  QupZilla: 'qupzilla',\n  QQ: 'qq',\n  QQLite: 'qqlite',\n  Safari: 'safari',\n  Sailfish: 'sailfish',\n  'Samsung Internet for Android': 'samsung_internet',\n  SeaMonkey: 'seamonkey',\n  Sleipnir: 'sleipnir',\n  Swing: 'swing',\n  Tizen: 'tizen',\n  'UC Browser': 'uc',\n  Vivaldi: 'vivaldi',\n  'WebOS Browser': 'webos',\n  WeChat: 'wechat',\n  'Yandex Browser': 'yandex',\n  Roku: 'roku',\n};\n\nexport const BROWSER_MAP = {\n  amazon_silk: 'Amazon Silk',\n  android: 'Android Browser',\n  bada: 'Bada',\n  blackberry: 'BlackBerry',\n  chrome: 'Chrome',\n  chromium: 'Chromium',\n  electron: 'Electron',\n  epiphany: 'Epiphany',\n  firefox: 'Firefox',\n  focus: 'Focus',\n  generic: 'Generic',\n  googlebot: 'Googlebot',\n  google_search: 'Google Search',\n  ie: 'Internet Explorer',\n  k_meleon: 'K-Meleon',\n  maxthon: 'Maxthon',\n  edge: 'Microsoft Edge',\n  mz: 'MZ Browser',\n  naver: 'NAVER Whale Browser',\n  opera: 'Opera',\n  opera_coast: 'Opera Coast',\n  phantomjs: 'PhantomJS',\n  puffin: 'Puffin',\n  qupzilla: 'QupZilla',\n  qq: 'QQ Browser',\n  qqlite: 'QQ Browser Lite',\n  safari: 'Safari',\n  sailfish: 'Sailfish',\n  samsung_internet: 'Samsung Internet for Android',\n  seamonkey: 'SeaMonkey',\n  sleipnir: 'Sleipnir',\n  swing: 'Swing',\n  tizen: 'Tizen',\n  uc: 'UC Browser',\n  vivaldi: 'Vivaldi',\n  webos: 'WebOS Browser',\n  wechat: 'WeChat',\n  yandex: 'Yandex Browser',\n};\n\nexport const PLATFORMS_MAP = {\n  tablet: 'tablet',\n  mobile: 'mobile',\n  desktop: 'desktop',\n  tv: 'tv',\n};\n\nexport const OS_MAP = {\n  WindowsPhone: 'Windows Phone',\n  Windows: 'Windows',\n  MacOS: 'macOS',\n  iOS: 'iOS',\n  Android: 'Android',\n  WebOS: 'WebOS',\n  BlackBerry: 'BlackBerry',\n  Bada: 'Bada',\n  Tizen: 'Tizen',\n  Linux: 'Linux',\n  ChromeOS: 'Chrome OS',\n  PlayStation4: 'PlayStation 4',\n  Roku: 'Roku',\n};\n\nexport const ENGINE_MAP = {\n  EdgeHTML: 'EdgeHTML',\n  Blink: 'Blink',\n  Trident: 'Trident',\n  Presto: 'Presto',\n  Gecko: 'Gecko',\n  WebKit: 'WebKit',\n};\n","import { BROWSER_MAP, BROWSER_ALIASES_MAP } from './constants.js';\n\nexport default class Utils {\n  /**\n   * Get first matched item for a string\n   * @param {RegExp} regexp\n   * @param {String} ua\n   * @return {Array|{index: number, input: string}|*|boolean|string}\n   */\n  static getFirstMatch(regexp, ua) {\n    const match = ua.match(regexp);\n    return (match && match.length > 0 && match[1]) || '';\n  }\n\n  /**\n   * Get second matched item for a string\n   * @param regexp\n   * @param {String} ua\n   * @return {Array|{index: number, input: string}|*|boolean|string}\n   */\n  static getSecondMatch(regexp, ua) {\n    const match = ua.match(regexp);\n    return (match && match.length > 1 && match[2]) || '';\n  }\n\n  /**\n   * Match a regexp and return a constant or undefined\n   * @param {RegExp} regexp\n   * @param {String} ua\n   * @param {*} _const Any const that will be returned if regexp matches the string\n   * @return {*}\n   */\n  static matchAndReturnConst(regexp, ua, _const) {\n    if (regexp.test(ua)) {\n      return _const;\n    }\n    return void (0);\n  }\n\n  static getWindowsVersionName(version) {\n    switch (version) {\n      case 'NT': return 'NT';\n      case 'XP': return 'XP';\n      case 'NT 5.0': return '2000';\n      case 'NT 5.1': return 'XP';\n      case 'NT 5.2': return '2003';\n      case 'NT 6.0': return 'Vista';\n      case 'NT 6.1': return '7';\n      case 'NT 6.2': return '8';\n      case 'NT 6.3': return '8.1';\n      case 'NT 10.0': return '10';\n      default: return undefined;\n    }\n  }\n\n  /**\n   * Get macOS version name\n   *    10.5 - Leopard\n   *    10.6 - Snow Leopard\n   *    10.7 - Lion\n   *    10.8 - Mountain Lion\n   *    10.9 - Mavericks\n   *    10.10 - Yosemite\n   *    10.11 - El Capitan\n   *    10.12 - Sierra\n   *    10.13 - High Sierra\n   *    10.14 - Mojave\n   *    10.15 - Catalina\n   *\n   * @example\n   *   getMacOSVersionName(\"10.14\") // 'Mojave'\n   *\n   * @param  {string} version\n   * @return {string} versionName\n   */\n  static getMacOSVersionName(version) {\n    const v = version.split('.').splice(0, 2).map(s => parseInt(s, 10) || 0);\n    v.push(0);\n    if (v[0] !== 10) return undefined;\n    switch (v[1]) {\n      case 5: return 'Leopard';\n      case 6: return 'Snow Leopard';\n      case 7: return 'Lion';\n      case 8: return 'Mountain Lion';\n      case 9: return 'Mavericks';\n      case 10: return 'Yosemite';\n      case 11: return 'El Capitan';\n      case 12: return 'Sierra';\n      case 13: return 'High Sierra';\n      case 14: return 'Mojave';\n      case 15: return 'Catalina';\n      default: return undefined;\n    }\n  }\n\n  /**\n   * Get Android version name\n   *    1.5 - Cupcake\n   *    1.6 - Donut\n   *    2.0 - Eclair\n   *    2.1 - Eclair\n   *    2.2 - Froyo\n   *    2.x - Gingerbread\n   *    3.x - Honeycomb\n   *    4.0 - Ice Cream Sandwich\n   *    4.1 - Jelly Bean\n   *    4.4 - KitKat\n   *    5.x - Lollipop\n   *    6.x - Marshmallow\n   *    7.x - Nougat\n   *    8.x - Oreo\n   *    9.x - Pie\n   *\n   * @example\n   *   getAndroidVersionName(\"7.0\") // 'Nougat'\n   *\n   * @param  {string} version\n   * @return {string} versionName\n   */\n  static getAndroidVersionName(version) {\n    const v = version.split('.').splice(0, 2).map(s => parseInt(s, 10) || 0);\n    v.push(0);\n    if (v[0] === 1 && v[1] < 5) return undefined;\n    if (v[0] === 1 && v[1] < 6) return 'Cupcake';\n    if (v[0] === 1 && v[1] >= 6) return 'Donut';\n    if (v[0] === 2 && v[1] < 2) return 'Eclair';\n    if (v[0] === 2 && v[1] === 2) return 'Froyo';\n    if (v[0] === 2 && v[1] > 2) return 'Gingerbread';\n    if (v[0] === 3) return 'Honeycomb';\n    if (v[0] === 4 && v[1] < 1) return 'Ice Cream Sandwich';\n    if (v[0] === 4 && v[1] < 4) return 'Jelly Bean';\n    if (v[0] === 4 && v[1] >= 4) return 'KitKat';\n    if (v[0] === 5) return 'Lollipop';\n    if (v[0] === 6) return 'Marshmallow';\n    if (v[0] === 7) return 'Nougat';\n    if (v[0] === 8) return 'Oreo';\n    if (v[0] === 9) return 'Pie';\n    return undefined;\n  }\n\n  /**\n   * Get version precisions count\n   *\n   * @example\n   *   getVersionPrecision(\"1.10.3\") // 3\n   *\n   * @param  {string} version\n   * @return {number}\n   */\n  static getVersionPrecision(version) {\n    return version.split('.').length;\n  }\n\n  /**\n   * Calculate browser version weight\n   *\n   * @example\n   *   compareVersions('1.10.2.1',  '1.8.2.1.90')    // 1\n   *   compareVersions('1.010.2.1', '1.09.2.1.90');  // 1\n   *   compareVersions('1.10.2.1',  '1.10.2.1');     // 0\n   *   compareVersions('1.10.2.1',  '1.0800.2');     // -1\n   *   compareVersions('1.10.2.1',  '1.10',  true);  // 0\n   *\n   * @param {String} versionA versions versions to compare\n   * @param {String} versionB versions versions to compare\n   * @param {boolean} [isLoose] enable loose comparison\n   * @return {Number} comparison result: -1 when versionA is lower,\n   * 1 when versionA is bigger, 0 when both equal\n   */\n  /* eslint consistent-return: 1 */\n  static compareVersions(versionA, versionB, isLoose = false) {\n    // 1) get common precision for both versions, for example for \"10.0\" and \"9\" it should be 2\n    const versionAPrecision = Utils.getVersionPrecision(versionA);\n    const versionBPrecision = Utils.getVersionPrecision(versionB);\n\n    let precision = Math.max(versionAPrecision, versionBPrecision);\n    let lastPrecision = 0;\n\n    const chunks = Utils.map([versionA, versionB], (version) => {\n      const delta = precision - Utils.getVersionPrecision(version);\n\n      // 2) \"9\" -> \"9.0\" (for precision = 2)\n      const _version = version + new Array(delta + 1).join('.0');\n\n      // 3) \"9.0\" -> [\"000000000\"\", \"000000009\"]\n      return Utils.map(_version.split('.'), chunk => new Array(20 - chunk.length).join('0') + chunk).reverse();\n    });\n\n    // adjust precision for loose comparison\n    if (isLoose) {\n      lastPrecision = precision - Math.min(versionAPrecision, versionBPrecision);\n    }\n\n    // iterate in reverse order by reversed chunks array\n    precision -= 1;\n    while (precision >= lastPrecision) {\n      // 4) compare: \"000000009\" > \"000000010\" = false (but \"9\" > \"10\" = true)\n      if (chunks[0][precision] > chunks[1][precision]) {\n        return 1;\n      }\n\n      if (chunks[0][precision] === chunks[1][precision]) {\n        if (precision === lastPrecision) {\n          // all version chunks are same\n          return 0;\n        }\n\n        precision -= 1;\n      } else if (chunks[0][precision] < chunks[1][precision]) {\n        return -1;\n      }\n    }\n\n    return undefined;\n  }\n\n  /**\n   * Array::map polyfill\n   *\n   * @param  {Array} arr\n   * @param  {Function} iterator\n   * @return {Array}\n   */\n  static map(arr, iterator) {\n    const result = [];\n    let i;\n    if (Array.prototype.map) {\n      return Array.prototype.map.call(arr, iterator);\n    }\n    for (i = 0; i < arr.length; i += 1) {\n      result.push(iterator(arr[i]));\n    }\n    return result;\n  }\n\n  /**\n   * Array::find polyfill\n   *\n   * @param  {Array} arr\n   * @param  {Function} predicate\n   * @return {Array}\n   */\n  static find(arr, predicate) {\n    let i;\n    let l;\n    if (Array.prototype.find) {\n      return Array.prototype.find.call(arr, predicate);\n    }\n    for (i = 0, l = arr.length; i < l; i += 1) {\n      const value = arr[i];\n      if (predicate(value, i)) {\n        return value;\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Object::assign polyfill\n   *\n   * @param  {Object} obj\n   * @param  {Object} ...objs\n   * @return {Object}\n   */\n  static assign(obj, ...assigners) {\n    const result = obj;\n    let i;\n    let l;\n    if (Object.assign) {\n      return Object.assign(obj, ...assigners);\n    }\n    for (i = 0, l = assigners.length; i < l; i += 1) {\n      const assigner = assigners[i];\n      if (typeof assigner === 'object' && assigner !== null) {\n        const keys = Object.keys(assigner);\n        keys.forEach((key) => {\n          result[key] = assigner[key];\n        });\n      }\n    }\n    return obj;\n  }\n\n  /**\n   * Get short version/alias for a browser name\n   *\n   * @example\n   *   getBrowserAlias('Microsoft Edge') // edge\n   *\n   * @param  {string} browserName\n   * @return {string}\n   */\n  static getBrowserAlias(browserName) {\n    return BROWSER_ALIASES_MAP[browserName];\n  }\n\n  /**\n   * Get short version/alias for a browser name\n   *\n   * @example\n   *   getBrowserAlias('edge') // Microsoft Edge\n   *\n   * @param  {string} browserAlias\n   * @return {string}\n   */\n  static getBrowserTypeByAlias(browserAlias) {\n    return BROWSER_MAP[browserAlias] || '';\n  }\n}\n","/**\n * Browsers' descriptors\n *\n * The idea of descriptors is simple. You should know about them two simple things:\n * 1. Every descriptor has a method or property called `test` and a `describe` method.\n * 2. Order of descriptors is important.\n *\n * More details:\n * 1. Method or property `test` serves as a way to detect whether the UA string\n * matches some certain browser or not. The `describe` method helps to make a result\n * object with params that show some browser-specific things: name, version, etc.\n * 2. Order of descriptors is important because a Parser goes through them one by one\n * in course. For example, if you insert Chrome's descriptor as the first one,\n * more then a half of browsers will be described as Chrome, because they will pass\n * the Chrome descriptor's test.\n *\n * Descriptor's `test` could be a property with an array of RegExps, where every RegExp\n * will be applied to a UA string to test it whether it matches or not.\n * If a descriptor has two or more regexps in the `test` array it tests them one by one\n * with a logical sum operation. Parser stops if it has found any RegExp that matches the UA.\n *\n * Or `test` could be a method. In that case it gets a Parser instance and should\n * return true/false to get the Parser know if this browser descriptor matches the UA or not.\n */\n\nimport Utils from './utils.js';\n\nconst commonVersionIdentifier = /version\\/(\\d+(\\.?_?\\d+)+)/i;\n\nconst browsersList = [\n  /* Googlebot */\n  {\n    test: [/googlebot/i],\n    describe(ua) {\n      const browser = {\n        name: 'Googlebot',\n      };\n      const version = Utils.getFirstMatch(/googlebot\\/(\\d+(\\.\\d+))/i, ua) || Utils.getFirstMatch(commonVersionIdentifier, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n\n  /* Opera < 13.0 */\n  {\n    test: [/opera/i],\n    describe(ua) {\n      const browser = {\n        name: 'Opera',\n      };\n      const version = Utils.getFirstMatch(commonVersionIdentifier, ua) || Utils.getFirstMatch(/(?:opera)[\\s/](\\d+(\\.?_?\\d+)+)/i, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n\n  /* Opera > 13.0 */\n  {\n    test: [/opr\\/|opios/i],\n    describe(ua) {\n      const browser = {\n        name: 'Opera',\n      };\n      const version = Utils.getFirstMatch(/(?:opr|opios)[\\s/](\\S+)/i, ua) || Utils.getFirstMatch(commonVersionIdentifier, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/SamsungBrowser/i],\n    describe(ua) {\n      const browser = {\n        name: 'Samsung Internet for Android',\n      };\n      const version = Utils.getFirstMatch(commonVersionIdentifier, ua) || Utils.getFirstMatch(/(?:SamsungBrowser)[\\s/](\\d+(\\.?_?\\d+)+)/i, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/Whale/i],\n    describe(ua) {\n      const browser = {\n        name: 'NAVER Whale Browser',\n      };\n      const version = Utils.getFirstMatch(commonVersionIdentifier, ua) || Utils.getFirstMatch(/(?:whale)[\\s/](\\d+(?:\\.\\d+)+)/i, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/MZBrowser/i],\n    describe(ua) {\n      const browser = {\n        name: 'MZ Browser',\n      };\n      const version = Utils.getFirstMatch(/(?:MZBrowser)[\\s/](\\d+(?:\\.\\d+)+)/i, ua) || Utils.getFirstMatch(commonVersionIdentifier, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/focus/i],\n    describe(ua) {\n      const browser = {\n        name: 'Focus',\n      };\n      const version = Utils.getFirstMatch(/(?:focus)[\\s/](\\d+(?:\\.\\d+)+)/i, ua) || Utils.getFirstMatch(commonVersionIdentifier, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/swing/i],\n    describe(ua) {\n      const browser = {\n        name: 'Swing',\n      };\n      const version = Utils.getFirstMatch(/(?:swing)[\\s/](\\d+(?:\\.\\d+)+)/i, ua) || Utils.getFirstMatch(commonVersionIdentifier, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/coast/i],\n    describe(ua) {\n      const browser = {\n        name: 'Opera Coast',\n      };\n      const version = Utils.getFirstMatch(commonVersionIdentifier, ua) || Utils.getFirstMatch(/(?:coast)[\\s/](\\d+(\\.?_?\\d+)+)/i, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/opt\\/\\d+(?:.?_?\\d+)+/i],\n    describe(ua) {\n      const browser = {\n        name: 'Opera Touch',\n      };\n      const version = Utils.getFirstMatch(/(?:opt)[\\s/](\\d+(\\.?_?\\d+)+)/i, ua) || Utils.getFirstMatch(commonVersionIdentifier, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/yabrowser/i],\n    describe(ua) {\n      const browser = {\n        name: 'Yandex Browser',\n      };\n      const version = Utils.getFirstMatch(/(?:yabrowser)[\\s/](\\d+(\\.?_?\\d+)+)/i, ua) || Utils.getFirstMatch(commonVersionIdentifier, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/ucbrowser/i],\n    describe(ua) {\n      const browser = {\n        name: 'UC Browser',\n      };\n      const version = Utils.getFirstMatch(commonVersionIdentifier, ua) || Utils.getFirstMatch(/(?:ucbrowser)[\\s/](\\d+(\\.?_?\\d+)+)/i, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/Maxthon|mxios/i],\n    describe(ua) {\n      const browser = {\n        name: 'Maxthon',\n      };\n      const version = Utils.getFirstMatch(commonVersionIdentifier, ua) || Utils.getFirstMatch(/(?:Maxthon|mxios)[\\s/](\\d+(\\.?_?\\d+)+)/i, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/epiphany/i],\n    describe(ua) {\n      const browser = {\n        name: 'Epiphany',\n      };\n      const version = Utils.getFirstMatch(commonVersionIdentifier, ua) || Utils.getFirstMatch(/(?:epiphany)[\\s/](\\d+(\\.?_?\\d+)+)/i, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/puffin/i],\n    describe(ua) {\n      const browser = {\n        name: 'Puffin',\n      };\n      const version = Utils.getFirstMatch(commonVersionIdentifier, ua) || Utils.getFirstMatch(/(?:puffin)[\\s/](\\d+(\\.?_?\\d+)+)/i, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/sleipnir/i],\n    describe(ua) {\n      const browser = {\n        name: 'Sleipnir',\n      };\n      const version = Utils.getFirstMatch(commonVersionIdentifier, ua) || Utils.getFirstMatch(/(?:sleipnir)[\\s/](\\d+(\\.?_?\\d+)+)/i, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/k-meleon/i],\n    describe(ua) {\n      const browser = {\n        name: 'K-Meleon',\n      };\n      const version = Utils.getFirstMatch(commonVersionIdentifier, ua) || Utils.getFirstMatch(/(?:k-meleon)[\\s/](\\d+(\\.?_?\\d+)+)/i, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/micromessenger/i],\n    describe(ua) {\n      const browser = {\n        name: 'WeChat',\n      };\n      const version = Utils.getFirstMatch(/(?:micromessenger)[\\s/](\\d+(\\.?_?\\d+)+)/i, ua) || Utils.getFirstMatch(commonVersionIdentifier, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/qqbrowser/i],\n    describe(ua) {\n      const browser = {\n        name: (/qqbrowserlite/i).test(ua) ? 'QQ Browser Lite' : 'QQ Browser',\n      };\n      const version = Utils.getFirstMatch(/(?:qqbrowserlite|qqbrowser)[/](\\d+(\\.?_?\\d+)+)/i, ua) || Utils.getFirstMatch(commonVersionIdentifier, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/msie|trident/i],\n    describe(ua) {\n      const browser = {\n        name: 'Internet Explorer',\n      };\n      const version = Utils.getFirstMatch(/(?:msie |rv:)(\\d+(\\.?_?\\d+)+)/i, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/\\sedg\\//i],\n    describe(ua) {\n      const browser = {\n        name: 'Microsoft Edge',\n      };\n\n      const version = Utils.getFirstMatch(/\\sedg\\/(\\d+(\\.?_?\\d+)+)/i, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/edg([ea]|ios)/i],\n    describe(ua) {\n      const browser = {\n        name: 'Microsoft Edge',\n      };\n\n      const version = Utils.getSecondMatch(/edg([ea]|ios)\\/(\\d+(\\.?_?\\d+)+)/i, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/vivaldi/i],\n    describe(ua) {\n      const browser = {\n        name: 'Vivaldi',\n      };\n      const version = Utils.getFirstMatch(/vivaldi\\/(\\d+(\\.?_?\\d+)+)/i, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/seamonkey/i],\n    describe(ua) {\n      const browser = {\n        name: 'SeaMonkey',\n      };\n      const version = Utils.getFirstMatch(/seamonkey\\/(\\d+(\\.?_?\\d+)+)/i, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/sailfish/i],\n    describe(ua) {\n      const browser = {\n        name: 'Sailfish',\n      };\n\n      const version = Utils.getFirstMatch(/sailfish\\s?browser\\/(\\d+(\\.\\d+)?)/i, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/silk/i],\n    describe(ua) {\n      const browser = {\n        name: 'Amazon Silk',\n      };\n      const version = Utils.getFirstMatch(/silk\\/(\\d+(\\.?_?\\d+)+)/i, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/phantom/i],\n    describe(ua) {\n      const browser = {\n        name: 'PhantomJS',\n      };\n      const version = Utils.getFirstMatch(/phantomjs\\/(\\d+(\\.?_?\\d+)+)/i, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/slimerjs/i],\n    describe(ua) {\n      const browser = {\n        name: 'SlimerJS',\n      };\n      const version = Utils.getFirstMatch(/slimerjs\\/(\\d+(\\.?_?\\d+)+)/i, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/blackberry|\\bbb\\d+/i, /rim\\stablet/i],\n    describe(ua) {\n      const browser = {\n        name: 'BlackBerry',\n      };\n      const version = Utils.getFirstMatch(commonVersionIdentifier, ua) || Utils.getFirstMatch(/blackberry[\\d]+\\/(\\d+(\\.?_?\\d+)+)/i, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/(web|hpw)[o0]s/i],\n    describe(ua) {\n      const browser = {\n        name: 'WebOS Browser',\n      };\n      const version = Utils.getFirstMatch(commonVersionIdentifier, ua) || Utils.getFirstMatch(/w(?:eb)?[o0]sbrowser\\/(\\d+(\\.?_?\\d+)+)/i, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/bada/i],\n    describe(ua) {\n      const browser = {\n        name: 'Bada',\n      };\n      const version = Utils.getFirstMatch(/dolfin\\/(\\d+(\\.?_?\\d+)+)/i, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/tizen/i],\n    describe(ua) {\n      const browser = {\n        name: 'Tizen',\n      };\n      const version = Utils.getFirstMatch(/(?:tizen\\s?)?browser\\/(\\d+(\\.?_?\\d+)+)/i, ua) || Utils.getFirstMatch(commonVersionIdentifier, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/qupzilla/i],\n    describe(ua) {\n      const browser = {\n        name: 'QupZilla',\n      };\n      const version = Utils.getFirstMatch(/(?:qupzilla)[\\s/](\\d+(\\.?_?\\d+)+)/i, ua) || Utils.getFirstMatch(commonVersionIdentifier, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/firefox|iceweasel|fxios/i],\n    describe(ua) {\n      const browser = {\n        name: 'Firefox',\n      };\n      const version = Utils.getFirstMatch(/(?:firefox|iceweasel|fxios)[\\s/](\\d+(\\.?_?\\d+)+)/i, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/electron/i],\n    describe(ua) {\n      const browser = {\n        name: 'Electron',\n      };\n      const version = Utils.getFirstMatch(/(?:electron)\\/(\\d+(\\.?_?\\d+)+)/i, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/MiuiBrowser/i],\n    describe(ua) {\n      const browser = {\n        name: 'Miui',\n      };\n      const version = Utils.getFirstMatch(/(?:MiuiBrowser)[\\s/](\\d+(\\.?_?\\d+)+)/i, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/chromium/i],\n    describe(ua) {\n      const browser = {\n        name: 'Chromium',\n      };\n      const version = Utils.getFirstMatch(/(?:chromium)[\\s/](\\d+(\\.?_?\\d+)+)/i, ua) || Utils.getFirstMatch(commonVersionIdentifier, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/chrome|crios|crmo/i],\n    describe(ua) {\n      const browser = {\n        name: 'Chrome',\n      };\n      const version = Utils.getFirstMatch(/(?:chrome|crios|crmo)\\/(\\d+(\\.?_?\\d+)+)/i, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/GSA/i],\n    describe(ua) {\n      const browser = {\n        name: 'Google Search',\n      };\n      const version = Utils.getFirstMatch(/(?:GSA)\\/(\\d+(\\.?_?\\d+)+)/i, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n\n  /* Android Browser */\n  {\n    test(parser) {\n      const notLikeAndroid = !parser.test(/like android/i);\n      const butAndroid = parser.test(/android/i);\n      return notLikeAndroid && butAndroid;\n    },\n    describe(ua) {\n      const browser = {\n        name: 'Android Browser',\n      };\n      const version = Utils.getFirstMatch(commonVersionIdentifier, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n\n  /* PlayStation 4 */\n  {\n    test: [/playstation 4/i],\n    describe(ua) {\n      const browser = {\n        name: 'PlayStation 4',\n      };\n      const version = Utils.getFirstMatch(commonVersionIdentifier, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n\n  /* Safari */\n  {\n    test: [/safari|applewebkit/i],\n    describe(ua) {\n      const browser = {\n        name: 'Safari',\n      };\n      const version = Utils.getFirstMatch(commonVersionIdentifier, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n\n  /* Something else */\n  {\n    test: [/.*/i],\n    describe(ua) {\n      /* Here we try to make sure that there are explicit details about the device\n       * in order to decide what regexp exactly we want to apply\n       * (as there is a specific decision based on that conclusion)\n       */\n      const regexpWithoutDeviceSpec = /^(.*)\\/(.*) /;\n      const regexpWithDeviceSpec = /^(.*)\\/(.*)[ \\t]\\((.*)/;\n      const hasDeviceSpec = ua.search('\\\\(') !== -1;\n      const regexp = hasDeviceSpec ? regexpWithDeviceSpec : regexpWithoutDeviceSpec;\n      return {\n        name: Utils.getFirstMatch(regexp, ua),\n        version: Utils.getSecondMatch(regexp, ua),\n      };\n    },\n  },\n];\n\nexport default browsersList;\n","import Utils from './utils.js';\nimport { OS_MAP } from './constants.js';\n\nexport default [\n  /* Roku */\n  {\n    test: [/Roku\\/DVP/],\n    describe(ua) {\n      const version = Utils.getFirstMatch(/Roku\\/DVP-(\\d+\\.\\d+)/i, ua);\n      return {\n        name: OS_MAP.Roku,\n        version,\n      };\n    },\n  },\n\n  /* Windows Phone */\n  {\n    test: [/windows phone/i],\n    describe(ua) {\n      const version = Utils.getFirstMatch(/windows phone (?:os)?\\s?(\\d+(\\.\\d+)*)/i, ua);\n      return {\n        name: OS_MAP.WindowsPhone,\n        version,\n      };\n    },\n  },\n\n  /* Windows */\n  {\n    test: [/windows /i],\n    describe(ua) {\n      const version = Utils.getFirstMatch(/Windows ((NT|XP)( \\d\\d?.\\d)?)/i, ua);\n      const versionName = Utils.getWindowsVersionName(version);\n\n      return {\n        name: OS_MAP.Windows,\n        version,\n        versionName,\n      };\n    },\n  },\n\n  /* Firefox on iPad */\n  {\n    test: [/Macintosh(.*?) FxiOS(.*?)\\//],\n    describe(ua) {\n      const result = {\n        name: OS_MAP.iOS,\n      };\n      const version = Utils.getSecondMatch(/(Version\\/)(\\d[\\d.]+)/, ua);\n      if (version) {\n        result.version = version;\n      }\n      return result;\n    },\n  },\n\n  /* macOS */\n  {\n    test: [/macintosh/i],\n    describe(ua) {\n      const version = Utils.getFirstMatch(/mac os x (\\d+(\\.?_?\\d+)+)/i, ua).replace(/[_\\s]/g, '.');\n      const versionName = Utils.getMacOSVersionName(version);\n\n      const os = {\n        name: OS_MAP.MacOS,\n        version,\n      };\n      if (versionName) {\n        os.versionName = versionName;\n      }\n      return os;\n    },\n  },\n\n  /* iOS */\n  {\n    test: [/(ipod|iphone|ipad)/i],\n    describe(ua) {\n      const version = Utils.getFirstMatch(/os (\\d+([_\\s]\\d+)*) like mac os x/i, ua).replace(/[_\\s]/g, '.');\n\n      return {\n        name: OS_MAP.iOS,\n        version,\n      };\n    },\n  },\n\n  /* Android */\n  {\n    test(parser) {\n      const notLikeAndroid = !parser.test(/like android/i);\n      const butAndroid = parser.test(/android/i);\n      return notLikeAndroid && butAndroid;\n    },\n    describe(ua) {\n      const version = Utils.getFirstMatch(/android[\\s/-](\\d+(\\.\\d+)*)/i, ua);\n      const versionName = Utils.getAndroidVersionName(version);\n      const os = {\n        name: OS_MAP.Android,\n        version,\n      };\n      if (versionName) {\n        os.versionName = versionName;\n      }\n      return os;\n    },\n  },\n\n  /* WebOS */\n  {\n    test: [/(web|hpw)[o0]s/i],\n    describe(ua) {\n      const version = Utils.getFirstMatch(/(?:web|hpw)[o0]s\\/(\\d+(\\.\\d+)*)/i, ua);\n      const os = {\n        name: OS_MAP.WebOS,\n      };\n\n      if (version && version.length) {\n        os.version = version;\n      }\n      return os;\n    },\n  },\n\n  /* BlackBerry */\n  {\n    test: [/blackberry|\\bbb\\d+/i, /rim\\stablet/i],\n    describe(ua) {\n      const version = Utils.getFirstMatch(/rim\\stablet\\sos\\s(\\d+(\\.\\d+)*)/i, ua)\n        || Utils.getFirstMatch(/blackberry\\d+\\/(\\d+([_\\s]\\d+)*)/i, ua)\n        || Utils.getFirstMatch(/\\bbb(\\d+)/i, ua);\n\n      return {\n        name: OS_MAP.BlackBerry,\n        version,\n      };\n    },\n  },\n\n  /* Bada */\n  {\n    test: [/bada/i],\n    describe(ua) {\n      const version = Utils.getFirstMatch(/bada\\/(\\d+(\\.\\d+)*)/i, ua);\n\n      return {\n        name: OS_MAP.Bada,\n        version,\n      };\n    },\n  },\n\n  /* Tizen */\n  {\n    test: [/tizen/i],\n    describe(ua) {\n      const version = Utils.getFirstMatch(/tizen[/\\s](\\d+(\\.\\d+)*)/i, ua);\n\n      return {\n        name: OS_MAP.Tizen,\n        version,\n      };\n    },\n  },\n\n  /* Linux */\n  {\n    test: [/linux/i],\n    describe() {\n      return {\n        name: OS_MAP.Linux,\n      };\n    },\n  },\n\n  /* Chrome OS */\n  {\n    test: [/CrOS/],\n    describe() {\n      return {\n        name: OS_MAP.ChromeOS,\n      };\n    },\n  },\n\n  /* Playstation 4 */\n  {\n    test: [/PlayStation 4/],\n    describe(ua) {\n      const version = Utils.getFirstMatch(/PlayStation 4[/\\s](\\d+(\\.\\d+)*)/i, ua);\n      return {\n        name: OS_MAP.PlayStation4,\n        version,\n      };\n    },\n  },\n];\n","import Utils from './utils.js';\nimport { PLATFORMS_MAP } from './constants.js';\n\n/*\n * Tablets go first since usually they have more specific\n * signs to detect.\n */\n\nexport default [\n  /* Googlebot */\n  {\n    test: [/googlebot/i],\n    describe() {\n      return {\n        type: 'bot',\n        vendor: 'Google',\n      };\n    },\n  },\n\n  /* Huawei */\n  {\n    test: [/huawei/i],\n    describe(ua) {\n      const model = Utils.getFirstMatch(/(can-l01)/i, ua) && 'Nova';\n      const platform = {\n        type: PLATFORMS_MAP.mobile,\n        vendor: 'Huawei',\n      };\n      if (model) {\n        platform.model = model;\n      }\n      return platform;\n    },\n  },\n\n  /* Nexus Tablet */\n  {\n    test: [/nexus\\s*(?:7|8|9|10).*/i],\n    describe() {\n      return {\n        type: PLATFORMS_MAP.tablet,\n        vendor: 'Nexus',\n      };\n    },\n  },\n\n  /* iPad */\n  {\n    test: [/ipad/i],\n    describe() {\n      return {\n        type: PLATFORMS_MAP.tablet,\n        vendor: 'Apple',\n        model: 'iPad',\n      };\n    },\n  },\n\n  /* Firefox on iPad */\n  {\n    test: [/Macintosh(.*?) FxiOS(.*?)\\//],\n    describe() {\n      return {\n        type: PLATFORMS_MAP.tablet,\n        vendor: 'Apple',\n        model: 'iPad',\n      };\n    },\n  },\n\n  /* Amazon Kindle Fire */\n  {\n    test: [/kftt build/i],\n    describe() {\n      return {\n        type: PLATFORMS_MAP.tablet,\n        vendor: 'Amazon',\n        model: 'Kindle Fire HD 7',\n      };\n    },\n  },\n\n  /* Another Amazon Tablet with Silk */\n  {\n    test: [/silk/i],\n    describe() {\n      return {\n        type: PLATFORMS_MAP.tablet,\n        vendor: 'Amazon',\n      };\n    },\n  },\n\n  /* Tablet */\n  {\n    test: [/tablet(?! pc)/i],\n    describe() {\n      return {\n        type: PLATFORMS_MAP.tablet,\n      };\n    },\n  },\n\n  /* iPod/iPhone */\n  {\n    test(parser) {\n      const iDevice = parser.test(/ipod|iphone/i);\n      const likeIDevice = parser.test(/like (ipod|iphone)/i);\n      return iDevice && !likeIDevice;\n    },\n    describe(ua) {\n      const model = Utils.getFirstMatch(/(ipod|iphone)/i, ua);\n      return {\n        type: PLATFORMS_MAP.mobile,\n        vendor: 'Apple',\n        model,\n      };\n    },\n  },\n\n  /* Nexus Mobile */\n  {\n    test: [/nexus\\s*[0-6].*/i, /galaxy nexus/i],\n    describe() {\n      return {\n        type: PLATFORMS_MAP.mobile,\n        vendor: 'Nexus',\n      };\n    },\n  },\n\n  /* Mobile */\n  {\n    test: [/[^-]mobi/i],\n    describe() {\n      return {\n        type: PLATFORMS_MAP.mobile,\n      };\n    },\n  },\n\n  /* BlackBerry */\n  {\n    test(parser) {\n      return parser.getBrowserName(true) === 'blackberry';\n    },\n    describe() {\n      return {\n        type: PLATFORMS_MAP.mobile,\n        vendor: 'BlackBerry',\n      };\n    },\n  },\n\n  /* Bada */\n  {\n    test(parser) {\n      return parser.getBrowserName(true) === 'bada';\n    },\n    describe() {\n      return {\n        type: PLATFORMS_MAP.mobile,\n      };\n    },\n  },\n\n  /* Windows Phone */\n  {\n    test(parser) {\n      return parser.getBrowserName() === 'windows phone';\n    },\n    describe() {\n      return {\n        type: PLATFORMS_MAP.mobile,\n        vendor: 'Microsoft',\n      };\n    },\n  },\n\n  /* Android Tablet */\n  {\n    test(parser) {\n      const osMajorVersion = Number(String(parser.getOSVersion()).split('.')[0]);\n      return parser.getOSName(true) === 'android' && (osMajorVersion >= 3);\n    },\n    describe() {\n      return {\n        type: PLATFORMS_MAP.tablet,\n      };\n    },\n  },\n\n  /* Android Mobile */\n  {\n    test(parser) {\n      return parser.getOSName(true) === 'android';\n    },\n    describe() {\n      return {\n        type: PLATFORMS_MAP.mobile,\n      };\n    },\n  },\n\n  /* desktop */\n  {\n    test(parser) {\n      return parser.getOSName(true) === 'macos';\n    },\n    describe() {\n      return {\n        type: PLATFORMS_MAP.desktop,\n        vendor: 'Apple',\n      };\n    },\n  },\n\n  /* Windows */\n  {\n    test(parser) {\n      return parser.getOSName(true) === 'windows';\n    },\n    describe() {\n      return {\n        type: PLATFORMS_MAP.desktop,\n      };\n    },\n  },\n\n  /* Linux */\n  {\n    test(parser) {\n      return parser.getOSName(true) === 'linux';\n    },\n    describe() {\n      return {\n        type: PLATFORMS_MAP.desktop,\n      };\n    },\n  },\n\n  /* PlayStation 4 */\n  {\n    test(parser) {\n      return parser.getOSName(true) === 'playstation 4';\n    },\n    describe() {\n      return {\n        type: PLATFORMS_MAP.tv,\n      };\n    },\n  },\n\n  /* Roku */\n  {\n    test(parser) {\n      return parser.getOSName(true) === 'roku';\n    },\n    describe() {\n      return {\n        type: PLATFORMS_MAP.tv,\n      };\n    },\n  },\n];\n","import Utils from './utils.js';\nimport { ENGINE_MAP } from './constants.js';\n\n/*\n * More specific goes first\n */\nexport default [\n  /* EdgeHTML */\n  {\n    test(parser) {\n      return parser.getBrowserName(true) === 'microsoft edge';\n    },\n    describe(ua) {\n      const isBlinkBased = /\\sedg\\//i.test(ua);\n\n      // return blink if it's blink-based one\n      if (isBlinkBased) {\n        return {\n          name: ENGINE_MAP.Blink,\n        };\n      }\n\n      // otherwise match the version and return EdgeHTML\n      const version = Utils.getFirstMatch(/edge\\/(\\d+(\\.?_?\\d+)+)/i, ua);\n\n      return {\n        name: ENGINE_MAP.EdgeHTML,\n        version,\n      };\n    },\n  },\n\n  /* Trident */\n  {\n    test: [/trident/i],\n    describe(ua) {\n      const engine = {\n        name: ENGINE_MAP.Trident,\n      };\n\n      const version = Utils.getFirstMatch(/trident\\/(\\d+(\\.?_?\\d+)+)/i, ua);\n\n      if (version) {\n        engine.version = version;\n      }\n\n      return engine;\n    },\n  },\n\n  /* Presto */\n  {\n    test(parser) {\n      return parser.test(/presto/i);\n    },\n    describe(ua) {\n      const engine = {\n        name: ENGINE_MAP.Presto,\n      };\n\n      const version = Utils.getFirstMatch(/presto\\/(\\d+(\\.?_?\\d+)+)/i, ua);\n\n      if (version) {\n        engine.version = version;\n      }\n\n      return engine;\n    },\n  },\n\n  /* Gecko */\n  {\n    test(parser) {\n      const isGecko = parser.test(/gecko/i);\n      const likeGecko = parser.test(/like gecko/i);\n      return isGecko && !likeGecko;\n    },\n    describe(ua) {\n      const engine = {\n        name: ENGINE_MAP.Gecko,\n      };\n\n      const version = Utils.getFirstMatch(/gecko\\/(\\d+(\\.?_?\\d+)+)/i, ua);\n\n      if (version) {\n        engine.version = version;\n      }\n\n      return engine;\n    },\n  },\n\n  /* Blink */\n  {\n    test: [/(apple)?webkit\\/537\\.36/i],\n    describe() {\n      return {\n        name: ENGINE_MAP.Blink,\n      };\n    },\n  },\n\n  /* WebKit */\n  {\n    test: [/(apple)?webkit/i],\n    describe(ua) {\n      const engine = {\n        name: ENGINE_MAP.WebKit,\n      };\n\n      const version = Utils.getFirstMatch(/webkit\\/(\\d+(\\.?_?\\d+)+)/i, ua);\n\n      if (version) {\n        engine.version = version;\n      }\n\n      return engine;\n    },\n  },\n];\n","import browserParsersList from './parser-browsers.js';\nimport osParsersList from './parser-os.js';\nimport platformParsersList from './parser-platforms.js';\nimport enginesParsersList from './parser-engines.js';\nimport Utils from './utils.js';\n\n/**\n * The main class that arranges the whole parsing process.\n */\nclass Parser {\n  /**\n   * Create instance of Parser\n   *\n   * @param {String} UA User-Agent string\n   * @param {Boolean} [skipParsing=false] parser can skip parsing in purpose of performance\n   * improvements if you need to make a more particular parsing\n   * like {@link Parser#parseBrowser} or {@link Parser#parsePlatform}\n   *\n   * @throw {Error} in case of empty UA String\n   *\n   * @constructor\n   */\n  constructor(UA, skipParsing = false) {\n    if (UA === void (0) || UA === null || UA === '') {\n      throw new Error(\"UserAgent parameter can't be empty\");\n    }\n\n    this._ua = UA;\n\n    /**\n     * @typedef ParsedResult\n     * @property {Object} browser\n     * @property {String|undefined} [browser.name]\n     * Browser name, like `\"Chrome\"` or `\"Internet Explorer\"`\n     * @property {String|undefined} [browser.version] Browser version as a String `\"12.01.45334.10\"`\n     * @property {Object} os\n     * @property {String|undefined} [os.name] OS name, like `\"Windows\"` or `\"macOS\"`\n     * @property {String|undefined} [os.version] OS version, like `\"NT 5.1\"` or `\"10.11.1\"`\n     * @property {String|undefined} [os.versionName] OS name, like `\"XP\"` or `\"High Sierra\"`\n     * @property {Object} platform\n     * @property {String|undefined} [platform.type]\n     * platform type, can be either `\"desktop\"`, `\"tablet\"` or `\"mobile\"`\n     * @property {String|undefined} [platform.vendor] Vendor of the device,\n     * like `\"Apple\"` or `\"Samsung\"`\n     * @property {String|undefined} [platform.model] Device model,\n     * like `\"iPhone\"` or `\"Kindle Fire HD 7\"`\n     * @property {Object} engine\n     * @property {String|undefined} [engine.name]\n     * Can be any of this: `WebKit`, `Blink`, `Gecko`, `Trident`, `Presto`, `EdgeHTML`\n     * @property {String|undefined} [engine.version] String version of the engine\n     */\n    this.parsedResult = {};\n\n    if (skipParsing !== true) {\n      this.parse();\n    }\n  }\n\n  /**\n   * Get UserAgent string of current Parser instance\n   * @return {String} User-Agent String of the current <Parser> object\n   *\n   * @public\n   */\n  getUA() {\n    return this._ua;\n  }\n\n  /**\n   * Test a UA string for a regexp\n   * @param {RegExp} regex\n   * @return {Boolean}\n   */\n  test(regex) {\n    return regex.test(this._ua);\n  }\n\n  /**\n   * Get parsed browser object\n   * @return {Object}\n   */\n  parseBrowser() {\n    this.parsedResult.browser = {};\n\n    const browserDescriptor = Utils.find(browserParsersList, (_browser) => {\n      if (typeof _browser.test === 'function') {\n        return _browser.test(this);\n      }\n\n      if (_browser.test instanceof Array) {\n        return _browser.test.some(condition => this.test(condition));\n      }\n\n      throw new Error(\"Browser's test function is not valid\");\n    });\n\n    if (browserDescriptor) {\n      this.parsedResult.browser = browserDescriptor.describe(this.getUA());\n    }\n\n    return this.parsedResult.browser;\n  }\n\n  /**\n   * Get parsed browser object\n   * @return {Object}\n   *\n   * @public\n   */\n  getBrowser() {\n    if (this.parsedResult.browser) {\n      return this.parsedResult.browser;\n    }\n\n    return this.parseBrowser();\n  }\n\n  /**\n   * Get browser's name\n   * @return {String} Browser's name or an empty string\n   *\n   * @public\n   */\n  getBrowserName(toLowerCase) {\n    if (toLowerCase) {\n      return String(this.getBrowser().name).toLowerCase() || '';\n    }\n    return this.getBrowser().name || '';\n  }\n\n\n  /**\n   * Get browser's version\n   * @return {String} version of browser\n   *\n   * @public\n   */\n  getBrowserVersion() {\n    return this.getBrowser().version;\n  }\n\n  /**\n   * Get OS\n   * @return {Object}\n   *\n   * @example\n   * this.getOS();\n   * {\n   *   name: 'macOS',\n   *   version: '10.11.12'\n   * }\n   */\n  getOS() {\n    if (this.parsedResult.os) {\n      return this.parsedResult.os;\n    }\n\n    return this.parseOS();\n  }\n\n  /**\n   * Parse OS and save it to this.parsedResult.os\n   * @return {*|{}}\n   */\n  parseOS() {\n    this.parsedResult.os = {};\n\n    const os = Utils.find(osParsersList, (_os) => {\n      if (typeof _os.test === 'function') {\n        return _os.test(this);\n      }\n\n      if (_os.test instanceof Array) {\n        return _os.test.some(condition => this.test(condition));\n      }\n\n      throw new Error(\"Browser's test function is not valid\");\n    });\n\n    if (os) {\n      this.parsedResult.os = os.describe(this.getUA());\n    }\n\n    return this.parsedResult.os;\n  }\n\n  /**\n   * Get OS name\n   * @param {Boolean} [toLowerCase] return lower-cased value\n   * @return {String} name of the OS — macOS, Windows, Linux, etc.\n   */\n  getOSName(toLowerCase) {\n    const { name } = this.getOS();\n\n    if (toLowerCase) {\n      return String(name).toLowerCase() || '';\n    }\n\n    return name || '';\n  }\n\n  /**\n   * Get OS version\n   * @return {String} full version with dots ('10.11.12', '5.6', etc)\n   */\n  getOSVersion() {\n    return this.getOS().version;\n  }\n\n  /**\n   * Get parsed platform\n   * @return {{}}\n   */\n  getPlatform() {\n    if (this.parsedResult.platform) {\n      return this.parsedResult.platform;\n    }\n\n    return this.parsePlatform();\n  }\n\n  /**\n   * Get platform name\n   * @param {Boolean} [toLowerCase=false]\n   * @return {*}\n   */\n  getPlatformType(toLowerCase = false) {\n    const { type } = this.getPlatform();\n\n    if (toLowerCase) {\n      return String(type).toLowerCase() || '';\n    }\n\n    return type || '';\n  }\n\n  /**\n   * Get parsed platform\n   * @return {{}}\n   */\n  parsePlatform() {\n    this.parsedResult.platform = {};\n\n    const platform = Utils.find(platformParsersList, (_platform) => {\n      if (typeof _platform.test === 'function') {\n        return _platform.test(this);\n      }\n\n      if (_platform.test instanceof Array) {\n        return _platform.test.some(condition => this.test(condition));\n      }\n\n      throw new Error(\"Browser's test function is not valid\");\n    });\n\n    if (platform) {\n      this.parsedResult.platform = platform.describe(this.getUA());\n    }\n\n    return this.parsedResult.platform;\n  }\n\n  /**\n   * Get parsed engine\n   * @return {{}}\n   */\n  getEngine() {\n    if (this.parsedResult.engine) {\n      return this.parsedResult.engine;\n    }\n\n    return this.parseEngine();\n  }\n\n  /**\n   * Get engines's name\n   * @return {String} Engines's name or an empty string\n   *\n   * @public\n   */\n  getEngineName(toLowerCase) {\n    if (toLowerCase) {\n      return String(this.getEngine().name).toLowerCase() || '';\n    }\n    return this.getEngine().name || '';\n  }\n\n  /**\n   * Get parsed platform\n   * @return {{}}\n   */\n  parseEngine() {\n    this.parsedResult.engine = {};\n\n    const engine = Utils.find(enginesParsersList, (_engine) => {\n      if (typeof _engine.test === 'function') {\n        return _engine.test(this);\n      }\n\n      if (_engine.test instanceof Array) {\n        return _engine.test.some(condition => this.test(condition));\n      }\n\n      throw new Error(\"Browser's test function is not valid\");\n    });\n\n    if (engine) {\n      this.parsedResult.engine = engine.describe(this.getUA());\n    }\n\n    return this.parsedResult.engine;\n  }\n\n  /**\n   * Parse full information about the browser\n   * @returns {Parser}\n   */\n  parse() {\n    this.parseBrowser();\n    this.parseOS();\n    this.parsePlatform();\n    this.parseEngine();\n\n    return this;\n  }\n\n  /**\n   * Get parsed result\n   * @return {ParsedResult}\n   */\n  getResult() {\n    return Utils.assign({}, this.parsedResult);\n  }\n\n  /**\n   * Check if parsed browser matches certain conditions\n   *\n   * @param {Object} checkTree It's one or two layered object,\n   * which can include a platform or an OS on the first layer\n   * and should have browsers specs on the bottom-laying layer\n   *\n   * @returns {Boolean|undefined} Whether the browser satisfies the set conditions or not.\n   * Returns `undefined` when the browser is no described in the checkTree object.\n   *\n   * @example\n   * const browser = Bowser.getParser(window.navigator.userAgent);\n   * if (browser.satisfies({chrome: '>118.01.1322' }))\n   * // or with os\n   * if (browser.satisfies({windows: { chrome: '>118.01.1322' } }))\n   * // or with platforms\n   * if (browser.satisfies({desktop: { chrome: '>118.01.1322' } }))\n   */\n  satisfies(checkTree) {\n    const platformsAndOSes = {};\n    let platformsAndOSCounter = 0;\n    const browsers = {};\n    let browsersCounter = 0;\n\n    const allDefinitions = Object.keys(checkTree);\n\n    allDefinitions.forEach((key) => {\n      const currentDefinition = checkTree[key];\n      if (typeof currentDefinition === 'string') {\n        browsers[key] = currentDefinition;\n        browsersCounter += 1;\n      } else if (typeof currentDefinition === 'object') {\n        platformsAndOSes[key] = currentDefinition;\n        platformsAndOSCounter += 1;\n      }\n    });\n\n    if (platformsAndOSCounter > 0) {\n      const platformsAndOSNames = Object.keys(platformsAndOSes);\n      const OSMatchingDefinition = Utils.find(platformsAndOSNames, name => (this.isOS(name)));\n\n      if (OSMatchingDefinition) {\n        const osResult = this.satisfies(platformsAndOSes[OSMatchingDefinition]);\n\n        if (osResult !== void 0) {\n          return osResult;\n        }\n      }\n\n      const platformMatchingDefinition = Utils.find(\n        platformsAndOSNames,\n        name => (this.isPlatform(name)),\n      );\n      if (platformMatchingDefinition) {\n        const platformResult = this.satisfies(platformsAndOSes[platformMatchingDefinition]);\n\n        if (platformResult !== void 0) {\n          return platformResult;\n        }\n      }\n    }\n\n    if (browsersCounter > 0) {\n      const browserNames = Object.keys(browsers);\n      const matchingDefinition = Utils.find(browserNames, name => (this.isBrowser(name, true)));\n\n      if (matchingDefinition !== void 0) {\n        return this.compareVersion(browsers[matchingDefinition]);\n      }\n    }\n\n    return undefined;\n  }\n\n  /**\n   * Check if the browser name equals the passed string\n   * @param browserName The string to compare with the browser name\n   * @param [includingAlias=false] The flag showing whether alias will be included into comparison\n   * @returns {boolean}\n   */\n  isBrowser(browserName, includingAlias = false) {\n    const defaultBrowserName = this.getBrowserName().toLowerCase();\n    let browserNameLower = browserName.toLowerCase();\n    const alias = Utils.getBrowserTypeByAlias(browserNameLower);\n\n    if (includingAlias && alias) {\n      browserNameLower = alias.toLowerCase();\n    }\n    return browserNameLower === defaultBrowserName;\n  }\n\n  compareVersion(version) {\n    let expectedResults = [0];\n    let comparableVersion = version;\n    let isLoose = false;\n\n    const currentBrowserVersion = this.getBrowserVersion();\n\n    if (typeof currentBrowserVersion !== 'string') {\n      return void 0;\n    }\n\n    if (version[0] === '>' || version[0] === '<') {\n      comparableVersion = version.substr(1);\n      if (version[1] === '=') {\n        isLoose = true;\n        comparableVersion = version.substr(2);\n      } else {\n        expectedResults = [];\n      }\n      if (version[0] === '>') {\n        expectedResults.push(1);\n      } else {\n        expectedResults.push(-1);\n      }\n    } else if (version[0] === '=') {\n      comparableVersion = version.substr(1);\n    } else if (version[0] === '~') {\n      isLoose = true;\n      comparableVersion = version.substr(1);\n    }\n\n    return expectedResults.indexOf(\n      Utils.compareVersions(currentBrowserVersion, comparableVersion, isLoose),\n    ) > -1;\n  }\n\n  isOS(osName) {\n    return this.getOSName(true) === String(osName).toLowerCase();\n  }\n\n  isPlatform(platformType) {\n    return this.getPlatformType(true) === String(platformType).toLowerCase();\n  }\n\n  isEngine(engineName) {\n    return this.getEngineName(true) === String(engineName).toLowerCase();\n  }\n\n  /**\n   * Is anything? Check if the browser is called \"anything\",\n   * the OS called \"anything\" or the platform called \"anything\"\n   * @param {String} anything\n   * @param [includingAlias=false] The flag showing whether alias will be included into comparison\n   * @returns {Boolean}\n   */\n  is(anything, includingAlias = false) {\n    return this.isBrowser(anything, includingAlias) || this.isOS(anything)\n      || this.isPlatform(anything);\n  }\n\n  /**\n   * Check if any of the given values satisfies this.is(anything)\n   * @param {String[]} anythings\n   * @returns {Boolean}\n   */\n  some(anythings = []) {\n    return anythings.some(anything => this.is(anything));\n  }\n}\n\nexport default Parser;\n","/*!\n * Bowser - a browser detector\n * https://github.com/lancedikson/bowser\n * MIT License | (c) Dustin Diaz 2012-2015\n * MIT License | (c) Denis Demchenko 2015-2019\n */\nimport Parser from './parser.js';\nimport {\n  BROWSER_MAP,\n  ENGINE_MAP,\n  OS_MAP,\n  PLATFORMS_MAP,\n} from './constants.js';\n\n/**\n * Bowser class.\n * Keep it simple as much as it can be.\n * It's supposed to work with collections of {@link Parser} instances\n * rather then solve one-instance problems.\n * All the one-instance stuff is located in Parser class.\n *\n * @class\n * @classdesc Bowser is a static object, that provides an API to the Parsers\n * @hideconstructor\n */\nclass Bowser {\n  /**\n   * Creates a {@link Parser} instance\n   *\n   * @param {String} UA UserAgent string\n   * @param {Boolean} [skipParsing=false] Will make the Parser postpone parsing until you ask it\n   * explicitly. Same as `skipParsing` for {@link Parser}.\n   * @returns {Parser}\n   * @throws {Error} when UA is not a String\n   *\n   * @example\n   * const parser = Bowser.getParser(window.navigator.userAgent);\n   * const result = parser.getResult();\n   */\n  static getParser(UA, skipParsing = false) {\n    if (typeof UA !== 'string') {\n      throw new Error('UserAgent should be a string');\n    }\n    return new Parser(UA, skipParsing);\n  }\n\n  /**\n   * Creates a {@link Parser} instance and runs {@link Parser.getResult} immediately\n   *\n   * @param UA\n   * @return {ParsedResult}\n   *\n   * @example\n   * const result = Bowser.parse(window.navigator.userAgent);\n   */\n  static parse(UA) {\n    return (new Parser(UA)).getResult();\n  }\n\n  static get BROWSER_MAP() {\n    return BROWSER_MAP;\n  }\n\n  static get ENGINE_MAP() {\n    return ENGINE_MAP;\n  }\n\n  static get OS_MAP() {\n    return OS_MAP;\n  }\n\n  static get PLATFORMS_MAP() {\n    return PLATFORMS_MAP;\n  }\n}\n\nexport default Bowser;\n","import bowser from \"bowser\";\nexport const defaultUserAgent = ({ serviceId, clientVersion }) => async () => {\n    const parsedUA = typeof window !== \"undefined\" && window?.navigator?.userAgent\n        ? bowser.parse(window.navigator.userAgent)\n        : undefined;\n    const sections = [\n        [\"aws-sdk-js\", clientVersion],\n        [\"ua\", \"2.0\"],\n        [`os/${parsedUA?.os?.name || \"other\"}`, parsedUA?.os?.version],\n        [\"lang/js\"],\n        [\"md/browser\", `${parsedUA?.browser?.name ?? \"unknown\"}_${parsedUA?.browser?.version ?? \"unknown\"}`],\n    ];\n    if (serviceId) {\n        sections.push([`api/${serviceId}`, clientVersion]);\n    }\n    return sections;\n};\n","export function getChunkedStream(source) {\n    let currentMessageTotalLength = 0;\n    let currentMessagePendingLength = 0;\n    let currentMessage = null;\n    let messageLengthBuffer = null;\n    const allocateMessage = (size) => {\n        if (typeof size !== \"number\") {\n            throw new Error(\"Attempted to allocate an event message where size was not a number: \" + size);\n        }\n        currentMessageTotalLength = size;\n        currentMessagePendingLength = 4;\n        currentMessage = new Uint8Array(size);\n        const currentMessageView = new DataView(currentMessage.buffer);\n        currentMessageView.setUint32(0, size, false);\n    };\n    const iterator = async function* () {\n        const sourceIterator = source[Symbol.asyncIterator]();\n        while (true) {\n            const { value, done } = await sourceIterator.next();\n            if (done) {\n                if (!currentMessageTotalLength) {\n                    return;\n                }\n                else if (currentMessageTotalLength === currentMessagePendingLength) {\n                    yield currentMessage;\n                }\n                else {\n                    throw new Error(\"Truncated event message received.\");\n                }\n                return;\n            }\n            const chunkLength = value.length;\n            let currentOffset = 0;\n            while (currentOffset < chunkLength) {\n                if (!currentMessage) {\n                    const bytesRemaining = chunkLength - currentOffset;\n                    if (!messageLengthBuffer) {\n                        messageLengthBuffer = new Uint8Array(4);\n                    }\n                    const numBytesForTotal = Math.min(4 - currentMessagePendingLength, bytesRemaining);\n                    messageLengthBuffer.set(value.slice(currentOffset, currentOffset + numBytesForTotal), currentMessagePendingLength);\n                    currentMessagePendingLength += numBytesForTotal;\n                    currentOffset += numBytesForTotal;\n                    if (currentMessagePendingLength < 4) {\n                        break;\n                    }\n                    allocateMessage(new DataView(messageLengthBuffer.buffer).getUint32(0, false));\n                    messageLengthBuffer = null;\n                }\n                const numBytesToWrite = Math.min(currentMessageTotalLength - currentMessagePendingLength, chunkLength - currentOffset);\n                currentMessage.set(value.slice(currentOffset, currentOffset + numBytesToWrite), currentMessagePendingLength);\n                currentMessagePendingLength += numBytesToWrite;\n                currentOffset += numBytesToWrite;\n                if (currentMessageTotalLength && currentMessageTotalLength === currentMessagePendingLength) {\n                    yield currentMessage;\n                    currentMessage = null;\n                    currentMessageTotalLength = 0;\n                    currentMessagePendingLength = 0;\n                }\n            }\n        }\n    };\n    return {\n        [Symbol.asyncIterator]: iterator,\n    };\n}\n","export function getUnmarshalledStream(source, options) {\n    const messageUnmarshaller = getMessageUnmarshaller(options.deserializer, options.toUtf8);\n    return {\n        [Symbol.asyncIterator]: async function* () {\n            for await (const chunk of source) {\n                const message = options.eventStreamCodec.decode(chunk);\n                const type = await messageUnmarshaller(message);\n                if (type === undefined)\n                    continue;\n                yield type;\n            }\n        },\n    };\n}\nexport function getMessageUnmarshaller(deserializer, toUtf8) {\n    return async function (message) {\n        const { value: messageType } = message.headers[\":message-type\"];\n        if (messageType === \"error\") {\n            const unmodeledError = new Error(message.headers[\":error-message\"].value || \"UnknownError\");\n            unmodeledError.name = message.headers[\":error-code\"].value;\n            throw unmodeledError;\n        }\n        else if (messageType === \"exception\") {\n            const code = message.headers[\":exception-type\"].value;\n            const exception = { [code]: message };\n            const deserializedException = await deserializer(exception);\n            if (deserializedException.$unknown) {\n                const error = new Error(toUtf8(message.body));\n                error.name = code;\n                throw error;\n            }\n            throw deserializedException[code];\n        }\n        else if (messageType === \"event\") {\n            const event = {\n                [message.headers[\":event-type\"].value]: message,\n            };\n            const deserialized = await deserializer(event);\n            if (deserialized.$unknown)\n                return;\n            return deserialized;\n        }\n        else {\n            throw Error(`Unrecognizable event type: ${message.headers[\":event-type\"].value}`);\n        }\n    };\n}\n","import { EventStreamCodec, MessageDecoderStream, MessageEncoderStream, SmithyMessageDecoderStream, SmithyMessageEncoderStream, } from \"@smithy/eventstream-codec\";\nimport { getChunkedStream } from \"./getChunkedStream\";\nimport { getMessageUnmarshaller } from \"./getUnmarshalledStream\";\nexport class EventStreamMarshaller {\n    constructor({ utf8Encoder, utf8Decoder }) {\n        this.eventStreamCodec = new EventStreamCodec(utf8Encoder, utf8Decoder);\n        this.utfEncoder = utf8Encoder;\n    }\n    deserialize(body, deserializer) {\n        const inputStream = getChunkedStream(body);\n        return new SmithyMessageDecoderStream({\n            messageStream: new MessageDecoderStream({ inputStream, decoder: this.eventStreamCodec }),\n            deserializer: getMessageUnmarshaller(deserializer, this.utfEncoder),\n        });\n    }\n    serialize(inputStream, serializer) {\n        return new MessageEncoderStream({\n            messageStream: new SmithyMessageEncoderStream({ inputStream, serializer }),\n            encoder: this.eventStreamCodec,\n            includeEndFrame: true,\n        });\n    }\n}\n","export const readableStreamtoIterable = (readableStream) => ({\n    [Symbol.asyncIterator]: async function* () {\n        const reader = readableStream.getReader();\n        try {\n            while (true) {\n                const { done, value } = await reader.read();\n                if (done)\n                    return;\n                yield value;\n            }\n        }\n        finally {\n            reader.releaseLock();\n        }\n    },\n});\nexport const iterableToReadableStream = (asyncIterable) => {\n    const iterator = asyncIterable[Symbol.asyncIterator]();\n    return new ReadableStream({\n        async pull(controller) {\n            const { done, value } = await iterator.next();\n            if (done) {\n                return controller.close();\n            }\n            controller.enqueue(value);\n        },\n    });\n};\n","import { EventStreamMarshaller as UniversalEventStreamMarshaller } from \"@smithy/eventstream-serde-universal\";\nimport { iterableToReadableStream, readableStreamtoIterable } from \"./utils\";\nexport class EventStreamMarshaller {\n    constructor({ utf8Encoder, utf8Decoder }) {\n        this.universalMarshaller = new UniversalEventStreamMarshaller({\n            utf8Decoder,\n            utf8Encoder,\n        });\n    }\n    deserialize(body, deserializer) {\n        const bodyIterable = isReadableStream(body) ? readableStreamtoIterable(body) : body;\n        return this.universalMarshaller.deserialize(bodyIterable, deserializer);\n    }\n    serialize(input, serializer) {\n        const serialziedIterable = this.universalMarshaller.serialize(input, serializer);\n        return typeof ReadableStream === \"function\" ? iterableToReadableStream(serialziedIterable) : serialziedIterable;\n    }\n}\nconst isReadableStream = (body) => typeof ReadableStream === \"function\" && body instanceof ReadableStream;\n","import { EventStreamMarshaller } from \"./EventStreamMarshaller\";\nexport const eventStreamSerdeProvider = (options) => new EventStreamMarshaller(options);\n","export function blobReader(blob, onChunk, chunkSize = 1024 * 1024) {\n    return new Promise((resolve, reject) => {\n        const fileReader = new FileReader();\n        fileReader.addEventListener(\"error\", reject);\n        fileReader.addEventListener(\"abort\", reject);\n        const size = blob.size;\n        let totalBytesRead = 0;\n        function read() {\n            if (totalBytesRead >= size) {\n                resolve();\n                return;\n            }\n            fileReader.readAsArrayBuffer(blob.slice(totalBytesRead, Math.min(size, totalBytesRead + chunkSize)));\n        }\n        fileReader.addEventListener(\"load\", (event) => {\n            const result = event.target.result;\n            onChunk(new Uint8Array(result));\n            totalBytesRead += result.byteLength;\n            read();\n        });\n        read();\n    });\n}\n","import { blobReader } from \"@smithy/chunked-blob-reader\";\nexport const blobHasher = async function blobHasher(hashCtor, blob) {\n    const hash = new hashCtor();\n    await blobReader(blob, (chunk) => {\n        hash.update(chunk);\n    });\n    return hash.digest();\n};\n","export const invalidProvider = (message) => () => Promise.reject(message);\n","export const BLOCK_SIZE = 64;\nexport const DIGEST_LENGTH = 16;\nexport const INIT = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476];\n","import { fromUtf8 } from \"@smithy/util-utf8\";\nimport { BLOCK_SIZE, DIGEST_LENGTH, INIT } from \"./constants\";\nexport class Md5 {\n    constructor() {\n        this.reset();\n    }\n    update(sourceData) {\n        if (isEmptyData(sourceData)) {\n            return;\n        }\n        else if (this.finished) {\n            throw new Error(\"Attempted to update an already finished hash.\");\n        }\n        const data = convertToBuffer(sourceData);\n        let position = 0;\n        let { byteLength } = data;\n        this.bytesHashed += byteLength;\n        while (byteLength > 0) {\n            this.buffer.setUint8(this.bufferLength++, data[position++]);\n            byteLength--;\n            if (this.bufferLength === BLOCK_SIZE) {\n                this.hashBuffer();\n                this.bufferLength = 0;\n            }\n        }\n    }\n    async digest() {\n        if (!this.finished) {\n            const { buffer, bufferLength: undecoratedLength, bytesHashed } = this;\n            const bitsHashed = bytesHashed * 8;\n            buffer.setUint8(this.bufferLength++, 0b10000000);\n            if (undecoratedLength % BLOCK_SIZE >= BLOCK_SIZE - 8) {\n                for (let i = this.bufferLength; i < BLOCK_SIZE; i++) {\n                    buffer.setUint8(i, 0);\n                }\n                this.hashBuffer();\n                this.bufferLength = 0;\n            }\n            for (let i = this.bufferLength; i < BLOCK_SIZE - 8; i++) {\n                buffer.setUint8(i, 0);\n            }\n            buffer.setUint32(BLOCK_SIZE - 8, bitsHashed >>> 0, true);\n            buffer.setUint32(BLOCK_SIZE - 4, Math.floor(bitsHashed / 0x100000000), true);\n            this.hashBuffer();\n            this.finished = true;\n        }\n        const out = new DataView(new ArrayBuffer(DIGEST_LENGTH));\n        for (let i = 0; i < 4; i++) {\n            out.setUint32(i * 4, this.state[i], true);\n        }\n        return new Uint8Array(out.buffer, out.byteOffset, out.byteLength);\n    }\n    hashBuffer() {\n        const { buffer, state } = this;\n        let a = state[0], b = state[1], c = state[2], d = state[3];\n        a = ff(a, b, c, d, buffer.getUint32(0, true), 7, 0xd76aa478);\n        d = ff(d, a, b, c, buffer.getUint32(4, true), 12, 0xe8c7b756);\n        c = ff(c, d, a, b, buffer.getUint32(8, true), 17, 0x242070db);\n        b = ff(b, c, d, a, buffer.getUint32(12, true), 22, 0xc1bdceee);\n        a = ff(a, b, c, d, buffer.getUint32(16, true), 7, 0xf57c0faf);\n        d = ff(d, a, b, c, buffer.getUint32(20, true), 12, 0x4787c62a);\n        c = ff(c, d, a, b, buffer.getUint32(24, true), 17, 0xa8304613);\n        b = ff(b, c, d, a, buffer.getUint32(28, true), 22, 0xfd469501);\n        a = ff(a, b, c, d, buffer.getUint32(32, true), 7, 0x698098d8);\n        d = ff(d, a, b, c, buffer.getUint32(36, true), 12, 0x8b44f7af);\n        c = ff(c, d, a, b, buffer.getUint32(40, true), 17, 0xffff5bb1);\n        b = ff(b, c, d, a, buffer.getUint32(44, true), 22, 0x895cd7be);\n        a = ff(a, b, c, d, buffer.getUint32(48, true), 7, 0x6b901122);\n        d = ff(d, a, b, c, buffer.getUint32(52, true), 12, 0xfd987193);\n        c = ff(c, d, a, b, buffer.getUint32(56, true), 17, 0xa679438e);\n        b = ff(b, c, d, a, buffer.getUint32(60, true), 22, 0x49b40821);\n        a = gg(a, b, c, d, buffer.getUint32(4, true), 5, 0xf61e2562);\n        d = gg(d, a, b, c, buffer.getUint32(24, true), 9, 0xc040b340);\n        c = gg(c, d, a, b, buffer.getUint32(44, true), 14, 0x265e5a51);\n        b = gg(b, c, d, a, buffer.getUint32(0, true), 20, 0xe9b6c7aa);\n        a = gg(a, b, c, d, buffer.getUint32(20, true), 5, 0xd62f105d);\n        d = gg(d, a, b, c, buffer.getUint32(40, true), 9, 0x02441453);\n        c = gg(c, d, a, b, buffer.getUint32(60, true), 14, 0xd8a1e681);\n        b = gg(b, c, d, a, buffer.getUint32(16, true), 20, 0xe7d3fbc8);\n        a = gg(a, b, c, d, buffer.getUint32(36, true), 5, 0x21e1cde6);\n        d = gg(d, a, b, c, buffer.getUint32(56, true), 9, 0xc33707d6);\n        c = gg(c, d, a, b, buffer.getUint32(12, true), 14, 0xf4d50d87);\n        b = gg(b, c, d, a, buffer.getUint32(32, true), 20, 0x455a14ed);\n        a = gg(a, b, c, d, buffer.getUint32(52, true), 5, 0xa9e3e905);\n        d = gg(d, a, b, c, buffer.getUint32(8, true), 9, 0xfcefa3f8);\n        c = gg(c, d, a, b, buffer.getUint32(28, true), 14, 0x676f02d9);\n        b = gg(b, c, d, a, buffer.getUint32(48, true), 20, 0x8d2a4c8a);\n        a = hh(a, b, c, d, buffer.getUint32(20, true), 4, 0xfffa3942);\n        d = hh(d, a, b, c, buffer.getUint32(32, true), 11, 0x8771f681);\n        c = hh(c, d, a, b, buffer.getUint32(44, true), 16, 0x6d9d6122);\n        b = hh(b, c, d, a, buffer.getUint32(56, true), 23, 0xfde5380c);\n        a = hh(a, b, c, d, buffer.getUint32(4, true), 4, 0xa4beea44);\n        d = hh(d, a, b, c, buffer.getUint32(16, true), 11, 0x4bdecfa9);\n        c = hh(c, d, a, b, buffer.getUint32(28, true), 16, 0xf6bb4b60);\n        b = hh(b, c, d, a, buffer.getUint32(40, true), 23, 0xbebfbc70);\n        a = hh(a, b, c, d, buffer.getUint32(52, true), 4, 0x289b7ec6);\n        d = hh(d, a, b, c, buffer.getUint32(0, true), 11, 0xeaa127fa);\n        c = hh(c, d, a, b, buffer.getUint32(12, true), 16, 0xd4ef3085);\n        b = hh(b, c, d, a, buffer.getUint32(24, true), 23, 0x04881d05);\n        a = hh(a, b, c, d, buffer.getUint32(36, true), 4, 0xd9d4d039);\n        d = hh(d, a, b, c, buffer.getUint32(48, true), 11, 0xe6db99e5);\n        c = hh(c, d, a, b, buffer.getUint32(60, true), 16, 0x1fa27cf8);\n        b = hh(b, c, d, a, buffer.getUint32(8, true), 23, 0xc4ac5665);\n        a = ii(a, b, c, d, buffer.getUint32(0, true), 6, 0xf4292244);\n        d = ii(d, a, b, c, buffer.getUint32(28, true), 10, 0x432aff97);\n        c = ii(c, d, a, b, buffer.getUint32(56, true), 15, 0xab9423a7);\n        b = ii(b, c, d, a, buffer.getUint32(20, true), 21, 0xfc93a039);\n        a = ii(a, b, c, d, buffer.getUint32(48, true), 6, 0x655b59c3);\n        d = ii(d, a, b, c, buffer.getUint32(12, true), 10, 0x8f0ccc92);\n        c = ii(c, d, a, b, buffer.getUint32(40, true), 15, 0xffeff47d);\n        b = ii(b, c, d, a, buffer.getUint32(4, true), 21, 0x85845dd1);\n        a = ii(a, b, c, d, buffer.getUint32(32, true), 6, 0x6fa87e4f);\n        d = ii(d, a, b, c, buffer.getUint32(60, true), 10, 0xfe2ce6e0);\n        c = ii(c, d, a, b, buffer.getUint32(24, true), 15, 0xa3014314);\n        b = ii(b, c, d, a, buffer.getUint32(52, true), 21, 0x4e0811a1);\n        a = ii(a, b, c, d, buffer.getUint32(16, true), 6, 0xf7537e82);\n        d = ii(d, a, b, c, buffer.getUint32(44, true), 10, 0xbd3af235);\n        c = ii(c, d, a, b, buffer.getUint32(8, true), 15, 0x2ad7d2bb);\n        b = ii(b, c, d, a, buffer.getUint32(36, true), 21, 0xeb86d391);\n        state[0] = (a + state[0]) & 0xffffffff;\n        state[1] = (b + state[1]) & 0xffffffff;\n        state[2] = (c + state[2]) & 0xffffffff;\n        state[3] = (d + state[3]) & 0xffffffff;\n    }\n    reset() {\n        this.state = Uint32Array.from(INIT);\n        this.buffer = new DataView(new ArrayBuffer(BLOCK_SIZE));\n        this.bufferLength = 0;\n        this.bytesHashed = 0;\n        this.finished = false;\n    }\n}\nfunction cmn(q, a, b, x, s, t) {\n    a = (((a + q) & 0xffffffff) + ((x + t) & 0xffffffff)) & 0xffffffff;\n    return (((a << s) | (a >>> (32 - s))) + b) & 0xffffffff;\n}\nfunction ff(a, b, c, d, x, s, t) {\n    return cmn((b & c) | (~b & d), a, b, x, s, t);\n}\nfunction gg(a, b, c, d, x, s, t) {\n    return cmn((b & d) | (c & ~d), a, b, x, s, t);\n}\nfunction hh(a, b, c, d, x, s, t) {\n    return cmn(b ^ c ^ d, a, b, x, s, t);\n}\nfunction ii(a, b, c, d, x, s, t) {\n    return cmn(c ^ (b | ~d), a, b, x, s, t);\n}\nfunction isEmptyData(data) {\n    if (typeof data === \"string\") {\n        return data.length === 0;\n    }\n    return data.byteLength === 0;\n}\nfunction convertToBuffer(data) {\n    if (typeof data === \"string\") {\n        return fromUtf8(data);\n    }\n    if (ArrayBuffer.isView(data)) {\n        return new Uint8Array(data.buffer, data.byteOffset, data.byteLength / Uint8Array.BYTES_PER_ELEMENT);\n    }\n    return new Uint8Array(data);\n}\n","export const calculateBodyLength = (body) => {\n    if (typeof body === \"string\") {\n        let len = body.length;\n        for (let i = len - 1; i >= 0; i--) {\n            const code = body.charCodeAt(i);\n            if (code > 0x7f && code <= 0x7ff)\n                len++;\n            else if (code > 0x7ff && code <= 0xffff)\n                len += 2;\n            if (code >= 0xdc00 && code <= 0xdfff)\n                i--;\n        }\n        return len;\n    }\n    else if (typeof body.byteLength === \"number\") {\n        return body.byteLength;\n    }\n    else if (typeof body.size === \"number\") {\n        return body.size;\n    }\n    throw new Error(`Body Length computation failed for ${body}`);\n};\n","import { SignatureV4 } from \"@smithy/signature-v4\";\nexport class SignatureV4MultiRegion {\n    constructor(options) {\n        this.sigv4Signer = new SignatureV4(options);\n        this.signerOptions = options;\n    }\n    async sign(requestToSign, options = {}) {\n        if (options.signingRegion === \"*\") {\n            if (this.signerOptions.runtime !== \"node\")\n                throw new Error(\"This request requires signing with SigV4Asymmetric algorithm. It's only available in Node.js\");\n            return this.getSigv4aSigner().sign(requestToSign, options);\n        }\n        return this.sigv4Signer.sign(requestToSign, options);\n    }\n    async presign(originalRequest, options = {}) {\n        if (options.signingRegion === \"*\") {\n            if (this.signerOptions.runtime !== \"node\")\n                throw new Error(\"This request requires signing with SigV4Asymmetric algorithm. It's only available in Node.js\");\n            return this.getSigv4aSigner().presign(originalRequest, options);\n        }\n        return this.sigv4Signer.presign(originalRequest, options);\n    }\n    getSigv4aSigner() {\n        if (!this.sigv4aSigner) {\n            let CrtSignerV4;\n            try {\n                CrtSignerV4 = typeof require === \"function\" && require(\"@aws-sdk/signature-v4-crt\").CrtSignerV4;\n                if (typeof CrtSignerV4 !== \"function\")\n                    throw new Error();\n            }\n            catch (e) {\n                e.message =\n                    `${e.message}\\nPlease check if you have installed \"@aws-sdk/signature-v4-crt\" package explicitly. \\n` +\n                        \"For more information please go to \" +\n                        \"https://github.com/aws/aws-sdk-js-v3#functionality-requiring-aws-common-runtime-crt\";\n                throw e;\n            }\n            this.sigv4aSigner = new CrtSignerV4({\n                ...this.signerOptions,\n                signingAlgorithm: 1,\n            });\n        }\n        return this.sigv4aSigner;\n    }\n}\n","const bJ = \"required\", bK = \"type\", bL = \"conditions\", bM = \"fn\", bN = \"argv\", bO = \"ref\", bP = \"assign\", bQ = \"url\", bR = \"properties\", bS = \"authSchemes\", bT = \"disableDoubleEncoding\", bU = \"signingName\", bV = \"signingRegion\", bW = \"headers\";\nconst a = false, b = true, c = \"isSet\", d = \"tree\", e = \"booleanEquals\", f = \"error\", g = \"aws.partition\", h = \"stringEquals\", i = \"getAttr\", j = \"name\", k = \"substring\", l = \"hardwareType\", m = \"regionPrefix\", n = \"bucketAliasSuffix\", o = \"outpostId\", p = \"isValidHostLabel\", q = \"not\", r = \"parseURL\", s = \"s3-outposts\", t = \"endpoint\", u = \"aws.isVirtualHostableS3Bucket\", v = \"s3\", w = \"{url#scheme}://{url#authority}{url#normalizedPath}{Bucket}\", x = \"{url#scheme}://{Bucket}.{url#authority}{url#path}\", y = \"https://{Bucket}.s3-accelerate.{partitionResult#dnsSuffix}\", z = \"https://{Bucket}.s3.{partitionResult#dnsSuffix}\", A = \"aws.parseArn\", B = \"bucketArn\", C = \"arnType\", D = \"\", E = \"s3-object-lambda\", F = \"accesspoint\", G = \"accessPointName\", H = \"{url#scheme}://{accessPointName}-{bucketArn#accountId}.{url#authority}{url#path}\", I = \"mrapPartition\", J = \"outpostType\", K = \"arnPrefix\", L = \"{url#scheme}://{url#authority}{url#normalizedPath}{uri_encoded_bucket}\", M = \"https://s3.{partitionResult#dnsSuffix}/{uri_encoded_bucket}\", N = \"{url#scheme}://{url#authority}{url#path}\", O = \"https://s3.{partitionResult#dnsSuffix}\", P = { [bJ]: false, [bK]: \"String\" }, Q = { [bJ]: true, \"default\": false, [bK]: \"Boolean\" }, R = { [bJ]: false, [bK]: \"Boolean\" }, S = { [bM]: e, [bN]: [{ [bO]: \"Accelerate\" }, true] }, T = { [bM]: e, [bN]: [{ [bO]: \"UseFIPS\" }, true] }, U = { [bM]: e, [bN]: [{ [bO]: \"UseDualStack\" }, true] }, V = { [bM]: c, [bN]: [{ [bO]: \"Endpoint\" }] }, W = { [bM]: g, [bN]: [{ [bO]: \"Region\" }], [bP]: \"partitionResult\" }, X = { [bM]: h, [bN]: [{ [bM]: i, [bN]: [{ [bO]: \"partitionResult\" }, j] }, \"aws-cn\"] }, Y = { [bM]: c, [bN]: [{ [bO]: \"Bucket\" }] }, Z = { [bO]: \"Bucket\" }, aa = { [bO]: l }, ab = { [bL]: [{ [bM]: q, [bN]: [V] }], [f]: \"Expected a endpoint to be specified but no endpoint was found\", [bK]: f }, ac = { [bM]: q, [bN]: [V] }, ad = { [bM]: r, [bN]: [{ [bO]: \"Endpoint\" }], [bP]: \"url\" }, ae = { [bS]: [{ [bT]: true, [j]: \"sigv4\", [bU]: s, [bV]: \"{Region}\" }] }, af = {}, ag = { [bM]: e, [bN]: [{ [bO]: \"ForcePathStyle\" }, false] }, ah = { [bO]: \"ForcePathStyle\" }, ai = { [bM]: e, [bN]: [{ [bO]: \"Accelerate\" }, false] }, aj = { [bM]: h, [bN]: [{ [bO]: \"Region\" }, \"aws-global\"] }, ak = { [bS]: [{ [bT]: true, [j]: \"sigv4\", [bU]: v, [bV]: \"us-east-1\" }] }, al = { [bM]: q, [bN]: [aj] }, am = { [bM]: e, [bN]: [{ [bO]: \"UseGlobalEndpoint\" }, true] }, an = { [bQ]: \"https://{Bucket}.s3-fips.dualstack.{Region}.{partitionResult#dnsSuffix}\", [bR]: { [bS]: [{ [bT]: true, [j]: \"sigv4\", [bU]: v, [bV]: \"{Region}\" }] }, [bW]: {} }, ao = { [bS]: [{ [bT]: true, [j]: \"sigv4\", [bU]: v, [bV]: \"{Region}\" }] }, ap = { [bM]: e, [bN]: [{ [bO]: \"UseGlobalEndpoint\" }, false] }, aq = { [bM]: e, [bN]: [{ [bO]: \"UseDualStack\" }, false] }, ar = { [bQ]: \"https://{Bucket}.s3-fips.{Region}.{partitionResult#dnsSuffix}\", [bR]: ao, [bW]: {} }, as = { [bM]: e, [bN]: [{ [bO]: \"UseFIPS\" }, false] }, at = { [bQ]: \"https://{Bucket}.s3-accelerate.dualstack.{partitionResult#dnsSuffix}\", [bR]: ao, [bW]: {} }, au = { [bQ]: \"https://{Bucket}.s3.dualstack.{Region}.{partitionResult#dnsSuffix}\", [bR]: ao, [bW]: {} }, av = { [bM]: e, [bN]: [{ [bM]: i, [bN]: [{ [bO]: \"url\" }, \"isIp\"] }, true] }, aw = { [bO]: \"url\" }, ax = { [bM]: e, [bN]: [{ [bM]: i, [bN]: [aw, \"isIp\"] }, false] }, ay = { [bQ]: w, [bR]: ao, [bW]: {} }, az = { [bQ]: x, [bR]: ao, [bW]: {} }, aA = { [t]: az, [bK]: t }, aB = { [bQ]: y, [bR]: ao, [bW]: {} }, aC = { [bQ]: \"https://{Bucket}.s3.{Region}.{partitionResult#dnsSuffix}\", [bR]: ao, [bW]: {} }, aD = { [f]: \"Invalid region: region was not a valid DNS name.\", [bK]: f }, aE = { [bO]: B }, aF = { [bO]: C }, aG = { [bM]: i, [bN]: [aE, \"service\"] }, aH = { [bO]: G }, aI = { [bL]: [U], [f]: \"S3 Object Lambda does not support Dual-stack\", [bK]: f }, aJ = { [bL]: [S], [f]: \"S3 Object Lambda does not support S3 Accelerate\", [bK]: f }, aK = { [bL]: [{ [bM]: c, [bN]: [{ [bO]: \"DisableAccessPoints\" }] }, { [bM]: e, [bN]: [{ [bO]: \"DisableAccessPoints\" }, true] }], [f]: \"Access points are not supported for this operation\", [bK]: f }, aL = { [bL]: [{ [bM]: c, [bN]: [{ [bO]: \"UseArnRegion\" }] }, { [bM]: e, [bN]: [{ [bO]: \"UseArnRegion\" }, false] }, { [bM]: q, [bN]: [{ [bM]: h, [bN]: [{ [bM]: i, [bN]: [aE, \"region\"] }, \"{Region}\"] }] }], [f]: \"Invalid configuration: region from ARN `{bucketArn#region}` does not match client region `{Region}` and UseArnRegion is `false`\", [bK]: f }, aM = { [bM]: i, [bN]: [{ [bO]: \"bucketPartition\" }, j] }, aN = { [bM]: i, [bN]: [aE, \"accountId\"] }, aO = { [bS]: [{ [bT]: true, [j]: \"sigv4\", [bU]: E, [bV]: \"{bucketArn#region}\" }] }, aP = { [f]: \"Invalid ARN: The access point name may only contain a-z, A-Z, 0-9 and `-`. Found: `{accessPointName}`\", [bK]: f }, aQ = { [f]: \"Invalid ARN: The account id may only contain a-z, A-Z, 0-9 and `-`. Found: `{bucketArn#accountId}`\", [bK]: f }, aR = { [f]: \"Invalid region in ARN: `{bucketArn#region}` (invalid DNS name)\", [bK]: f }, aS = { [f]: \"Client was configured for partition `{partitionResult#name}` but ARN (`{Bucket}`) has `{bucketPartition#name}`\", [bK]: f }, aT = { [f]: \"Invalid ARN: The ARN may only contain a single resource component after `accesspoint`.\", [bK]: f }, aU = { [f]: \"Invalid ARN: Expected a resource of the format `accesspoint:<accesspoint name>` but no name was provided\", [bK]: f }, aV = { [bS]: [{ [bT]: true, [j]: \"sigv4\", [bU]: v, [bV]: \"{bucketArn#region}\" }] }, aW = { [bS]: [{ [bT]: true, [j]: \"sigv4\", [bU]: s, [bV]: \"{bucketArn#region}\" }] }, aX = { [bM]: A, [bN]: [Z] }, aY = { [bQ]: \"https://s3-fips.dualstack.{Region}.{partitionResult#dnsSuffix}/{uri_encoded_bucket}\", [bR]: ao, [bW]: {} }, aZ = { [bQ]: \"https://s3-fips.{Region}.{partitionResult#dnsSuffix}/{uri_encoded_bucket}\", [bR]: ao, [bW]: {} }, ba = { [bQ]: \"https://s3.dualstack.{Region}.{partitionResult#dnsSuffix}/{uri_encoded_bucket}\", [bR]: ao, [bW]: {} }, bb = { [bQ]: L, [bR]: ao, [bW]: {} }, bc = { [bQ]: \"https://s3.{Region}.{partitionResult#dnsSuffix}/{uri_encoded_bucket}\", [bR]: ao, [bW]: {} }, bd = { [bO]: \"UseObjectLambdaEndpoint\" }, be = { [bS]: [{ [bT]: true, [j]: \"sigv4\", [bU]: E, [bV]: \"{Region}\" }] }, bf = { [bQ]: \"https://s3-fips.dualstack.{Region}.{partitionResult#dnsSuffix}\", [bR]: ao, [bW]: {} }, bg = { [bQ]: \"https://s3-fips.{Region}.{partitionResult#dnsSuffix}\", [bR]: ao, [bW]: {} }, bh = { [bQ]: \"https://s3.dualstack.{Region}.{partitionResult#dnsSuffix}\", [bR]: ao, [bW]: {} }, bi = { [bQ]: N, [bR]: ao, [bW]: {} }, bj = { [bQ]: \"https://s3.{Region}.{partitionResult#dnsSuffix}\", [bR]: ao, [bW]: {} }, bk = [{ [bO]: \"Region\" }], bl = [{ [bO]: \"Endpoint\" }], bm = [Z], bn = [{ [bM]: p, [bN]: [{ [bO]: o }, false] }], bo = [{ [bM]: h, [bN]: [{ [bO]: m }, \"beta\"] }], bp = [V, ad], bq = [Y], br = [W], bs = [{ [bM]: p, [bN]: [{ [bO]: \"Region\" }, false] }], bt = [{ [bM]: h, [bN]: [{ [bO]: \"Region\" }, \"us-east-1\"] }], bu = [{ [bM]: h, [bN]: [aF, F] }], bv = [{ [bM]: i, [bN]: [aE, \"resourceId[1]\"], [bP]: G }, { [bM]: q, [bN]: [{ [bM]: h, [bN]: [aH, D] }] }], bw = [aE, \"resourceId[1]\"], bx = [U], by = [S], bz = [{ [bM]: q, [bN]: [{ [bM]: h, [bN]: [{ [bM]: i, [bN]: [aE, \"region\"] }, D] }] }], bA = [{ [bM]: q, [bN]: [{ [bM]: c, [bN]: [{ [bM]: i, [bN]: [aE, \"resourceId[2]\"] }] }] }], bB = [aE, \"resourceId[2]\"], bC = [{ [bM]: g, [bN]: [{ [bM]: i, [bN]: [aE, \"region\"] }], [bP]: \"bucketPartition\" }], bD = [{ [bM]: h, [bN]: [aM, { [bM]: i, [bN]: [{ [bO]: \"partitionResult\" }, j] }] }], bE = [{ [bM]: p, [bN]: [{ [bM]: i, [bN]: [aE, \"region\"] }, true] }], bF = [{ [bM]: p, [bN]: [aN, false] }], bG = [{ [bM]: p, [bN]: [aH, false] }], bH = [T], bI = [{ [bM]: p, [bN]: [{ [bO]: \"Region\" }, true] }];\nconst _data = { version: \"1.0\", parameters: { Bucket: P, Region: P, UseFIPS: Q, UseDualStack: Q, Endpoint: P, ForcePathStyle: Q, Accelerate: Q, UseGlobalEndpoint: Q, UseObjectLambdaEndpoint: R, DisableAccessPoints: R, DisableMultiRegionAccessPoints: Q, UseArnRegion: R }, rules: [{ [bL]: [{ [bM]: c, [bN]: bk }], [bK]: d, rules: [{ [bL]: [S, T], error: \"Accelerate cannot be used with FIPS\", [bK]: f }, { [bL]: [U, V], error: \"Cannot set dual-stack in combination with a custom endpoint.\", [bK]: f }, { [bL]: [V, T], error: \"A custom endpoint cannot be combined with FIPS\", [bK]: f }, { [bL]: [V, S], error: \"A custom endpoint cannot be combined with S3 Accelerate\", [bK]: f }, { [bL]: [T, W, X], error: \"Partition does not support FIPS\", [bK]: f }, { [bL]: [Y, { [bM]: k, [bN]: [Z, 49, 50, b], [bP]: l }, { [bM]: k, [bN]: [Z, 8, 12, b], [bP]: m }, { [bM]: k, [bN]: [Z, 0, 7, b], [bP]: n }, { [bM]: k, [bN]: [Z, 32, 49, b], [bP]: o }, { [bM]: g, [bN]: bk, [bP]: \"regionPartition\" }, { [bM]: h, [bN]: [{ [bO]: n }, \"--op-s3\"] }], [bK]: d, rules: [{ [bL]: bn, [bK]: d, rules: [{ [bL]: [{ [bM]: h, [bN]: [aa, \"e\"] }], [bK]: d, rules: [{ [bL]: bo, [bK]: d, rules: [ab, { [bL]: bp, endpoint: { [bQ]: \"https://{Bucket}.ec2.{url#authority}\", [bR]: ae, [bW]: af }, [bK]: t }] }, { endpoint: { [bQ]: \"https://{Bucket}.ec2.s3-outposts.{Region}.{regionPartition#dnsSuffix}\", [bR]: ae, [bW]: af }, [bK]: t }] }, { [bL]: [{ [bM]: h, [bN]: [aa, \"o\"] }], [bK]: d, rules: [{ [bL]: bo, [bK]: d, rules: [ab, { [bL]: bp, endpoint: { [bQ]: \"https://{Bucket}.op-{outpostId}.{url#authority}\", [bR]: ae, [bW]: af }, [bK]: t }] }, { endpoint: { [bQ]: \"https://{Bucket}.op-{outpostId}.s3-outposts.{Region}.{regionPartition#dnsSuffix}\", [bR]: ae, [bW]: af }, [bK]: t }] }, { error: \"Unrecognized hardware type: \\\"Expected hardware type o or e but got {hardwareType}\\\"\", [bK]: f }] }, { error: \"Invalid ARN: The outpost Id must only contain a-z, A-Z, 0-9 and `-`.\", [bK]: f }] }, { [bL]: bq, [bK]: d, rules: [{ [bL]: [V, { [bM]: q, [bN]: [{ [bM]: c, [bN]: [{ [bM]: r, [bN]: bl }] }] }], error: \"Custom endpoint `{Endpoint}` was not a valid URI\", [bK]: f }, { [bL]: [ag, { [bM]: u, [bN]: [Z, a] }], [bK]: d, rules: [{ [bL]: br, [bK]: d, rules: [{ [bL]: bs, [bK]: d, rules: [{ [bL]: [S, X], error: \"S3 Accelerate cannot be used in this region\", [bK]: f }, { [bL]: [U, T, ai, ac, aj], endpoint: { [bQ]: \"https://{Bucket}.s3-fips.dualstack.us-east-1.{partitionResult#dnsSuffix}\", [bR]: ak, [bW]: af }, [bK]: t }, { [bL]: [U, T, ai, ac, al, am], [bK]: d, rules: [{ endpoint: an, [bK]: t }] }, { [bL]: [U, T, ai, ac, al, ap], endpoint: an, [bK]: t }, { [bL]: [aq, T, ai, ac, aj], endpoint: { [bQ]: \"https://{Bucket}.s3-fips.us-east-1.{partitionResult#dnsSuffix}\", [bR]: ak, [bW]: af }, [bK]: t }, { [bL]: [aq, T, ai, ac, al, am], [bK]: d, rules: [{ endpoint: ar, [bK]: t }] }, { [bL]: [aq, T, ai, ac, al, ap], endpoint: ar, [bK]: t }, { [bL]: [U, as, S, ac, aj], endpoint: { [bQ]: \"https://{Bucket}.s3-accelerate.dualstack.us-east-1.{partitionResult#dnsSuffix}\", [bR]: ak, [bW]: af }, [bK]: t }, { [bL]: [U, as, S, ac, al, am], [bK]: d, rules: [{ endpoint: at, [bK]: t }] }, { [bL]: [U, as, S, ac, al, ap], endpoint: at, [bK]: t }, { [bL]: [U, as, ai, ac, aj], endpoint: { [bQ]: \"https://{Bucket}.s3.dualstack.us-east-1.{partitionResult#dnsSuffix}\", [bR]: ak, [bW]: af }, [bK]: t }, { [bL]: [U, as, ai, ac, al, am], [bK]: d, rules: [{ endpoint: au, [bK]: t }] }, { [bL]: [U, as, ai, ac, al, ap], endpoint: au, [bK]: t }, { [bL]: [aq, as, ai, V, ad, av, aj], endpoint: { [bQ]: w, [bR]: ak, [bW]: af }, [bK]: t }, { [bL]: [aq, as, ai, V, ad, ax, aj], endpoint: { [bQ]: x, [bR]: ak, [bW]: af }, [bK]: t }, { [bL]: [aq, as, ai, V, ad, av, al, am], [bK]: d, rules: [{ [bL]: bt, endpoint: ay, [bK]: t }, { endpoint: ay, [bK]: t }] }, { [bL]: [aq, as, ai, V, ad, ax, al, am], [bK]: d, rules: [{ [bL]: bt, endpoint: az, [bK]: t }, aA] }, { [bL]: [aq, as, ai, V, ad, av, al, ap], endpoint: ay, [bK]: t }, { [bL]: [aq, as, ai, V, ad, ax, al, ap], endpoint: az, [bK]: t }, { [bL]: [aq, as, S, ac, aj], endpoint: { [bQ]: y, [bR]: ak, [bW]: af }, [bK]: t }, { [bL]: [aq, as, S, ac, al, am], [bK]: d, rules: [{ [bL]: bt, endpoint: aB, [bK]: t }, { endpoint: aB, [bK]: t }] }, { [bL]: [aq, as, S, ac, al, ap], endpoint: aB, [bK]: t }, { [bL]: [aq, as, ai, ac, aj], endpoint: { [bQ]: z, [bR]: ak, [bW]: af }, [bK]: t }, { [bL]: [aq, as, ai, ac, al, am], [bK]: d, rules: [{ [bL]: bt, endpoint: { [bQ]: z, [bR]: ao, [bW]: af }, [bK]: t }, { endpoint: aC, [bK]: t }] }, { [bL]: [aq, as, ai, ac, al, ap], endpoint: aC, [bK]: t }] }, aD] }] }, { [bL]: [V, ad, { [bM]: h, [bN]: [{ [bM]: i, [bN]: [aw, \"scheme\"] }, \"http\"] }, { [bM]: u, [bN]: [Z, b] }, ag, as, aq, ai], [bK]: d, rules: [{ [bL]: br, [bK]: d, rules: [{ [bL]: bs, [bK]: d, rules: [aA] }, aD] }] }, { [bL]: [ag, { [bM]: A, [bN]: bm, [bP]: B }], [bK]: d, rules: [{ [bL]: [{ [bM]: i, [bN]: [aE, \"resourceId[0]\"], [bP]: C }, { [bM]: q, [bN]: [{ [bM]: h, [bN]: [aF, D] }] }], [bK]: d, rules: [{ [bL]: [{ [bM]: h, [bN]: [aG, E] }], [bK]: d, rules: [{ [bL]: bu, [bK]: d, rules: [{ [bL]: bv, [bK]: d, rules: [aI, aJ, { [bL]: bz, [bK]: d, rules: [aK, { [bL]: bA, [bK]: d, rules: [aL, { [bL]: bC, [bK]: d, rules: [{ [bL]: br, [bK]: d, rules: [{ [bL]: bD, [bK]: d, rules: [{ [bL]: bE, [bK]: d, rules: [{ [bL]: [{ [bM]: h, [bN]: [aN, D] }], error: \"Invalid ARN: Missing account id\", [bK]: f }, { [bL]: bF, [bK]: d, rules: [{ [bL]: bG, [bK]: d, rules: [{ [bL]: bp, endpoint: { [bQ]: H, [bR]: aO, [bW]: af }, [bK]: t }, { [bL]: bH, endpoint: { [bQ]: \"https://{accessPointName}-{bucketArn#accountId}.s3-object-lambda-fips.{bucketArn#region}.{bucketPartition#dnsSuffix}\", [bR]: aO, [bW]: af }, [bK]: t }, { endpoint: { [bQ]: \"https://{accessPointName}-{bucketArn#accountId}.s3-object-lambda.{bucketArn#region}.{bucketPartition#dnsSuffix}\", [bR]: aO, [bW]: af }, [bK]: t }] }, aP] }, aQ] }, aR] }, aS] }] }] }, aT] }, { error: \"Invalid ARN: bucket ARN is missing a region\", [bK]: f }] }, aU] }, { error: \"Invalid ARN: Object Lambda ARNs only support `accesspoint` arn types, but found: `{arnType}`\", [bK]: f }] }, { [bL]: bu, [bK]: d, rules: [{ [bL]: bv, [bK]: d, rules: [{ [bL]: bz, [bK]: d, rules: [{ [bL]: bu, [bK]: d, rules: [{ [bL]: bz, [bK]: d, rules: [aK, { [bL]: bA, [bK]: d, rules: [aL, { [bL]: bC, [bK]: d, rules: [{ [bL]: br, [bK]: d, rules: [{ [bL]: [{ [bM]: h, [bN]: [aM, \"{partitionResult#name}\"] }], [bK]: d, rules: [{ [bL]: bE, [bK]: d, rules: [{ [bL]: [{ [bM]: h, [bN]: [aG, v] }], [bK]: d, rules: [{ [bL]: bF, [bK]: d, rules: [{ [bL]: bG, [bK]: d, rules: [{ [bL]: by, error: \"Access Points do not support S3 Accelerate\", [bK]: f }, { [bL]: [T, U], endpoint: { [bQ]: \"https://{accessPointName}-{bucketArn#accountId}.s3-accesspoint-fips.dualstack.{bucketArn#region}.{bucketPartition#dnsSuffix}\", [bR]: aV, [bW]: af }, [bK]: t }, { [bL]: [T, aq], endpoint: { [bQ]: \"https://{accessPointName}-{bucketArn#accountId}.s3-accesspoint-fips.{bucketArn#region}.{bucketPartition#dnsSuffix}\", [bR]: aV, [bW]: af }, [bK]: t }, { [bL]: [as, U], endpoint: { [bQ]: \"https://{accessPointName}-{bucketArn#accountId}.s3-accesspoint.dualstack.{bucketArn#region}.{bucketPartition#dnsSuffix}\", [bR]: aV, [bW]: af }, [bK]: t }, { [bL]: [as, aq, V, ad], endpoint: { [bQ]: H, [bR]: aV, [bW]: af }, [bK]: t }, { [bL]: [as, aq], endpoint: { [bQ]: \"https://{accessPointName}-{bucketArn#accountId}.s3-accesspoint.{bucketArn#region}.{bucketPartition#dnsSuffix}\", [bR]: aV, [bW]: af }, [bK]: t }] }, aP] }, aQ] }, { error: \"Invalid ARN: The ARN was not for the S3 service, found: {bucketArn#service}\", [bK]: f }] }, aR] }, aS] }] }] }, aT] }] }] }, { [bL]: [{ [bM]: p, [bN]: [aH, b] }], [bK]: d, rules: [{ [bL]: bx, error: \"S3 MRAP does not support dual-stack\", [bK]: f }, { [bL]: bH, error: \"S3 MRAP does not support FIPS\", [bK]: f }, { [bL]: by, error: \"S3 MRAP does not support S3 Accelerate\", [bK]: f }, { [bL]: [{ [bM]: e, [bN]: [{ [bO]: \"DisableMultiRegionAccessPoints\" }, b] }], error: \"Invalid configuration: Multi-Region Access Point ARNs are disabled.\", [bK]: f }, { [bL]: [{ [bM]: g, [bN]: bk, [bP]: I }], [bK]: d, rules: [{ [bL]: [{ [bM]: h, [bN]: [{ [bM]: i, [bN]: [{ [bO]: I }, j] }, { [bM]: i, [bN]: [aE, \"partition\"] }] }], [bK]: d, rules: [{ endpoint: { [bQ]: \"https://{accessPointName}.accesspoint.s3-global.{mrapPartition#dnsSuffix}\", [bR]: { [bS]: [{ [bT]: b, name: \"sigv4a\", [bU]: v, signingRegionSet: [\"*\"] }] }, [bW]: af }, [bK]: t }] }, { error: \"Client was configured for partition `{mrapPartition#name}` but bucket referred to partition `{bucketArn#partition}`\", [bK]: f }] }] }, { error: \"Invalid Access Point Name\", [bK]: f }] }, aU] }, { [bL]: [{ [bM]: h, [bN]: [aG, s] }], [bK]: d, rules: [{ [bL]: bx, error: \"S3 Outposts does not support Dual-stack\", [bK]: f }, { [bL]: bH, error: \"S3 Outposts does not support FIPS\", [bK]: f }, { [bL]: by, error: \"S3 Outposts does not support S3 Accelerate\", [bK]: f }, { [bL]: [{ [bM]: c, [bN]: [{ [bM]: i, [bN]: [aE, \"resourceId[4]\"] }] }], error: \"Invalid Arn: Outpost Access Point ARN contains sub resources\", [bK]: f }, { [bL]: [{ [bM]: i, [bN]: bw, [bP]: o }], [bK]: d, rules: [{ [bL]: bn, [bK]: d, rules: [aL, { [bL]: bC, [bK]: d, rules: [{ [bL]: br, [bK]: d, rules: [{ [bL]: bD, [bK]: d, rules: [{ [bL]: bE, [bK]: d, rules: [{ [bL]: bF, [bK]: d, rules: [{ [bL]: [{ [bM]: i, [bN]: bB, [bP]: J }], [bK]: d, rules: [{ [bL]: [{ [bM]: i, [bN]: [aE, \"resourceId[3]\"], [bP]: G }], [bK]: d, rules: [{ [bL]: [{ [bM]: h, [bN]: [{ [bO]: J }, F] }], [bK]: d, rules: [{ [bL]: bp, endpoint: { [bQ]: \"https://{accessPointName}-{bucketArn#accountId}.{outpostId}.{url#authority}\", [bR]: aW, [bW]: af }, [bK]: t }, { endpoint: { [bQ]: \"https://{accessPointName}-{bucketArn#accountId}.{outpostId}.s3-outposts.{bucketArn#region}.{bucketPartition#dnsSuffix}\", [bR]: aW, [bW]: af }, [bK]: t }] }, { error: \"Expected an outpost type `accesspoint`, found {outpostType}\", [bK]: f }] }, { error: \"Invalid ARN: expected an access point name\", [bK]: f }] }, { error: \"Invalid ARN: Expected a 4-component resource\", [bK]: f }] }, aQ] }, aR] }, aS] }] }] }, { error: \"Invalid ARN: The outpost Id may only contain a-z, A-Z, 0-9 and `-`. Found: `{outpostId}`\", [bK]: f }] }, { error: \"Invalid ARN: The Outpost Id was not set\", [bK]: f }] }, { error: \"Invalid ARN: Unrecognized format: {Bucket} (type: {arnType})\", [bK]: f }] }, { error: \"Invalid ARN: No ARN type specified\", [bK]: f }] }, { [bL]: [{ [bM]: k, [bN]: [Z, 0, 4, a], [bP]: K }, { [bM]: h, [bN]: [{ [bO]: K }, \"arn:\"] }, { [bM]: q, [bN]: [{ [bM]: c, [bN]: [aX] }] }], error: \"Invalid ARN: `{Bucket}` was not a valid ARN\", [bK]: f }, { [bL]: [{ [bM]: e, [bN]: [ah, b] }, aX], error: \"Path-style addressing cannot be used with ARN buckets\", [bK]: f }, { [bL]: [{ [bM]: \"uriEncode\", [bN]: bm, [bP]: \"uri_encoded_bucket\" }], [bK]: d, rules: [{ [bL]: br, [bK]: d, rules: [{ [bL]: [ai], [bK]: d, rules: [{ [bL]: [U, ac, T, aj], endpoint: { [bQ]: \"https://s3-fips.dualstack.us-east-1.{partitionResult#dnsSuffix}/{uri_encoded_bucket}\", [bR]: ak, [bW]: af }, [bK]: t }, { [bL]: [U, ac, T, al, am], [bK]: d, rules: [{ endpoint: aY, [bK]: t }] }, { [bL]: [U, ac, T, al, ap], endpoint: aY, [bK]: t }, { [bL]: [aq, ac, T, aj], endpoint: { [bQ]: \"https://s3-fips.us-east-1.{partitionResult#dnsSuffix}/{uri_encoded_bucket}\", [bR]: ak, [bW]: af }, [bK]: t }, { [bL]: [aq, ac, T, al, am], [bK]: d, rules: [{ endpoint: aZ, [bK]: t }] }, { [bL]: [aq, ac, T, al, ap], endpoint: aZ, [bK]: t }, { [bL]: [U, ac, as, aj], endpoint: { [bQ]: \"https://s3.dualstack.us-east-1.{partitionResult#dnsSuffix}/{uri_encoded_bucket}\", [bR]: ak, [bW]: af }, [bK]: t }, { [bL]: [U, ac, as, al, am], [bK]: d, rules: [{ endpoint: ba, [bK]: t }] }, { [bL]: [U, ac, as, al, ap], endpoint: ba, [bK]: t }, { [bL]: [aq, V, ad, as, aj], endpoint: { [bQ]: L, [bR]: ak, [bW]: af }, [bK]: t }, { [bL]: [aq, V, ad, as, al, am], [bK]: d, rules: [{ [bL]: bt, endpoint: bb, [bK]: t }, { endpoint: bb, [bK]: t }] }, { [bL]: [aq, V, ad, as, al, ap], endpoint: bb, [bK]: t }, { [bL]: [aq, ac, as, aj], endpoint: { [bQ]: M, [bR]: ak, [bW]: af }, [bK]: t }, { [bL]: [aq, ac, as, al, am], [bK]: d, rules: [{ [bL]: bt, endpoint: { [bQ]: M, [bR]: ao, [bW]: af }, [bK]: t }, { endpoint: bc, [bK]: t }] }, { [bL]: [aq, ac, as, al, ap], endpoint: bc, [bK]: t }] }, { error: \"Path-style addressing cannot be used with S3 Accelerate\", [bK]: f }] }] }] }, { [bL]: [{ [bM]: c, [bN]: [bd] }, { [bM]: e, [bN]: [bd, b] }], [bK]: d, rules: [{ [bL]: br, [bK]: d, rules: [{ [bL]: bI, [bK]: d, rules: [aI, aJ, { [bL]: bp, endpoint: { [bQ]: N, [bR]: be, [bW]: af }, [bK]: t }, { [bL]: bH, endpoint: { [bQ]: \"https://s3-object-lambda-fips.{Region}.{partitionResult#dnsSuffix}\", [bR]: be, [bW]: af }, [bK]: t }, { endpoint: { [bQ]: \"https://s3-object-lambda.{Region}.{partitionResult#dnsSuffix}\", [bR]: be, [bW]: af }, [bK]: t }] }, aD] }] }, { [bL]: [{ [bM]: q, [bN]: bq }], [bK]: d, rules: [{ [bL]: br, [bK]: d, rules: [{ [bL]: bI, [bK]: d, rules: [{ [bL]: [T, U, ac, aj], endpoint: { [bQ]: \"https://s3-fips.dualstack.us-east-1.{partitionResult#dnsSuffix}\", [bR]: ak, [bW]: af }, [bK]: t }, { [bL]: [T, U, ac, al, am], [bK]: d, rules: [{ endpoint: bf, [bK]: t }] }, { [bL]: [T, U, ac, al, ap], endpoint: bf, [bK]: t }, { [bL]: [T, aq, ac, aj], endpoint: { [bQ]: \"https://s3-fips.us-east-1.{partitionResult#dnsSuffix}\", [bR]: ak, [bW]: af }, [bK]: t }, { [bL]: [T, aq, ac, al, am], [bK]: d, rules: [{ endpoint: bg, [bK]: t }] }, { [bL]: [T, aq, ac, al, ap], endpoint: bg, [bK]: t }, { [bL]: [as, U, ac, aj], endpoint: { [bQ]: \"https://s3.dualstack.us-east-1.{partitionResult#dnsSuffix}\", [bR]: ak, [bW]: af }, [bK]: t }, { [bL]: [as, U, ac, al, am], [bK]: d, rules: [{ endpoint: bh, [bK]: t }] }, { [bL]: [as, U, ac, al, ap], endpoint: bh, [bK]: t }, { [bL]: [as, aq, V, ad, aj], endpoint: { [bQ]: N, [bR]: ak, [bW]: af }, [bK]: t }, { [bL]: [as, aq, V, ad, al, am], [bK]: d, rules: [{ [bL]: bt, endpoint: bi, [bK]: t }, { endpoint: bi, [bK]: t }] }, { [bL]: [as, aq, V, ad, al, ap], endpoint: bi, [bK]: t }, { [bL]: [as, aq, ac, aj], endpoint: { [bQ]: O, [bR]: ak, [bW]: af }, [bK]: t }, { [bL]: [as, aq, ac, al, am], [bK]: d, rules: [{ [bL]: bt, endpoint: { [bQ]: O, [bR]: ao, [bW]: af }, [bK]: t }, { endpoint: bj, [bK]: t }] }, { [bL]: [as, aq, ac, al, ap], endpoint: bj, [bK]: t }] }, aD] }] }] }, { error: \"A region must be set when sending requests to S3.\", [bK]: f }] };\nexport const ruleSet = _data;\n","import { resolveEndpoint } from \"@aws-sdk/util-endpoints\";\nimport { ruleSet } from \"./ruleset\";\nexport const defaultEndpointResolver = (endpointParams, context = {}) => {\n    return resolveEndpoint(ruleSet, {\n        endpointParams: endpointParams,\n        logger: context.logger,\n    });\n};\n","import { SignatureV4MultiRegion } from \"@aws-sdk/signature-v4-multi-region\";\nimport { NoOpLogger } from \"@smithy/smithy-client\";\nimport { parseUrl } from \"@smithy/url-parser\";\nimport { fromBase64, toBase64 } from \"@smithy/util-base64\";\nimport { getAwsChunkedEncodingStream, sdkStreamMixin } from \"@smithy/util-stream\";\nimport { fromUtf8, toUtf8 } from \"@smithy/util-utf8\";\nimport { defaultEndpointResolver } from \"./endpoint/endpointResolver\";\nexport const getRuntimeConfig = (config) => ({\n    apiVersion: \"2006-03-01\",\n    base64Decoder: config?.base64Decoder ?? fromBase64,\n    base64Encoder: config?.base64Encoder ?? toBase64,\n    disableHostPrefix: config?.disableHostPrefix ?? false,\n    endpointProvider: config?.endpointProvider ?? defaultEndpointResolver,\n    getAwsChunkedEncodingStream: config?.getAwsChunkedEncodingStream ?? getAwsChunkedEncodingStream,\n    logger: config?.logger ?? new NoOpLogger(),\n    sdkStreamMixin: config?.sdkStreamMixin ?? sdkStreamMixin,\n    serviceId: config?.serviceId ?? \"S3\",\n    signerConstructor: config?.signerConstructor ?? SignatureV4MultiRegion,\n    signingEscapePath: config?.signingEscapePath ?? false,\n    urlParser: config?.urlParser ?? parseUrl,\n    useArnRegion: config?.useArnRegion ?? false,\n    utf8Decoder: config?.utf8Decoder ?? fromUtf8,\n    utf8Encoder: config?.utf8Encoder ?? toUtf8,\n});\n","export const DEFAULTS_MODE_OPTIONS = [\"in-region\", \"cross-region\", \"mobile\", \"standard\", \"legacy\"];\n","import { memoize } from \"@smithy/property-provider\";\nimport bowser from \"bowser\";\nimport { DEFAULTS_MODE_OPTIONS } from \"./constants\";\nexport const resolveDefaultsModeConfig = ({ defaultsMode, } = {}) => memoize(async () => {\n    const mode = typeof defaultsMode === \"function\" ? await defaultsMode() : defaultsMode;\n    switch (mode?.toLowerCase()) {\n        case \"auto\":\n            return Promise.resolve(isMobileBrowser() ? \"mobile\" : \"standard\");\n        case \"mobile\":\n        case \"in-region\":\n        case \"cross-region\":\n        case \"standard\":\n        case \"legacy\":\n            return Promise.resolve(mode?.toLocaleLowerCase());\n        case undefined:\n            return Promise.resolve(\"legacy\");\n        default:\n            throw new Error(`Invalid parameter for \"defaultsMode\", expect ${DEFAULTS_MODE_OPTIONS.join(\", \")}, got ${mode}`);\n    }\n});\nconst isMobileBrowser = () => {\n    const parsedUA = typeof window !== \"undefined\" && window?.navigator?.userAgent\n        ? bowser.parse(window.navigator.userAgent)\n        : undefined;\n    const platform = parsedUA?.platform?.type;\n    return platform === \"tablet\" || platform === \"mobile\";\n};\n","import packageInfo from \"../package.json\";\nimport { Sha1 } from \"@aws-crypto/sha1-browser\";\nimport { Sha256 } from \"@aws-crypto/sha256-browser\";\nimport { defaultUserAgent } from \"@aws-sdk/util-user-agent-browser\";\nimport { DEFAULT_USE_DUALSTACK_ENDPOINT, DEFAULT_USE_FIPS_ENDPOINT } from \"@smithy/config-resolver\";\nimport { eventStreamSerdeProvider } from \"@smithy/eventstream-serde-browser\";\nimport { FetchHttpHandler as RequestHandler, streamCollector } from \"@smithy/fetch-http-handler\";\nimport { blobHasher as streamHasher } from \"@smithy/hash-blob-browser\";\nimport { invalidProvider } from \"@smithy/invalid-dependency\";\nimport { Md5 } from \"@smithy/md5-js\";\nimport { calculateBodyLength } from \"@smithy/util-body-length-browser\";\nimport { DEFAULT_MAX_ATTEMPTS, DEFAULT_RETRY_MODE } from \"@smithy/util-retry\";\nimport { getRuntimeConfig as getSharedRuntimeConfig } from \"./runtimeConfig.shared\";\nimport { loadConfigsForDefaultMode } from \"@smithy/smithy-client\";\nimport { resolveDefaultsModeConfig } from \"@smithy/util-defaults-mode-browser\";\nexport const getRuntimeConfig = (config) => {\n    const defaultsMode = resolveDefaultsModeConfig(config);\n    const defaultConfigProvider = () => defaultsMode().then(loadConfigsForDefaultMode);\n    const clientSharedValues = getSharedRuntimeConfig(config);\n    return {\n        ...clientSharedValues,\n        ...config,\n        runtime: \"browser\",\n        defaultsMode,\n        bodyLengthChecker: config?.bodyLengthChecker ?? calculateBodyLength,\n        credentialDefaultProvider: config?.credentialDefaultProvider ?? ((_) => () => Promise.reject(new Error(\"Credential is missing\"))),\n        defaultUserAgentProvider: config?.defaultUserAgentProvider ??\n            defaultUserAgent({ serviceId: clientSharedValues.serviceId, clientVersion: packageInfo.version }),\n        eventStreamSerdeProvider: config?.eventStreamSerdeProvider ?? eventStreamSerdeProvider,\n        maxAttempts: config?.maxAttempts ?? DEFAULT_MAX_ATTEMPTS,\n        md5: config?.md5 ?? Md5,\n        region: config?.region ?? invalidProvider(\"Region is missing\"),\n        requestHandler: config?.requestHandler ?? new RequestHandler(defaultConfigProvider),\n        retryMode: config?.retryMode ?? (async () => (await defaultConfigProvider()).retryMode || DEFAULT_RETRY_MODE),\n        sha1: config?.sha1 ?? Sha1,\n        sha256: config?.sha256 ?? Sha256,\n        streamCollector: config?.streamCollector ?? streamCollector,\n        streamHasher: config?.streamHasher ?? streamHasher,\n        useDualstackEndpoint: config?.useDualstackEndpoint ?? (() => Promise.resolve(DEFAULT_USE_DUALSTACK_ENDPOINT)),\n        useFipsEndpoint: config?.useFipsEndpoint ?? (() => Promise.resolve(DEFAULT_USE_FIPS_ENDPOINT)),\n    };\n};\n","import { getAddExpectContinuePlugin } from \"@aws-sdk/middleware-expect-continue\";\nimport { getHostHeaderPlugin, resolveHostHeaderConfig, } from \"@aws-sdk/middleware-host-header\";\nimport { getLoggerPlugin } from \"@aws-sdk/middleware-logger\";\nimport { getRecursionDetectionPlugin } from \"@aws-sdk/middleware-recursion-detection\";\nimport { getValidateBucketNamePlugin, resolveS3Config, } from \"@aws-sdk/middleware-sdk-s3\";\nimport { getAwsAuthPlugin, resolveAwsAuthConfig, } from \"@aws-sdk/middleware-signing\";\nimport { getUserAgentPlugin, resolveUserAgentConfig, } from \"@aws-sdk/middleware-user-agent\";\nimport { resolveRegionConfig } from \"@smithy/config-resolver\";\nimport { resolveEventStreamSerdeConfig, } from \"@smithy/eventstream-serde-config-resolver\";\nimport { getContentLengthPlugin } from \"@smithy/middleware-content-length\";\nimport { resolveEndpointConfig } from \"@smithy/middleware-endpoint\";\nimport { getRetryPlugin, resolveRetryConfig } from \"@smithy/middleware-retry\";\nimport { Client as __Client, } from \"@smithy/smithy-client\";\nimport { resolveClientEndpointParameters, } from \"./endpoint/EndpointParameters\";\nimport { getRuntimeConfig as __getRuntimeConfig } from \"./runtimeConfig\";\nexport { __Client };\nexport class S3Client extends __Client {\n    constructor(configuration) {\n        const _config_0 = __getRuntimeConfig(configuration);\n        const _config_1 = resolveClientEndpointParameters(_config_0);\n        const _config_2 = resolveRegionConfig(_config_1);\n        const _config_3 = resolveEndpointConfig(_config_2);\n        const _config_4 = resolveRetryConfig(_config_3);\n        const _config_5 = resolveHostHeaderConfig(_config_4);\n        const _config_6 = resolveAwsAuthConfig(_config_5);\n        const _config_7 = resolveS3Config(_config_6);\n        const _config_8 = resolveUserAgentConfig(_config_7);\n        const _config_9 = resolveEventStreamSerdeConfig(_config_8);\n        super(_config_9);\n        this.config = _config_9;\n        this.middlewareStack.use(getRetryPlugin(this.config));\n        this.middlewareStack.use(getContentLengthPlugin(this.config));\n        this.middlewareStack.use(getHostHeaderPlugin(this.config));\n        this.middlewareStack.use(getLoggerPlugin(this.config));\n        this.middlewareStack.use(getRecursionDetectionPlugin(this.config));\n        this.middlewareStack.use(getAwsAuthPlugin(this.config));\n        this.middlewareStack.use(getValidateBucketNamePlugin(this.config));\n        this.middlewareStack.use(getAddExpectContinuePlugin(this.config));\n        this.middlewareStack.use(getUserAgentPlugin(this.config));\n    }\n    destroy() {\n        super.destroy();\n    }\n}\n","'use strict';\n\nconst nameStartChar = ':A-Za-z_\\\\u00C0-\\\\u00D6\\\\u00D8-\\\\u00F6\\\\u00F8-\\\\u02FF\\\\u0370-\\\\u037D\\\\u037F-\\\\u1FFF\\\\u200C-\\\\u200D\\\\u2070-\\\\u218F\\\\u2C00-\\\\u2FEF\\\\u3001-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFFD';\nconst nameChar = nameStartChar + '\\\\-.\\\\d\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040';\nconst nameRegexp = '[' + nameStartChar + '][' + nameChar + ']*'\nconst regexName = new RegExp('^' + nameRegexp + '$');\n\nconst getAllMatches = function(string, regex) {\n  const matches = [];\n  let match = regex.exec(string);\n  while (match) {\n    const allmatches = [];\n    allmatches.startIndex = regex.lastIndex - match[0].length;\n    const len = match.length;\n    for (let index = 0; index < len; index++) {\n      allmatches.push(match[index]);\n    }\n    matches.push(allmatches);\n    match = regex.exec(string);\n  }\n  return matches;\n};\n\nconst isName = function(string) {\n  const match = regexName.exec(string);\n  return !(match === null || typeof match === 'undefined');\n};\n\nexports.isExist = function(v) {\n  return typeof v !== 'undefined';\n};\n\nexports.isEmptyObject = function(obj) {\n  return Object.keys(obj).length === 0;\n};\n\n/**\n * Copy all the properties of a into b.\n * @param {*} target\n * @param {*} a\n */\nexports.merge = function(target, a, arrayMode) {\n  if (a) {\n    const keys = Object.keys(a); // will return an array of own properties\n    const len = keys.length; //don't make it inline\n    for (let i = 0; i < len; i++) {\n      if (arrayMode === 'strict') {\n        target[keys[i]] = [ a[keys[i]] ];\n      } else {\n        target[keys[i]] = a[keys[i]];\n      }\n    }\n  }\n};\n/* exports.merge =function (b,a){\n  return Object.assign(b,a);\n} */\n\nexports.getValue = function(v) {\n  if (exports.isExist(v)) {\n    return v;\n  } else {\n    return '';\n  }\n};\n\n// const fakeCall = function(a) {return a;};\n// const fakeCallNoReturn = function() {};\n\nexports.isName = isName;\nexports.getAllMatches = getAllMatches;\nexports.nameRegexp = nameRegexp;\n","'use strict';\n\nconst util = require('./util');\n\nconst defaultOptions = {\n  allowBooleanAttributes: false, //A tag can have attributes without any value\n  unpairedTags: []\n};\n\n//const tagsPattern = new RegExp(\"<\\\\/?([\\\\w:\\\\-_\\.]+)\\\\s*\\/?>\",\"g\");\nexports.validate = function (xmlData, options) {\n  options = Object.assign({}, defaultOptions, options);\n\n  //xmlData = xmlData.replace(/(\\r\\n|\\n|\\r)/gm,\"\");//make it single line\n  //xmlData = xmlData.replace(/(^\\s*<\\?xml.*?\\?>)/g,\"\");//Remove XML starting tag\n  //xmlData = xmlData.replace(/(<!DOCTYPE[\\s\\w\\\"\\.\\/\\-\\:]+(\\[.*\\])*\\s*>)/g,\"\");//Remove DOCTYPE\n  const tags = [];\n  let tagFound = false;\n\n  //indicates that the root tag has been closed (aka. depth 0 has been reached)\n  let reachedRoot = false;\n\n  if (xmlData[0] === '\\ufeff') {\n    // check for byte order mark (BOM)\n    xmlData = xmlData.substr(1);\n  }\n  \n  for (let i = 0; i < xmlData.length; i++) {\n\n    if (xmlData[i] === '<' && xmlData[i+1] === '?') {\n      i+=2;\n      i = readPI(xmlData,i);\n      if (i.err) return i;\n    }else if (xmlData[i] === '<') {\n      //starting of tag\n      //read until you reach to '>' avoiding any '>' in attribute value\n      let tagStartPos = i;\n      i++;\n      \n      if (xmlData[i] === '!') {\n        i = readCommentAndCDATA(xmlData, i);\n        continue;\n      } else {\n        let closingTag = false;\n        if (xmlData[i] === '/') {\n          //closing tag\n          closingTag = true;\n          i++;\n        }\n        //read tagname\n        let tagName = '';\n        for (; i < xmlData.length &&\n          xmlData[i] !== '>' &&\n          xmlData[i] !== ' ' &&\n          xmlData[i] !== '\\t' &&\n          xmlData[i] !== '\\n' &&\n          xmlData[i] !== '\\r'; i++\n        ) {\n          tagName += xmlData[i];\n        }\n        tagName = tagName.trim();\n        //console.log(tagName);\n\n        if (tagName[tagName.length - 1] === '/') {\n          //self closing tag without attributes\n          tagName = tagName.substring(0, tagName.length - 1);\n          //continue;\n          i--;\n        }\n        if (!validateTagName(tagName)) {\n          let msg;\n          if (tagName.trim().length === 0) {\n            msg = \"Invalid space after '<'.\";\n          } else {\n            msg = \"Tag '\"+tagName+\"' is an invalid name.\";\n          }\n          return getErrorObject('InvalidTag', msg, getLineNumberForPosition(xmlData, i));\n        }\n\n        const result = readAttributeStr(xmlData, i);\n        if (result === false) {\n          return getErrorObject('InvalidAttr', \"Attributes for '\"+tagName+\"' have open quote.\", getLineNumberForPosition(xmlData, i));\n        }\n        let attrStr = result.value;\n        i = result.index;\n\n        if (attrStr[attrStr.length - 1] === '/') {\n          //self closing tag\n          const attrStrStart = i - attrStr.length;\n          attrStr = attrStr.substring(0, attrStr.length - 1);\n          const isValid = validateAttributeString(attrStr, options);\n          if (isValid === true) {\n            tagFound = true;\n            //continue; //text may presents after self closing tag\n          } else {\n            //the result from the nested function returns the position of the error within the attribute\n            //in order to get the 'true' error line, we need to calculate the position where the attribute begins (i - attrStr.length) and then add the position within the attribute\n            //this gives us the absolute index in the entire xml, which we can use to find the line at last\n            return getErrorObject(isValid.err.code, isValid.err.msg, getLineNumberForPosition(xmlData, attrStrStart + isValid.err.line));\n          }\n        } else if (closingTag) {\n          if (!result.tagClosed) {\n            return getErrorObject('InvalidTag', \"Closing tag '\"+tagName+\"' doesn't have proper closing.\", getLineNumberForPosition(xmlData, i));\n          } else if (attrStr.trim().length > 0) {\n            return getErrorObject('InvalidTag', \"Closing tag '\"+tagName+\"' can't have attributes or invalid starting.\", getLineNumberForPosition(xmlData, tagStartPos));\n          } else {\n            const otg = tags.pop();\n            if (tagName !== otg.tagName) {\n              let openPos = getLineNumberForPosition(xmlData, otg.tagStartPos);\n              return getErrorObject('InvalidTag',\n                \"Expected closing tag '\"+otg.tagName+\"' (opened in line \"+openPos.line+\", col \"+openPos.col+\") instead of closing tag '\"+tagName+\"'.\",\n                getLineNumberForPosition(xmlData, tagStartPos));\n            }\n\n            //when there are no more tags, we reached the root level.\n            if (tags.length == 0) {\n              reachedRoot = true;\n            }\n          }\n        } else {\n          const isValid = validateAttributeString(attrStr, options);\n          if (isValid !== true) {\n            //the result from the nested function returns the position of the error within the attribute\n            //in order to get the 'true' error line, we need to calculate the position where the attribute begins (i - attrStr.length) and then add the position within the attribute\n            //this gives us the absolute index in the entire xml, which we can use to find the line at last\n            return getErrorObject(isValid.err.code, isValid.err.msg, getLineNumberForPosition(xmlData, i - attrStr.length + isValid.err.line));\n          }\n\n          //if the root level has been reached before ...\n          if (reachedRoot === true) {\n            return getErrorObject('InvalidXml', 'Multiple possible root nodes found.', getLineNumberForPosition(xmlData, i));\n          } else if(options.unpairedTags.indexOf(tagName) !== -1){\n            //don't push into stack\n          } else {\n            tags.push({tagName, tagStartPos});\n          }\n          tagFound = true;\n        }\n\n        //skip tag text value\n        //It may include comments and CDATA value\n        for (i++; i < xmlData.length; i++) {\n          if (xmlData[i] === '<') {\n            if (xmlData[i + 1] === '!') {\n              //comment or CADATA\n              i++;\n              i = readCommentAndCDATA(xmlData, i);\n              continue;\n            } else if (xmlData[i+1] === '?') {\n              i = readPI(xmlData, ++i);\n              if (i.err) return i;\n            } else{\n              break;\n            }\n          } else if (xmlData[i] === '&') {\n            const afterAmp = validateAmpersand(xmlData, i);\n            if (afterAmp == -1)\n              return getErrorObject('InvalidChar', \"char '&' is not expected.\", getLineNumberForPosition(xmlData, i));\n            i = afterAmp;\n          }else{\n            if (reachedRoot === true && !isWhiteSpace(xmlData[i])) {\n              return getErrorObject('InvalidXml', \"Extra text at the end\", getLineNumberForPosition(xmlData, i));\n            }\n          }\n        } //end of reading tag text value\n        if (xmlData[i] === '<') {\n          i--;\n        }\n      }\n    } else {\n      if ( isWhiteSpace(xmlData[i])) {\n        continue;\n      }\n      return getErrorObject('InvalidChar', \"char '\"+xmlData[i]+\"' is not expected.\", getLineNumberForPosition(xmlData, i));\n    }\n  }\n\n  if (!tagFound) {\n    return getErrorObject('InvalidXml', 'Start tag expected.', 1);\n  }else if (tags.length == 1) {\n      return getErrorObject('InvalidTag', \"Unclosed tag '\"+tags[0].tagName+\"'.\", getLineNumberForPosition(xmlData, tags[0].tagStartPos));\n  }else if (tags.length > 0) {\n      return getErrorObject('InvalidXml', \"Invalid '\"+\n          JSON.stringify(tags.map(t => t.tagName), null, 4).replace(/\\r?\\n/g, '')+\n          \"' found.\", {line: 1, col: 1});\n  }\n\n  return true;\n};\n\nfunction isWhiteSpace(char){\n  return char === ' ' || char === '\\t' || char === '\\n'  || char === '\\r';\n}\n/**\n * Read Processing insstructions and skip\n * @param {*} xmlData\n * @param {*} i\n */\nfunction readPI(xmlData, i) {\n  const start = i;\n  for (; i < xmlData.length; i++) {\n    if (xmlData[i] == '?' || xmlData[i] == ' ') {\n      //tagname\n      const tagname = xmlData.substr(start, i - start);\n      if (i > 5 && tagname === 'xml') {\n        return getErrorObject('InvalidXml', 'XML declaration allowed only at the start of the document.', getLineNumberForPosition(xmlData, i));\n      } else if (xmlData[i] == '?' && xmlData[i + 1] == '>') {\n        //check if valid attribut string\n        i++;\n        break;\n      } else {\n        continue;\n      }\n    }\n  }\n  return i;\n}\n\nfunction readCommentAndCDATA(xmlData, i) {\n  if (xmlData.length > i + 5 && xmlData[i + 1] === '-' && xmlData[i + 2] === '-') {\n    //comment\n    for (i += 3; i < xmlData.length; i++) {\n      if (xmlData[i] === '-' && xmlData[i + 1] === '-' && xmlData[i + 2] === '>') {\n        i += 2;\n        break;\n      }\n    }\n  } else if (\n    xmlData.length > i + 8 &&\n    xmlData[i + 1] === 'D' &&\n    xmlData[i + 2] === 'O' &&\n    xmlData[i + 3] === 'C' &&\n    xmlData[i + 4] === 'T' &&\n    xmlData[i + 5] === 'Y' &&\n    xmlData[i + 6] === 'P' &&\n    xmlData[i + 7] === 'E'\n  ) {\n    let angleBracketsCount = 1;\n    for (i += 8; i < xmlData.length; i++) {\n      if (xmlData[i] === '<') {\n        angleBracketsCount++;\n      } else if (xmlData[i] === '>') {\n        angleBracketsCount--;\n        if (angleBracketsCount === 0) {\n          break;\n        }\n      }\n    }\n  } else if (\n    xmlData.length > i + 9 &&\n    xmlData[i + 1] === '[' &&\n    xmlData[i + 2] === 'C' &&\n    xmlData[i + 3] === 'D' &&\n    xmlData[i + 4] === 'A' &&\n    xmlData[i + 5] === 'T' &&\n    xmlData[i + 6] === 'A' &&\n    xmlData[i + 7] === '['\n  ) {\n    for (i += 8; i < xmlData.length; i++) {\n      if (xmlData[i] === ']' && xmlData[i + 1] === ']' && xmlData[i + 2] === '>') {\n        i += 2;\n        break;\n      }\n    }\n  }\n\n  return i;\n}\n\nconst doubleQuote = '\"';\nconst singleQuote = \"'\";\n\n/**\n * Keep reading xmlData until '<' is found outside the attribute value.\n * @param {string} xmlData\n * @param {number} i\n */\nfunction readAttributeStr(xmlData, i) {\n  let attrStr = '';\n  let startChar = '';\n  let tagClosed = false;\n  for (; i < xmlData.length; i++) {\n    if (xmlData[i] === doubleQuote || xmlData[i] === singleQuote) {\n      if (startChar === '') {\n        startChar = xmlData[i];\n      } else if (startChar !== xmlData[i]) {\n        //if vaue is enclosed with double quote then single quotes are allowed inside the value and vice versa\n      } else {\n        startChar = '';\n      }\n    } else if (xmlData[i] === '>') {\n      if (startChar === '') {\n        tagClosed = true;\n        break;\n      }\n    }\n    attrStr += xmlData[i];\n  }\n  if (startChar !== '') {\n    return false;\n  }\n\n  return {\n    value: attrStr,\n    index: i,\n    tagClosed: tagClosed\n  };\n}\n\n/**\n * Select all the attributes whether valid or invalid.\n */\nconst validAttrStrRegxp = new RegExp('(\\\\s*)([^\\\\s=]+)(\\\\s*=)?(\\\\s*([\\'\"])(([\\\\s\\\\S])*?)\\\\5)?', 'g');\n\n//attr, =\"sd\", a=\"amit's\", a=\"sd\"b=\"saf\", ab  cd=\"\"\n\nfunction validateAttributeString(attrStr, options) {\n  //console.log(\"start:\"+attrStr+\":end\");\n\n  //if(attrStr.trim().length === 0) return true; //empty string\n\n  const matches = util.getAllMatches(attrStr, validAttrStrRegxp);\n  const attrNames = {};\n\n  for (let i = 0; i < matches.length; i++) {\n    if (matches[i][1].length === 0) {\n      //nospace before attribute name: a=\"sd\"b=\"saf\"\n      return getErrorObject('InvalidAttr', \"Attribute '\"+matches[i][2]+\"' has no space in starting.\", getPositionFromMatch(matches[i]))\n    } else if (matches[i][3] !== undefined && matches[i][4] === undefined) {\n      return getErrorObject('InvalidAttr', \"Attribute '\"+matches[i][2]+\"' is without value.\", getPositionFromMatch(matches[i]));\n    } else if (matches[i][3] === undefined && !options.allowBooleanAttributes) {\n      //independent attribute: ab\n      return getErrorObject('InvalidAttr', \"boolean attribute '\"+matches[i][2]+\"' is not allowed.\", getPositionFromMatch(matches[i]));\n    }\n    /* else if(matches[i][6] === undefined){//attribute without value: ab=\n                    return { err: { code:\"InvalidAttr\",msg:\"attribute \" + matches[i][2] + \" has no value assigned.\"}};\n                } */\n    const attrName = matches[i][2];\n    if (!validateAttrName(attrName)) {\n      return getErrorObject('InvalidAttr', \"Attribute '\"+attrName+\"' is an invalid name.\", getPositionFromMatch(matches[i]));\n    }\n    if (!attrNames.hasOwnProperty(attrName)) {\n      //check for duplicate attribute.\n      attrNames[attrName] = 1;\n    } else {\n      return getErrorObject('InvalidAttr', \"Attribute '\"+attrName+\"' is repeated.\", getPositionFromMatch(matches[i]));\n    }\n  }\n\n  return true;\n}\n\nfunction validateNumberAmpersand(xmlData, i) {\n  let re = /\\d/;\n  if (xmlData[i] === 'x') {\n    i++;\n    re = /[\\da-fA-F]/;\n  }\n  for (; i < xmlData.length; i++) {\n    if (xmlData[i] === ';')\n      return i;\n    if (!xmlData[i].match(re))\n      break;\n  }\n  return -1;\n}\n\nfunction validateAmpersand(xmlData, i) {\n  // https://www.w3.org/TR/xml/#dt-charref\n  i++;\n  if (xmlData[i] === ';')\n    return -1;\n  if (xmlData[i] === '#') {\n    i++;\n    return validateNumberAmpersand(xmlData, i);\n  }\n  let count = 0;\n  for (; i < xmlData.length; i++, count++) {\n    if (xmlData[i].match(/\\w/) && count < 20)\n      continue;\n    if (xmlData[i] === ';')\n      break;\n    return -1;\n  }\n  return i;\n}\n\nfunction getErrorObject(code, message, lineNumber) {\n  return {\n    err: {\n      code: code,\n      msg: message,\n      line: lineNumber.line || lineNumber,\n      col: lineNumber.col,\n    },\n  };\n}\n\nfunction validateAttrName(attrName) {\n  return util.isName(attrName);\n}\n\n// const startsWithXML = /^xml/i;\n\nfunction validateTagName(tagname) {\n  return util.isName(tagname) /* && !tagname.match(startsWithXML) */;\n}\n\n//this function returns the line number for the character at the given index\nfunction getLineNumberForPosition(xmlData, index) {\n  const lines = xmlData.substring(0, index).split(/\\r?\\n/);\n  return {\n    line: lines.length,\n\n    // column number is last line's length + 1, because column numbering starts at 1:\n    col: lines[lines.length - 1].length + 1\n  };\n}\n\n//this function returns the position of the first character of match within attrStr\nfunction getPositionFromMatch(match) {\n  return match.startIndex + match[1].length;\n}\n","\nconst defaultOptions = {\n    preserveOrder: false,\n    attributeNamePrefix: '@_',\n    attributesGroupName: false,\n    textNodeName: '#text',\n    ignoreAttributes: true,\n    removeNSPrefix: false, // remove NS from tag name or attribute name if true\n    allowBooleanAttributes: false, //a tag can have attributes without any value\n    //ignoreRootElement : false,\n    parseTagValue: true,\n    parseAttributeValue: false,\n    trimValues: true, //Trim string values of tag and attributes\n    cdataPropName: false,\n    numberParseOptions: {\n      hex: true,\n      leadingZeros: true,\n      eNotation: true\n    },\n    tagValueProcessor: function(tagName, val) {\n      return val;\n    },\n    attributeValueProcessor: function(attrName, val) {\n      return val;\n    },\n    stopNodes: [], //nested tags will not be parsed even for errors\n    alwaysCreateTextNode: false,\n    isArray: () => false,\n    commentPropName: false,\n    unpairedTags: [],\n    processEntities: true,\n    htmlEntities: false,\n    ignoreDeclaration: false,\n    ignorePiTags: false,\n    transformTagName: false,\n    transformAttributeName: false,\n    updateTag: function(tagName, jPath, attrs){\n      return tagName\n    },\n    // skipEmptyListItem: false\n};\n   \nconst buildOptions = function(options) {\n    return Object.assign({}, defaultOptions, options);\n};\n\nexports.buildOptions = buildOptions;\nexports.defaultOptions = defaultOptions;","'use strict';\n\nclass XmlNode{\n  constructor(tagname) {\n    this.tagname = tagname;\n    this.child = []; //nested tags, text, cdata, comments in order\n    this[\":@\"] = {}; //attributes map\n  }\n  add(key,val){\n    // this.child.push( {name : key, val: val, isCdata: isCdata });\n    if(key === \"__proto__\") key = \"#__proto__\";\n    this.child.push( {[key]: val });\n  }\n  addChild(node) {\n    if(node.tagname === \"__proto__\") node.tagname = \"#__proto__\";\n    if(node[\":@\"] && Object.keys(node[\":@\"]).length > 0){\n      this.child.push( { [node.tagname]: node.child, [\":@\"]: node[\":@\"] });\n    }else{\n      this.child.push( { [node.tagname]: node.child });\n    }\n  };\n};\n\n\nmodule.exports = XmlNode;","const util = require('../util');\n\n//TODO: handle comments\nfunction readDocType(xmlData, i){\n    \n    const entities = {};\n    if( xmlData[i + 3] === 'O' &&\n         xmlData[i + 4] === 'C' &&\n         xmlData[i + 5] === 'T' &&\n         xmlData[i + 6] === 'Y' &&\n         xmlData[i + 7] === 'P' &&\n         xmlData[i + 8] === 'E')\n    {    \n        i = i+9;\n        let angleBracketsCount = 1;\n        let hasBody = false, comment = false;\n        let exp = \"\";\n        for(;i<xmlData.length;i++){\n            if (xmlData[i] === '<' && !comment) { //Determine the tag type\n                if( hasBody && isEntity(xmlData, i)){\n                    i += 7; \n                    [entityName, val,i] = readEntityExp(xmlData,i+1);\n                    if(val.indexOf(\"&\") === -1) //Parameter entities are not supported\n                        entities[ validateEntityName(entityName) ] = {\n                            regx : RegExp( `&${entityName};`,\"g\"),\n                            val: val\n                        };\n                }\n                else if( hasBody && isElement(xmlData, i))  i += 8;//Not supported\n                else if( hasBody && isAttlist(xmlData, i))  i += 8;//Not supported\n                else if( hasBody && isNotation(xmlData, i)) i += 9;//Not supported\n                else if( isComment)                         comment = true;\n                else                                        throw new Error(\"Invalid DOCTYPE\");\n\n                angleBracketsCount++;\n                exp = \"\";\n            } else if (xmlData[i] === '>') { //Read tag content\n                if(comment){\n                    if( xmlData[i - 1] === \"-\" && xmlData[i - 2] === \"-\"){\n                        comment = false;\n                        angleBracketsCount--;\n                    }\n                }else{\n                    angleBracketsCount--;\n                }\n                if (angleBracketsCount === 0) {\n                  break;\n                }\n            }else if( xmlData[i] === '['){\n                hasBody = true;\n            }else{\n                exp += xmlData[i];\n            }\n        }\n        if(angleBracketsCount !== 0){\n            throw new Error(`Unclosed DOCTYPE`);\n        }\n    }else{\n        throw new Error(`Invalid Tag instead of DOCTYPE`);\n    }\n    return {entities, i};\n}\n\nfunction readEntityExp(xmlData,i){\n    //External entities are not supported\n    //    <!ENTITY ext SYSTEM \"http://normal-website.com\" >\n\n    //Parameter entities are not supported\n    //    <!ENTITY entityname \"&anotherElement;\">\n\n    //Internal entities are supported\n    //    <!ENTITY entityname \"replacement text\">\n    \n    //read EntityName\n    let entityName = \"\";\n    for (; i < xmlData.length && (xmlData[i] !== \"'\" && xmlData[i] !== '\"' ); i++) {\n        // if(xmlData[i] === \" \") continue;\n        // else \n        entityName += xmlData[i];\n    }\n    entityName = entityName.trim();\n    if(entityName.indexOf(\" \") !== -1) throw new Error(\"External entites are not supported\");\n\n    //read Entity Value\n    const startChar = xmlData[i++];\n    let val = \"\"\n    for (; i < xmlData.length && xmlData[i] !== startChar ; i++) {\n        val += xmlData[i];\n    }\n    return [entityName, val, i];\n}\n\nfunction isComment(xmlData, i){\n    if(xmlData[i+1] === '!' &&\n    xmlData[i+2] === '-' &&\n    xmlData[i+3] === '-') return true\n    return false\n}\nfunction isEntity(xmlData, i){\n    if(xmlData[i+1] === '!' &&\n    xmlData[i+2] === 'E' &&\n    xmlData[i+3] === 'N' &&\n    xmlData[i+4] === 'T' &&\n    xmlData[i+5] === 'I' &&\n    xmlData[i+6] === 'T' &&\n    xmlData[i+7] === 'Y') return true\n    return false\n}\nfunction isElement(xmlData, i){\n    if(xmlData[i+1] === '!' &&\n    xmlData[i+2] === 'E' &&\n    xmlData[i+3] === 'L' &&\n    xmlData[i+4] === 'E' &&\n    xmlData[i+5] === 'M' &&\n    xmlData[i+6] === 'E' &&\n    xmlData[i+7] === 'N' &&\n    xmlData[i+8] === 'T') return true\n    return false\n}\n\nfunction isAttlist(xmlData, i){\n    if(xmlData[i+1] === '!' &&\n    xmlData[i+2] === 'A' &&\n    xmlData[i+3] === 'T' &&\n    xmlData[i+4] === 'T' &&\n    xmlData[i+5] === 'L' &&\n    xmlData[i+6] === 'I' &&\n    xmlData[i+7] === 'S' &&\n    xmlData[i+8] === 'T') return true\n    return false\n}\nfunction isNotation(xmlData, i){\n    if(xmlData[i+1] === '!' &&\n    xmlData[i+2] === 'N' &&\n    xmlData[i+3] === 'O' &&\n    xmlData[i+4] === 'T' &&\n    xmlData[i+5] === 'A' &&\n    xmlData[i+6] === 'T' &&\n    xmlData[i+7] === 'I' &&\n    xmlData[i+8] === 'O' &&\n    xmlData[i+9] === 'N') return true\n    return false\n}\n\nfunction validateEntityName(name){\n    if (util.isName(name))\n\treturn name;\n    else\n        throw new Error(`Invalid entity name ${name}`);\n}\n\nmodule.exports = readDocType;\n","const hexRegex = /^[-+]?0x[a-fA-F0-9]+$/;\nconst numRegex = /^([\\-\\+])?(0*)(\\.[0-9]+([eE]\\-?[0-9]+)?|[0-9]+(\\.[0-9]+([eE]\\-?[0-9]+)?)?)$/;\n// const octRegex = /0x[a-z0-9]+/;\n// const binRegex = /0x[a-z0-9]+/;\n\n\n//polyfill\nif (!Number.parseInt && window.parseInt) {\n    Number.parseInt = window.parseInt;\n}\nif (!Number.parseFloat && window.parseFloat) {\n    Number.parseFloat = window.parseFloat;\n}\n\n  \nconst consider = {\n    hex :  true,\n    leadingZeros: true,\n    decimalPoint: \"\\.\",\n    eNotation: true\n    //skipLike: /regex/\n};\n\nfunction toNumber(str, options = {}){\n    // const options = Object.assign({}, consider);\n    // if(opt.leadingZeros === false){\n    //     options.leadingZeros = false;\n    // }else if(opt.hex === false){\n    //     options.hex = false;\n    // }\n\n    options = Object.assign({}, consider, options );\n    if(!str || typeof str !== \"string\" ) return str;\n    \n    let trimmedStr  = str.trim();\n    // if(trimmedStr === \"0.0\") return 0;\n    // else if(trimmedStr === \"+0.0\") return 0;\n    // else if(trimmedStr === \"-0.0\") return -0;\n\n    if(options.skipLike !== undefined && options.skipLike.test(trimmedStr)) return str;\n    else if (options.hex && hexRegex.test(trimmedStr)) {\n        return Number.parseInt(trimmedStr, 16);\n    // } else if (options.parseOct && octRegex.test(str)) {\n    //     return Number.parseInt(val, 8);\n    // }else if (options.parseBin && binRegex.test(str)) {\n    //     return Number.parseInt(val, 2);\n    }else{\n        //separate negative sign, leading zeros, and rest number\n        const match = numRegex.exec(trimmedStr);\n        if(match){\n            const sign = match[1];\n            const leadingZeros = match[2];\n            let numTrimmedByZeros = trimZeros(match[3]); //complete num without leading zeros\n            //trim ending zeros for floating number\n            \n            const eNotation = match[4] || match[6];\n            if(!options.leadingZeros && leadingZeros.length > 0 && sign && trimmedStr[2] !== \".\") return str; //-0123\n            else if(!options.leadingZeros && leadingZeros.length > 0 && !sign && trimmedStr[1] !== \".\") return str; //0123\n            else{//no leading zeros or leading zeros are allowed\n                const num = Number(trimmedStr);\n                const numStr = \"\" + num;\n                if(numStr.search(/[eE]/) !== -1){ //given number is long and parsed to eNotation\n                    if(options.eNotation) return num;\n                    else return str;\n                }else if(eNotation){ //given number has enotation\n                    if(options.eNotation) return num;\n                    else return str;\n                }else if(trimmedStr.indexOf(\".\") !== -1){ //floating number\n                    // const decimalPart = match[5].substr(1);\n                    // const intPart = trimmedStr.substr(0,trimmedStr.indexOf(\".\"));\n\n                    \n                    // const p = numStr.indexOf(\".\");\n                    // const givenIntPart = numStr.substr(0,p);\n                    // const givenDecPart = numStr.substr(p+1);\n                    if(numStr === \"0\" && (numTrimmedByZeros === \"\") ) return num; //0.0\n                    else if(numStr === numTrimmedByZeros) return num; //0.456. 0.79000\n                    else if( sign && numStr === \"-\"+numTrimmedByZeros) return num;\n                    else return str;\n                }\n                \n                if(leadingZeros){\n                    // if(numTrimmedByZeros === numStr){\n                    //     if(options.leadingZeros) return num;\n                    //     else return str;\n                    // }else return str;\n                    if(numTrimmedByZeros === numStr) return num;\n                    else if(sign+numTrimmedByZeros === numStr) return num;\n                    else return str;\n                }\n\n                if(trimmedStr === numStr) return num;\n                else if(trimmedStr === sign+numStr) return num;\n                // else{\n                //     //number with +/- sign\n                //     trimmedStr.test(/[-+][0-9]);\n\n                // }\n                return str;\n            }\n            // else if(!eNotation && trimmedStr && trimmedStr !== Number(trimmedStr) ) return str;\n            \n        }else{ //non-numeric string\n            return str;\n        }\n    }\n}\n\n/**\n * \n * @param {string} numStr without leading zeros\n * @returns \n */\nfunction trimZeros(numStr){\n    if(numStr && numStr.indexOf(\".\") !== -1){//float\n        numStr = numStr.replace(/0+$/, \"\"); //remove ending zeros\n        if(numStr === \".\")  numStr = \"0\";\n        else if(numStr[0] === \".\")  numStr = \"0\"+numStr;\n        else if(numStr[numStr.length-1] === \".\")  numStr = numStr.substr(0,numStr.length-1);\n        return numStr;\n    }\n    return numStr;\n}\nmodule.exports = toNumber\n","'use strict';\n///@ts-check\n\nconst util = require('../util');\nconst xmlNode = require('./xmlNode');\nconst readDocType = require(\"./DocTypeReader\");\nconst toNumber = require(\"strnum\");\n\nconst regx =\n  '<((!\\\\[CDATA\\\\[([\\\\s\\\\S]*?)(]]>))|((NAME:)?(NAME))([^>]*)>|((\\\\/)(NAME)\\\\s*>))([^<]*)'\n  .replace(/NAME/g, util.nameRegexp);\n\n//const tagsRegx = new RegExp(\"<(\\\\/?[\\\\w:\\\\-\\._]+)([^>]*)>(\\\\s*\"+cdataRegx+\")*([^<]+)?\",\"g\");\n//const tagsRegx = new RegExp(\"<(\\\\/?)((\\\\w*:)?([\\\\w:\\\\-\\._]+))([^>]*)>([^<]*)(\"+cdataRegx+\"([^<]*))*([^<]+)?\",\"g\");\n\nclass OrderedObjParser{\n  constructor(options){\n    this.options = options;\n    this.currentNode = null;\n    this.tagsNodeStack = [];\n    this.docTypeEntities = {};\n    this.lastEntities = {\n      \"apos\" : { regex: /&(apos|#39|#x27);/g, val : \"'\"},\n      \"gt\" : { regex: /&(gt|#62|#x3E);/g, val : \">\"},\n      \"lt\" : { regex: /&(lt|#60|#x3C);/g, val : \"<\"},\n      \"quot\" : { regex: /&(quot|#34|#x22);/g, val : \"\\\"\"},\n    };\n    this.ampEntity = { regex: /&(amp|#38|#x26);/g, val : \"&\"};\n    this.htmlEntities = {\n      \"space\": { regex: /&(nbsp|#160);/g, val: \" \" },\n      // \"lt\" : { regex: /&(lt|#60);/g, val: \"<\" },\n      // \"gt\" : { regex: /&(gt|#62);/g, val: \">\" },\n      // \"amp\" : { regex: /&(amp|#38);/g, val: \"&\" },\n      // \"quot\" : { regex: /&(quot|#34);/g, val: \"\\\"\" },\n      // \"apos\" : { regex: /&(apos|#39);/g, val: \"'\" },\n      \"cent\" : { regex: /&(cent|#162);/g, val: \"¢\" },\n      \"pound\" : { regex: /&(pound|#163);/g, val: \"£\" },\n      \"yen\" : { regex: /&(yen|#165);/g, val: \"¥\" },\n      \"euro\" : { regex: /&(euro|#8364);/g, val: \"€\" },\n      \"copyright\" : { regex: /&(copy|#169);/g, val: \"©\" },\n      \"reg\" : { regex: /&(reg|#174);/g, val: \"®\" },\n      \"inr\" : { regex: /&(inr|#8377);/g, val: \"₹\" },\n    };\n    this.addExternalEntities = addExternalEntities;\n    this.parseXml = parseXml;\n    this.parseTextData = parseTextData;\n    this.resolveNameSpace = resolveNameSpace;\n    this.buildAttributesMap = buildAttributesMap;\n    this.isItStopNode = isItStopNode;\n    this.replaceEntitiesValue = replaceEntitiesValue;\n    this.readStopNodeData = readStopNodeData;\n    this.saveTextToParentTag = saveTextToParentTag;\n    this.addChild = addChild;\n  }\n\n}\n\nfunction addExternalEntities(externalEntities){\n  const entKeys = Object.keys(externalEntities);\n  for (let i = 0; i < entKeys.length; i++) {\n    const ent = entKeys[i];\n    this.lastEntities[ent] = {\n       regex: new RegExp(\"&\"+ent+\";\",\"g\"),\n       val : externalEntities[ent]\n    }\n  }\n}\n\n/**\n * @param {string} val\n * @param {string} tagName\n * @param {string} jPath\n * @param {boolean} dontTrim\n * @param {boolean} hasAttributes\n * @param {boolean} isLeafNode\n * @param {boolean} escapeEntities\n */\nfunction parseTextData(val, tagName, jPath, dontTrim, hasAttributes, isLeafNode, escapeEntities) {\n  if (val !== undefined) {\n    if (this.options.trimValues && !dontTrim) {\n      val = val.trim();\n    }\n    if(val.length > 0){\n      if(!escapeEntities) val = this.replaceEntitiesValue(val);\n      \n      const newval = this.options.tagValueProcessor(tagName, val, jPath, hasAttributes, isLeafNode);\n      if(newval === null || newval === undefined){\n        //don't parse\n        return val;\n      }else if(typeof newval !== typeof val || newval !== val){\n        //overwrite\n        return newval;\n      }else if(this.options.trimValues){\n        return parseValue(val, this.options.parseTagValue, this.options.numberParseOptions);\n      }else{\n        const trimmedVal = val.trim();\n        if(trimmedVal === val){\n          return parseValue(val, this.options.parseTagValue, this.options.numberParseOptions);\n        }else{\n          return val;\n        }\n      }\n    }\n  }\n}\n\nfunction resolveNameSpace(tagname) {\n  if (this.options.removeNSPrefix) {\n    const tags = tagname.split(':');\n    const prefix = tagname.charAt(0) === '/' ? '/' : '';\n    if (tags[0] === 'xmlns') {\n      return '';\n    }\n    if (tags.length === 2) {\n      tagname = prefix + tags[1];\n    }\n  }\n  return tagname;\n}\n\n//TODO: change regex to capture NS\n//const attrsRegx = new RegExp(\"([\\\\w\\\\-\\\\.\\\\:]+)\\\\s*=\\\\s*(['\\\"])((.|\\n)*?)\\\\2\",\"gm\");\nconst attrsRegx = new RegExp('([^\\\\s=]+)\\\\s*(=\\\\s*([\\'\"])([\\\\s\\\\S]*?)\\\\3)?', 'gm');\n\nfunction buildAttributesMap(attrStr, jPath, tagName) {\n  if (!this.options.ignoreAttributes && typeof attrStr === 'string') {\n    // attrStr = attrStr.replace(/\\r?\\n/g, ' ');\n    //attrStr = attrStr || attrStr.trim();\n\n    const matches = util.getAllMatches(attrStr, attrsRegx);\n    const len = matches.length; //don't make it inline\n    const attrs = {};\n    for (let i = 0; i < len; i++) {\n      const attrName = this.resolveNameSpace(matches[i][1]);\n      let oldVal = matches[i][4];\n      let aName = this.options.attributeNamePrefix + attrName;\n      if (attrName.length) {\n        if (this.options.transformAttributeName) {\n          aName = this.options.transformAttributeName(aName);\n        }\n        if(aName === \"__proto__\") aName  = \"#__proto__\";\n        if (oldVal !== undefined) {\n          if (this.options.trimValues) {\n            oldVal = oldVal.trim();\n          }\n          oldVal = this.replaceEntitiesValue(oldVal);\n          const newVal = this.options.attributeValueProcessor(attrName, oldVal, jPath);\n          if(newVal === null || newVal === undefined){\n            //don't parse\n            attrs[aName] = oldVal;\n          }else if(typeof newVal !== typeof oldVal || newVal !== oldVal){\n            //overwrite\n            attrs[aName] = newVal;\n          }else{\n            //parse\n            attrs[aName] = parseValue(\n              oldVal,\n              this.options.parseAttributeValue,\n              this.options.numberParseOptions\n            );\n          }\n        } else if (this.options.allowBooleanAttributes) {\n          attrs[aName] = true;\n        }\n      }\n    }\n    if (!Object.keys(attrs).length) {\n      return;\n    }\n    if (this.options.attributesGroupName) {\n      const attrCollection = {};\n      attrCollection[this.options.attributesGroupName] = attrs;\n      return attrCollection;\n    }\n    return attrs\n  }\n}\n\nconst parseXml = function(xmlData) {\n  xmlData = xmlData.replace(/\\r\\n?/g, \"\\n\"); //TODO: remove this line\n  const xmlObj = new xmlNode('!xml');\n  let currentNode = xmlObj;\n  let textData = \"\";\n  let jPath = \"\";\n  for(let i=0; i< xmlData.length; i++){//for each char in XML data\n    const ch = xmlData[i];\n    if(ch === '<'){\n      // const nextIndex = i+1;\n      // const _2ndChar = xmlData[nextIndex];\n      if( xmlData[i+1] === '/') {//Closing Tag\n        const closeIndex = findClosingIndex(xmlData, \">\", i, \"Closing Tag is not closed.\")\n        let tagName = xmlData.substring(i+2,closeIndex).trim();\n\n        if(this.options.removeNSPrefix){\n          const colonIndex = tagName.indexOf(\":\");\n          if(colonIndex !== -1){\n            tagName = tagName.substr(colonIndex+1);\n          }\n        }\n\n        if(this.options.transformTagName) {\n          tagName = this.options.transformTagName(tagName);\n        }\n\n        if(currentNode){\n          textData = this.saveTextToParentTag(textData, currentNode, jPath);\n        }\n\n        //check if last tag of nested tag was unpaired tag\n        const lastTagName = jPath.substring(jPath.lastIndexOf(\".\")+1);\n        if(tagName && this.options.unpairedTags.indexOf(tagName) !== -1 ){\n          throw new Error(`Unpaired tag can not be used as closing tag: </${tagName}>`);\n        }\n        let propIndex = 0\n        if(lastTagName && this.options.unpairedTags.indexOf(lastTagName) !== -1 ){\n          propIndex = jPath.lastIndexOf('.', jPath.lastIndexOf('.')-1)\n          this.tagsNodeStack.pop();\n        }else{\n          propIndex = jPath.lastIndexOf(\".\");\n        }\n        jPath = jPath.substring(0, propIndex);\n\n        currentNode = this.tagsNodeStack.pop();//avoid recursion, set the parent tag scope\n        textData = \"\";\n        i = closeIndex;\n      } else if( xmlData[i+1] === '?') {\n\n        let tagData = readTagExp(xmlData,i, false, \"?>\");\n        if(!tagData) throw new Error(\"Pi Tag is not closed.\");\n\n        textData = this.saveTextToParentTag(textData, currentNode, jPath);\n        if( (this.options.ignoreDeclaration && tagData.tagName === \"?xml\") || this.options.ignorePiTags){\n\n        }else{\n  \n          const childNode = new xmlNode(tagData.tagName);\n          childNode.add(this.options.textNodeName, \"\");\n          \n          if(tagData.tagName !== tagData.tagExp && tagData.attrExpPresent){\n            childNode[\":@\"] = this.buildAttributesMap(tagData.tagExp, jPath, tagData.tagName);\n          }\n          this.addChild(currentNode, childNode, jPath)\n\n        }\n\n\n        i = tagData.closeIndex + 1;\n      } else if(xmlData.substr(i + 1, 3) === '!--') {\n        const endIndex = findClosingIndex(xmlData, \"-->\", i+4, \"Comment is not closed.\")\n        if(this.options.commentPropName){\n          const comment = xmlData.substring(i + 4, endIndex - 2);\n\n          textData = this.saveTextToParentTag(textData, currentNode, jPath);\n\n          currentNode.add(this.options.commentPropName, [ { [this.options.textNodeName] : comment } ]);\n        }\n        i = endIndex;\n      } else if( xmlData.substr(i + 1, 2) === '!D') {\n        const result = readDocType(xmlData, i);\n        this.docTypeEntities = result.entities;\n        i = result.i;\n      }else if(xmlData.substr(i + 1, 2) === '![') {\n        const closeIndex = findClosingIndex(xmlData, \"]]>\", i, \"CDATA is not closed.\") - 2;\n        const tagExp = xmlData.substring(i + 9,closeIndex);\n\n        textData = this.saveTextToParentTag(textData, currentNode, jPath);\n\n        //cdata should be set even if it is 0 length string\n        if(this.options.cdataPropName){\n          // let val = this.parseTextData(tagExp, this.options.cdataPropName, jPath + \".\" + this.options.cdataPropName, true, false, true);\n          // if(!val) val = \"\";\n          currentNode.add(this.options.cdataPropName, [ { [this.options.textNodeName] : tagExp } ]);\n        }else{\n          let val = this.parseTextData(tagExp, currentNode.tagname, jPath, true, false, true);\n          if(val == undefined) val = \"\";\n          currentNode.add(this.options.textNodeName, val);\n        }\n        \n        i = closeIndex + 2;\n      }else {//Opening tag\n        let result = readTagExp(xmlData,i, this.options.removeNSPrefix);\n        let tagName= result.tagName;\n        let tagExp = result.tagExp;\n        let attrExpPresent = result.attrExpPresent;\n        let closeIndex = result.closeIndex;\n\n        if (this.options.transformTagName) {\n          tagName = this.options.transformTagName(tagName);\n        }\n        \n        //save text as child node\n        if (currentNode && textData) {\n          if(currentNode.tagname !== '!xml'){\n            //when nested tag is found\n            textData = this.saveTextToParentTag(textData, currentNode, jPath, false);\n          }\n        }\n\n        //check if last tag was unpaired tag\n        const lastTag = currentNode;\n        if(lastTag && this.options.unpairedTags.indexOf(lastTag.tagname) !== -1 ){\n          currentNode = this.tagsNodeStack.pop();\n          jPath = jPath.substring(0, jPath.lastIndexOf(\".\"));\n        }\n        if(tagName !== xmlObj.tagname){\n          jPath += jPath ? \".\" + tagName : tagName;\n        }\n        if (this.isItStopNode(this.options.stopNodes, jPath, tagName)) { //TODO: namespace\n          let tagContent = \"\";\n          //self-closing tag\n          if(tagExp.length > 0 && tagExp.lastIndexOf(\"/\") === tagExp.length - 1){\n            i = result.closeIndex;\n          }\n          //unpaired tag\n          else if(this.options.unpairedTags.indexOf(tagName) !== -1){\n            i = result.closeIndex;\n          }\n          //normal tag\n          else{\n            //read until closing tag is found\n            const result = this.readStopNodeData(xmlData, tagName, closeIndex + 1);\n            if(!result) throw new Error(`Unexpected end of ${tagName}`);\n            i = result.i;\n            tagContent = result.tagContent;\n          }\n\n          const childNode = new xmlNode(tagName);\n          if(tagName !== tagExp && attrExpPresent){\n            childNode[\":@\"] = this.buildAttributesMap(tagExp, jPath, tagName);\n          }\n          if(tagContent) {\n            tagContent = this.parseTextData(tagContent, tagName, jPath, true, attrExpPresent, true, true);\n          }\n          \n          jPath = jPath.substr(0, jPath.lastIndexOf(\".\"));\n          childNode.add(this.options.textNodeName, tagContent);\n          \n          this.addChild(currentNode, childNode, jPath)\n        }else{\n  //selfClosing tag\n          if(tagExp.length > 0 && tagExp.lastIndexOf(\"/\") === tagExp.length - 1){\n            if(tagName[tagName.length - 1] === \"/\"){ //remove trailing '/'\n              tagName = tagName.substr(0, tagName.length - 1);\n              tagExp = tagName;\n            }else{\n              tagExp = tagExp.substr(0, tagExp.length - 1);\n            }\n            \n            if(this.options.transformTagName) {\n              tagName = this.options.transformTagName(tagName);\n            }\n\n            const childNode = new xmlNode(tagName);\n            if(tagName !== tagExp && attrExpPresent){\n              childNode[\":@\"] = this.buildAttributesMap(tagExp, jPath, tagName);\n            }\n            this.addChild(currentNode, childNode, jPath)\n            jPath = jPath.substr(0, jPath.lastIndexOf(\".\"));\n          }\n    //opening tag\n          else{\n            const childNode = new xmlNode( tagName);\n            this.tagsNodeStack.push(currentNode);\n            \n            if(tagName !== tagExp && attrExpPresent){\n              childNode[\":@\"] = this.buildAttributesMap(tagExp, jPath, tagName);\n            }\n            this.addChild(currentNode, childNode, jPath)\n            currentNode = childNode;\n          }\n          textData = \"\";\n          i = closeIndex;\n        }\n      }\n    }else{\n      textData += xmlData[i];\n    }\n  }\n  return xmlObj.child;\n}\n\nfunction addChild(currentNode, childNode, jPath){\n  const result = this.options.updateTag(childNode.tagname, jPath, childNode[\":@\"])\n  if(result === false){\n  }else if(typeof result === \"string\"){\n    childNode.tagname = result\n    currentNode.addChild(childNode);\n  }else{\n    currentNode.addChild(childNode);\n  }\n}\n\nconst replaceEntitiesValue = function(val){\n\n  if(this.options.processEntities){\n    for(let entityName in this.docTypeEntities){\n      const entity = this.docTypeEntities[entityName];\n      val = val.replace( entity.regx, entity.val);\n    }\n    for(let entityName in this.lastEntities){\n      const entity = this.lastEntities[entityName];\n      val = val.replace( entity.regex, entity.val);\n    }\n    if(this.options.htmlEntities){\n      for(let entityName in this.htmlEntities){\n        const entity = this.htmlEntities[entityName];\n        val = val.replace( entity.regex, entity.val);\n      }\n    }\n    val = val.replace( this.ampEntity.regex, this.ampEntity.val);\n  }\n  return val;\n}\nfunction saveTextToParentTag(textData, currentNode, jPath, isLeafNode) {\n  if (textData) { //store previously collected data as textNode\n    if(isLeafNode === undefined) isLeafNode = Object.keys(currentNode.child).length === 0\n    \n    textData = this.parseTextData(textData,\n      currentNode.tagname,\n      jPath,\n      false,\n      currentNode[\":@\"] ? Object.keys(currentNode[\":@\"]).length !== 0 : false,\n      isLeafNode);\n\n    if (textData !== undefined && textData !== \"\")\n      currentNode.add(this.options.textNodeName, textData);\n    textData = \"\";\n  }\n  return textData;\n}\n\n//TODO: use jPath to simplify the logic\n/**\n * \n * @param {string[]} stopNodes \n * @param {string} jPath\n * @param {string} currentTagName \n */\nfunction isItStopNode(stopNodes, jPath, currentTagName){\n  const allNodesExp = \"*.\" + currentTagName;\n  for (const stopNodePath in stopNodes) {\n    const stopNodeExp = stopNodes[stopNodePath];\n    if( allNodesExp === stopNodeExp || jPath === stopNodeExp  ) return true;\n  }\n  return false;\n}\n\n/**\n * Returns the tag Expression and where it is ending handling single-double quotes situation\n * @param {string} xmlData \n * @param {number} i starting index\n * @returns \n */\nfunction tagExpWithClosingIndex(xmlData, i, closingChar = \">\"){\n  let attrBoundary;\n  let tagExp = \"\";\n  for (let index = i; index < xmlData.length; index++) {\n    let ch = xmlData[index];\n    if (attrBoundary) {\n        if (ch === attrBoundary) attrBoundary = \"\";//reset\n    } else if (ch === '\"' || ch === \"'\") {\n        attrBoundary = ch;\n    } else if (ch === closingChar[0]) {\n      if(closingChar[1]){\n        if(xmlData[index + 1] === closingChar[1]){\n          return {\n            data: tagExp,\n            index: index\n          }\n        }\n      }else{\n        return {\n          data: tagExp,\n          index: index\n        }\n      }\n    } else if (ch === '\\t') {\n      ch = \" \"\n    }\n    tagExp += ch;\n  }\n}\n\nfunction findClosingIndex(xmlData, str, i, errMsg){\n  const closingIndex = xmlData.indexOf(str, i);\n  if(closingIndex === -1){\n    throw new Error(errMsg)\n  }else{\n    return closingIndex + str.length - 1;\n  }\n}\n\nfunction readTagExp(xmlData,i, removeNSPrefix, closingChar = \">\"){\n  const result = tagExpWithClosingIndex(xmlData, i+1, closingChar);\n  if(!result) return;\n  let tagExp = result.data;\n  const closeIndex = result.index;\n  const separatorIndex = tagExp.search(/\\s/);\n  let tagName = tagExp;\n  let attrExpPresent = true;\n  if(separatorIndex !== -1){//separate tag name and attributes expression\n    tagName = tagExp.substr(0, separatorIndex).replace(/\\s\\s*$/, '');\n    tagExp = tagExp.substr(separatorIndex + 1);\n  }\n\n  if(removeNSPrefix){\n    const colonIndex = tagName.indexOf(\":\");\n    if(colonIndex !== -1){\n      tagName = tagName.substr(colonIndex+1);\n      attrExpPresent = tagName !== result.data.substr(colonIndex + 1);\n    }\n  }\n\n  return {\n    tagName: tagName,\n    tagExp: tagExp,\n    closeIndex: closeIndex,\n    attrExpPresent: attrExpPresent,\n  }\n}\n/**\n * find paired tag for a stop node\n * @param {string} xmlData \n * @param {string} tagName \n * @param {number} i \n */\nfunction readStopNodeData(xmlData, tagName, i){\n  const startIndex = i;\n  // Starting at 1 since we already have an open tag\n  let openTagCount = 1;\n\n  for (; i < xmlData.length; i++) {\n    if( xmlData[i] === \"<\"){ \n      if (xmlData[i+1] === \"/\") {//close tag\n          const closeIndex = findClosingIndex(xmlData, \">\", i, `${tagName} is not closed`);\n          let closeTagName = xmlData.substring(i+2,closeIndex).trim();\n          if(closeTagName === tagName){\n            openTagCount--;\n            if (openTagCount === 0) {\n              return {\n                tagContent: xmlData.substring(startIndex, i),\n                i : closeIndex\n              }\n            }\n          }\n          i=closeIndex;\n        } else if(xmlData[i+1] === '?') { \n          const closeIndex = findClosingIndex(xmlData, \"?>\", i+1, \"StopNode is not closed.\")\n          i=closeIndex;\n        } else if(xmlData.substr(i + 1, 3) === '!--') { \n          const closeIndex = findClosingIndex(xmlData, \"-->\", i+3, \"StopNode is not closed.\")\n          i=closeIndex;\n        } else if(xmlData.substr(i + 1, 2) === '![') { \n          const closeIndex = findClosingIndex(xmlData, \"]]>\", i, \"StopNode is not closed.\") - 2;\n          i=closeIndex;\n        } else {\n          const tagData = readTagExp(xmlData, i, '>')\n\n          if (tagData) {\n            const openTagName = tagData && tagData.tagName;\n            if (openTagName === tagName && tagData.tagExp[tagData.tagExp.length-1] !== \"/\") {\n              openTagCount++;\n            }\n            i=tagData.closeIndex;\n          }\n        }\n      }\n  }//end for loop\n}\n\nfunction parseValue(val, shouldParse, options) {\n  if (shouldParse && typeof val === 'string') {\n    //console.log(options)\n    const newval = val.trim();\n    if(newval === 'true' ) return true;\n    else if(newval === 'false' ) return false;\n    else return toNumber(val, options);\n  } else {\n    if (util.isExist(val)) {\n      return val;\n    } else {\n      return '';\n    }\n  }\n}\n\n\nmodule.exports = OrderedObjParser;\n","'use strict';\n\n/**\n * \n * @param {array} node \n * @param {any} options \n * @returns \n */\nfunction prettify(node, options){\n  return compress( node, options);\n}\n\n/**\n * \n * @param {array} arr \n * @param {object} options \n * @param {string} jPath \n * @returns object\n */\nfunction compress(arr, options, jPath){\n  let text;\n  const compressedObj = {};\n  for (let i = 0; i < arr.length; i++) {\n    const tagObj = arr[i];\n    const property = propName(tagObj);\n    let newJpath = \"\";\n    if(jPath === undefined) newJpath = property;\n    else newJpath = jPath + \".\" + property;\n\n    if(property === options.textNodeName){\n      if(text === undefined) text = tagObj[property];\n      else text += \"\" + tagObj[property];\n    }else if(property === undefined){\n      continue;\n    }else if(tagObj[property]){\n      \n      let val = compress(tagObj[property], options, newJpath);\n      const isLeaf = isLeafTag(val, options);\n\n      if(tagObj[\":@\"]){\n        assignAttributes( val, tagObj[\":@\"], newJpath, options);\n      }else if(Object.keys(val).length === 1 && val[options.textNodeName] !== undefined && !options.alwaysCreateTextNode){\n        val = val[options.textNodeName];\n      }else if(Object.keys(val).length === 0){\n        if(options.alwaysCreateTextNode) val[options.textNodeName] = \"\";\n        else val = \"\";\n      }\n\n      if(compressedObj[property] !== undefined && compressedObj.hasOwnProperty(property)) {\n        if(!Array.isArray(compressedObj[property])) {\n            compressedObj[property] = [ compressedObj[property] ];\n        }\n        compressedObj[property].push(val);\n      }else{\n        //TODO: if a node is not an array, then check if it should be an array\n        //also determine if it is a leaf node\n        if (options.isArray(property, newJpath, isLeaf )) {\n          compressedObj[property] = [val];\n        }else{\n          compressedObj[property] = val;\n        }\n      }\n    }\n    \n  }\n  // if(text && text.length > 0) compressedObj[options.textNodeName] = text;\n  if(typeof text === \"string\"){\n    if(text.length > 0) compressedObj[options.textNodeName] = text;\n  }else if(text !== undefined) compressedObj[options.textNodeName] = text;\n  return compressedObj;\n}\n\nfunction propName(obj){\n  const keys = Object.keys(obj);\n  for (let i = 0; i < keys.length; i++) {\n    const key = keys[i];\n    if(key !== \":@\") return key;\n  }\n}\n\nfunction assignAttributes(obj, attrMap, jpath, options){\n  if (attrMap) {\n    const keys = Object.keys(attrMap);\n    const len = keys.length; //don't make it inline\n    for (let i = 0; i < len; i++) {\n      const atrrName = keys[i];\n      if (options.isArray(atrrName, jpath + \".\" + atrrName, true, true)) {\n        obj[atrrName] = [ attrMap[atrrName] ];\n      } else {\n        obj[atrrName] = attrMap[atrrName];\n      }\n    }\n  }\n}\n\nfunction isLeafTag(obj, options){\n  const { textNodeName } = options;\n  const propCount = Object.keys(obj).length;\n  \n  if (propCount === 0) {\n    return true;\n  }\n\n  if (\n    propCount === 1 &&\n    (obj[textNodeName] || typeof obj[textNodeName] === \"boolean\" || obj[textNodeName] === 0)\n  ) {\n    return true;\n  }\n\n  return false;\n}\nexports.prettify = prettify;\n","const { buildOptions} = require(\"./OptionsBuilder\");\nconst OrderedObjParser = require(\"./OrderedObjParser\");\nconst { prettify} = require(\"./node2json\");\nconst validator = require('../validator');\n\nclass XMLParser{\n    \n    constructor(options){\n        this.externalEntities = {};\n        this.options = buildOptions(options);\n        \n    }\n    /**\n     * Parse XML dats to JS object \n     * @param {string|Buffer} xmlData \n     * @param {boolean|Object} validationOption \n     */\n    parse(xmlData,validationOption){\n        if(typeof xmlData === \"string\"){\n        }else if( xmlData.toString){\n            xmlData = xmlData.toString();\n        }else{\n            throw new Error(\"XML data is accepted in String or Bytes[] form.\")\n        }\n        if( validationOption){\n            if(validationOption === true) validationOption = {}; //validate with default options\n            \n            const result = validator.validate(xmlData, validationOption);\n            if (result !== true) {\n              throw Error( `${result.err.msg}:${result.err.line}:${result.err.col}` )\n            }\n          }\n        const orderedObjParser = new OrderedObjParser(this.options);\n        orderedObjParser.addExternalEntities(this.externalEntities);\n        const orderedResult = orderedObjParser.parseXml(xmlData);\n        if(this.options.preserveOrder || orderedResult === undefined) return orderedResult;\n        else return prettify(orderedResult, this.options);\n    }\n\n    /**\n     * Add Entity which is not by default supported by this library\n     * @param {string} key \n     * @param {string} value \n     */\n    addEntity(key, value){\n        if(value.indexOf(\"&\") !== -1){\n            throw new Error(\"Entity value can't have '&'\")\n        }else if(key.indexOf(\"&\") !== -1 || key.indexOf(\";\") !== -1){\n            throw new Error(\"An entity must be set without '&' and ';'. Eg. use '#xD' for '&#xD;'\")\n        }else if(value === \"&\"){\n            throw new Error(\"An entity with value '&' is not permitted\");\n        }else{\n            this.externalEntities[key] = value;\n        }\n    }\n}\n\nmodule.exports = XMLParser;","const EOL = \"\\n\";\n\n/**\n * \n * @param {array} jArray \n * @param {any} options \n * @returns \n */\nfunction toXml(jArray, options) {\n    let indentation = \"\";\n    if (options.format && options.indentBy.length > 0) {\n        indentation = EOL;\n    }\n    return arrToStr(jArray, options, \"\", indentation);\n}\n\nfunction arrToStr(arr, options, jPath, indentation) {\n    let xmlStr = \"\";\n    let isPreviousElementTag = false;\n\n    for (let i = 0; i < arr.length; i++) {\n        const tagObj = arr[i];\n        const tagName = propName(tagObj);\n        let newJPath = \"\";\n        if (jPath.length === 0) newJPath = tagName\n        else newJPath = `${jPath}.${tagName}`;\n\n        if (tagName === options.textNodeName) {\n            let tagText = tagObj[tagName];\n            if (!isStopNode(newJPath, options)) {\n                tagText = options.tagValueProcessor(tagName, tagText);\n                tagText = replaceEntitiesValue(tagText, options);\n            }\n            if (isPreviousElementTag) {\n                xmlStr += indentation;\n            }\n            xmlStr += tagText;\n            isPreviousElementTag = false;\n            continue;\n        } else if (tagName === options.cdataPropName) {\n            if (isPreviousElementTag) {\n                xmlStr += indentation;\n            }\n            xmlStr += `<![CDATA[${tagObj[tagName][0][options.textNodeName]}]]>`;\n            isPreviousElementTag = false;\n            continue;\n        } else if (tagName === options.commentPropName) {\n            xmlStr += indentation + `<!--${tagObj[tagName][0][options.textNodeName]}-->`;\n            isPreviousElementTag = true;\n            continue;\n        } else if (tagName[0] === \"?\") {\n            const attStr = attr_to_str(tagObj[\":@\"], options);\n            const tempInd = tagName === \"?xml\" ? \"\" : indentation;\n            let piTextNodeName = tagObj[tagName][0][options.textNodeName];\n            piTextNodeName = piTextNodeName.length !== 0 ? \" \" + piTextNodeName : \"\"; //remove extra spacing\n            xmlStr += tempInd + `<${tagName}${piTextNodeName}${attStr}?>`;\n            isPreviousElementTag = true;\n            continue;\n        }\n        let newIdentation = indentation;\n        if (newIdentation !== \"\") {\n            newIdentation += options.indentBy;\n        }\n        const attStr = attr_to_str(tagObj[\":@\"], options);\n        const tagStart = indentation + `<${tagName}${attStr}`;\n        const tagValue = arrToStr(tagObj[tagName], options, newJPath, newIdentation);\n        if (options.unpairedTags.indexOf(tagName) !== -1) {\n            if (options.suppressUnpairedNode) xmlStr += tagStart + \">\";\n            else xmlStr += tagStart + \"/>\";\n        } else if ((!tagValue || tagValue.length === 0) && options.suppressEmptyNode) {\n            xmlStr += tagStart + \"/>\";\n        } else if (tagValue && tagValue.endsWith(\">\")) {\n            xmlStr += tagStart + `>${tagValue}${indentation}</${tagName}>`;\n        } else {\n            xmlStr += tagStart + \">\";\n            if (tagValue && indentation !== \"\" && (tagValue.includes(\"/>\") || tagValue.includes(\"</\"))) {\n                xmlStr += indentation + options.indentBy + tagValue + indentation;\n            } else {\n                xmlStr += tagValue;\n            }\n            xmlStr += `</${tagName}>`;\n        }\n        isPreviousElementTag = true;\n    }\n\n    return xmlStr;\n}\n\nfunction propName(obj) {\n    const keys = Object.keys(obj);\n    for (let i = 0; i < keys.length; i++) {\n        const key = keys[i];\n        if (key !== \":@\") return key;\n    }\n}\n\nfunction attr_to_str(attrMap, options) {\n    let attrStr = \"\";\n    if (attrMap && !options.ignoreAttributes) {\n        for (let attr in attrMap) {\n            let attrVal = options.attributeValueProcessor(attr, attrMap[attr]);\n            attrVal = replaceEntitiesValue(attrVal, options);\n            if (attrVal === true && options.suppressBooleanAttributes) {\n                attrStr += ` ${attr.substr(options.attributeNamePrefix.length)}`;\n            } else {\n                attrStr += ` ${attr.substr(options.attributeNamePrefix.length)}=\"${attrVal}\"`;\n            }\n        }\n    }\n    return attrStr;\n}\n\nfunction isStopNode(jPath, options) {\n    jPath = jPath.substr(0, jPath.length - options.textNodeName.length - 1);\n    let tagName = jPath.substr(jPath.lastIndexOf(\".\") + 1);\n    for (let index in options.stopNodes) {\n        if (options.stopNodes[index] === jPath || options.stopNodes[index] === \"*.\" + tagName) return true;\n    }\n    return false;\n}\n\nfunction replaceEntitiesValue(textValue, options) {\n    if (textValue && textValue.length > 0 && options.processEntities) {\n        for (let i = 0; i < options.entities.length; i++) {\n            const entity = options.entities[i];\n            textValue = textValue.replace(entity.regex, entity.val);\n        }\n    }\n    return textValue;\n}\nmodule.exports = toXml;\n","'use strict';\n//parse Empty Node as self closing node\nconst buildFromOrderedJs = require('./orderedJs2Xml');\n\nconst defaultOptions = {\n  attributeNamePrefix: '@_',\n  attributesGroupName: false,\n  textNodeName: '#text',\n  ignoreAttributes: true,\n  cdataPropName: false,\n  format: false,\n  indentBy: '  ',\n  suppressEmptyNode: false,\n  suppressUnpairedNode: true,\n  suppressBooleanAttributes: true,\n  tagValueProcessor: function(key, a) {\n    return a;\n  },\n  attributeValueProcessor: function(attrName, a) {\n    return a;\n  },\n  preserveOrder: false,\n  commentPropName: false,\n  unpairedTags: [],\n  entities: [\n    { regex: new RegExp(\"&\", \"g\"), val: \"&amp;\" },//it must be on top\n    { regex: new RegExp(\">\", \"g\"), val: \"&gt;\" },\n    { regex: new RegExp(\"<\", \"g\"), val: \"&lt;\" },\n    { regex: new RegExp(\"\\'\", \"g\"), val: \"&apos;\" },\n    { regex: new RegExp(\"\\\"\", \"g\"), val: \"&quot;\" }\n  ],\n  processEntities: true,\n  stopNodes: [],\n  // transformTagName: false,\n  // transformAttributeName: false,\n  oneListGroup: false\n};\n\nfunction Builder(options) {\n  this.options = Object.assign({}, defaultOptions, options);\n  if (this.options.ignoreAttributes || this.options.attributesGroupName) {\n    this.isAttribute = function(/*a*/) {\n      return false;\n    };\n  } else {\n    this.attrPrefixLen = this.options.attributeNamePrefix.length;\n    this.isAttribute = isAttribute;\n  }\n\n  this.processTextOrObjNode = processTextOrObjNode\n\n  if (this.options.format) {\n    this.indentate = indentate;\n    this.tagEndChar = '>\\n';\n    this.newLine = '\\n';\n  } else {\n    this.indentate = function() {\n      return '';\n    };\n    this.tagEndChar = '>';\n    this.newLine = '';\n  }\n}\n\nBuilder.prototype.build = function(jObj) {\n  if(this.options.preserveOrder){\n    return buildFromOrderedJs(jObj, this.options);\n  }else {\n    if(Array.isArray(jObj) && this.options.arrayNodeName && this.options.arrayNodeName.length > 1){\n      jObj = {\n        [this.options.arrayNodeName] : jObj\n      }\n    }\n    return this.j2x(jObj, 0).val;\n  }\n};\n\nBuilder.prototype.j2x = function(jObj, level) {\n  let attrStr = '';\n  let val = '';\n  for (let key in jObj) {\n    if (typeof jObj[key] === 'undefined') {\n      // supress undefined node\n    } else if (jObj[key] === null) {\n      if(key[0] === \"?\") val += this.indentate(level) + '<' + key + '?' + this.tagEndChar;\n      else val += this.indentate(level) + '<' + key + '/' + this.tagEndChar;\n      // val += this.indentate(level) + '<' + key + '/' + this.tagEndChar;\n    } else if (jObj[key] instanceof Date) {\n      val += this.buildTextValNode(jObj[key], key, '', level);\n    } else if (typeof jObj[key] !== 'object') {\n      //premitive type\n      const attr = this.isAttribute(key);\n      if (attr) {\n        attrStr += this.buildAttrPairStr(attr, '' + jObj[key]);\n      }else {\n        //tag value\n        if (key === this.options.textNodeName) {\n          let newval = this.options.tagValueProcessor(key, '' + jObj[key]);\n          val += this.replaceEntitiesValue(newval);\n        } else {\n          val += this.buildTextValNode(jObj[key], key, '', level);\n        }\n      }\n    } else if (Array.isArray(jObj[key])) {\n      //repeated nodes\n      const arrLen = jObj[key].length;\n      let listTagVal = \"\";\n      for (let j = 0; j < arrLen; j++) {\n        const item = jObj[key][j];\n        if (typeof item === 'undefined') {\n          // supress undefined node\n        } else if (item === null) {\n          if(key[0] === \"?\") val += this.indentate(level) + '<' + key + '?' + this.tagEndChar;\n          else val += this.indentate(level) + '<' + key + '/' + this.tagEndChar;\n          // val += this.indentate(level) + '<' + key + '/' + this.tagEndChar;\n        } else if (typeof item === 'object') {\n          if(this.options.oneListGroup ){\n            listTagVal += this.j2x(item, level + 1).val;\n          }else{\n            listTagVal += this.processTextOrObjNode(item, key, level)\n          }\n        } else {\n          listTagVal += this.buildTextValNode(item, key, '', level);\n        }\n      }\n      if(this.options.oneListGroup){\n        listTagVal = this.buildObjectNode(listTagVal, key, '', level);\n      }\n      val += listTagVal;\n    } else {\n      //nested node\n      if (this.options.attributesGroupName && key === this.options.attributesGroupName) {\n        const Ks = Object.keys(jObj[key]);\n        const L = Ks.length;\n        for (let j = 0; j < L; j++) {\n          attrStr += this.buildAttrPairStr(Ks[j], '' + jObj[key][Ks[j]]);\n        }\n      } else {\n        val += this.processTextOrObjNode(jObj[key], key, level)\n      }\n    }\n  }\n  return {attrStr: attrStr, val: val};\n};\n\nBuilder.prototype.buildAttrPairStr = function(attrName, val){\n  val = this.options.attributeValueProcessor(attrName, '' + val);\n  val = this.replaceEntitiesValue(val);\n  if (this.options.suppressBooleanAttributes && val === \"true\") {\n    return ' ' + attrName;\n  } else return ' ' + attrName + '=\"' + val + '\"';\n}\n\nfunction processTextOrObjNode (object, key, level) {\n  const result = this.j2x(object, level + 1);\n  if (object[this.options.textNodeName] !== undefined && Object.keys(object).length === 1) {\n    return this.buildTextValNode(object[this.options.textNodeName], key, result.attrStr, level);\n  } else {\n    return this.buildObjectNode(result.val, key, result.attrStr, level);\n  }\n}\n\nBuilder.prototype.buildObjectNode = function(val, key, attrStr, level) {\n  if(val === \"\"){\n    if(key[0] === \"?\") return  this.indentate(level) + '<' + key + attrStr+ '?' + this.tagEndChar;\n    else {\n      return this.indentate(level) + '<' + key + attrStr + this.closeTag(key) + this.tagEndChar;\n    }\n  }else{\n\n    let tagEndExp = '</' + key + this.tagEndChar;\n    let piClosingChar = \"\";\n    \n    if(key[0] === \"?\") {\n      piClosingChar = \"?\";\n      tagEndExp = \"\";\n    }\n  \n    if (attrStr && val.indexOf('<') === -1) {\n      return ( this.indentate(level) + '<' +  key + attrStr + piClosingChar + '>' + val + tagEndExp );\n    } else if (this.options.commentPropName !== false && key === this.options.commentPropName && piClosingChar.length === 0) {\n      return this.indentate(level) + `<!--${val}-->` + this.newLine;\n    }else {\n      return (\n        this.indentate(level) + '<' + key + attrStr + piClosingChar + this.tagEndChar +\n        val +\n        this.indentate(level) + tagEndExp    );\n    }\n  }\n}\n\nBuilder.prototype.closeTag = function(key){\n  let closeTag = \"\";\n  if(this.options.unpairedTags.indexOf(key) !== -1){ //unpaired\n    if(!this.options.suppressUnpairedNode) closeTag = \"/\"\n  }else if(this.options.suppressEmptyNode){ //empty\n    closeTag = \"/\";\n  }else{\n    closeTag = `></${key}`\n  }\n  return closeTag;\n}\n\nfunction buildEmptyObjNode(val, key, attrStr, level) {\n  if (val !== '') {\n    return this.buildObjectNode(val, key, attrStr, level);\n  } else {\n    if(key[0] === \"?\") return  this.indentate(level) + '<' + key + attrStr+ '?' + this.tagEndChar;\n    else {\n      return  this.indentate(level) + '<' + key + attrStr + '/' + this.tagEndChar;\n      // return this.buildTagStr(level,key, attrStr);\n    }\n  }\n}\n\nBuilder.prototype.buildTextValNode = function(val, key, attrStr, level) {\n  if (this.options.cdataPropName !== false && key === this.options.cdataPropName) {\n    return this.indentate(level) + `<![CDATA[${val}]]>` +  this.newLine;\n  }else if (this.options.commentPropName !== false && key === this.options.commentPropName) {\n    return this.indentate(level) + `<!--${val}-->` +  this.newLine;\n  }else if(key[0] === \"?\") {//PI tag\n    return  this.indentate(level) + '<' + key + attrStr+ '?' + this.tagEndChar; \n  }else{\n    let textValue = this.options.tagValueProcessor(key, val);\n    textValue = this.replaceEntitiesValue(textValue);\n  \n    if( textValue === ''){\n      return this.indentate(level) + '<' + key + attrStr + this.closeTag(key) + this.tagEndChar;\n    }else{\n      return this.indentate(level) + '<' + key + attrStr + '>' +\n         textValue +\n        '</' + key + this.tagEndChar;\n    }\n  }\n}\n\nBuilder.prototype.replaceEntitiesValue = function(textValue){\n  if(textValue && textValue.length > 0 && this.options.processEntities){\n    for (let i=0; i<this.options.entities.length; i++) {\n      const entity = this.options.entities[i];\n      textValue = textValue.replace(entity.regex, entity.val);\n    }\n  }\n  return textValue;\n}\n\nfunction indentate(level) {\n  return this.options.indentBy.repeat(level);\n}\n\nfunction isAttribute(name /*, options*/) {\n  if (name.startsWith(this.options.attributeNamePrefix)) {\n    return name.substr(this.attrPrefixLen);\n  } else {\n    return false;\n  }\n}\n\nmodule.exports = Builder;\n","'use strict';\n\nconst validator = require('./validator');\nconst XMLParser = require('./xmlparser/XMLParser');\nconst XMLBuilder = require('./xmlbuilder/json2xml');\n\nmodule.exports = {\n  XMLParser: XMLParser,\n  XMLValidator: validator,\n  XMLBuilder: XMLBuilder\n}","import { ServiceException as __ServiceException, } from \"@smithy/smithy-client\";\nexport { __ServiceException };\nexport class S3ServiceException extends __ServiceException {\n    constructor(options) {\n        super(options);\n        Object.setPrototypeOf(this, S3ServiceException.prototype);\n    }\n}\n","import { SENSITIVE_STRING } from \"@smithy/smithy-client\";\nimport { S3ServiceException as __BaseException } from \"./S3ServiceException\";\nexport const RequestCharged = {\n    requester: \"requester\",\n};\nexport const RequestPayer = {\n    requester: \"requester\",\n};\nexport class NoSuchUpload extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"NoSuchUpload\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"NoSuchUpload\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, NoSuchUpload.prototype);\n    }\n}\nexport const BucketAccelerateStatus = {\n    Enabled: \"Enabled\",\n    Suspended: \"Suspended\",\n};\nexport const Type = {\n    AmazonCustomerByEmail: \"AmazonCustomerByEmail\",\n    CanonicalUser: \"CanonicalUser\",\n    Group: \"Group\",\n};\nexport const Permission = {\n    FULL_CONTROL: \"FULL_CONTROL\",\n    READ: \"READ\",\n    READ_ACP: \"READ_ACP\",\n    WRITE: \"WRITE\",\n    WRITE_ACP: \"WRITE_ACP\",\n};\nexport const OwnerOverride = {\n    Destination: \"Destination\",\n};\nexport const ServerSideEncryption = {\n    AES256: \"AES256\",\n    aws_kms: \"aws:kms\",\n    aws_kms_dsse: \"aws:kms:dsse\",\n};\nexport const ObjectCannedACL = {\n    authenticated_read: \"authenticated-read\",\n    aws_exec_read: \"aws-exec-read\",\n    bucket_owner_full_control: \"bucket-owner-full-control\",\n    bucket_owner_read: \"bucket-owner-read\",\n    private: \"private\",\n    public_read: \"public-read\",\n    public_read_write: \"public-read-write\",\n};\nexport const ChecksumAlgorithm = {\n    CRC32: \"CRC32\",\n    CRC32C: \"CRC32C\",\n    SHA1: \"SHA1\",\n    SHA256: \"SHA256\",\n};\nexport const MetadataDirective = {\n    COPY: \"COPY\",\n    REPLACE: \"REPLACE\",\n};\nexport const ObjectLockLegalHoldStatus = {\n    OFF: \"OFF\",\n    ON: \"ON\",\n};\nexport const ObjectLockMode = {\n    COMPLIANCE: \"COMPLIANCE\",\n    GOVERNANCE: \"GOVERNANCE\",\n};\nexport const StorageClass = {\n    DEEP_ARCHIVE: \"DEEP_ARCHIVE\",\n    GLACIER: \"GLACIER\",\n    GLACIER_IR: \"GLACIER_IR\",\n    INTELLIGENT_TIERING: \"INTELLIGENT_TIERING\",\n    ONEZONE_IA: \"ONEZONE_IA\",\n    OUTPOSTS: \"OUTPOSTS\",\n    REDUCED_REDUNDANCY: \"REDUCED_REDUNDANCY\",\n    SNOW: \"SNOW\",\n    STANDARD: \"STANDARD\",\n    STANDARD_IA: \"STANDARD_IA\",\n};\nexport const TaggingDirective = {\n    COPY: \"COPY\",\n    REPLACE: \"REPLACE\",\n};\nexport class ObjectNotInActiveTierError extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"ObjectNotInActiveTierError\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"ObjectNotInActiveTierError\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, ObjectNotInActiveTierError.prototype);\n    }\n}\nexport class BucketAlreadyExists extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"BucketAlreadyExists\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"BucketAlreadyExists\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, BucketAlreadyExists.prototype);\n    }\n}\nexport class BucketAlreadyOwnedByYou extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"BucketAlreadyOwnedByYou\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"BucketAlreadyOwnedByYou\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, BucketAlreadyOwnedByYou.prototype);\n    }\n}\nexport const BucketCannedACL = {\n    authenticated_read: \"authenticated-read\",\n    private: \"private\",\n    public_read: \"public-read\",\n    public_read_write: \"public-read-write\",\n};\nexport const BucketLocationConstraint = {\n    EU: \"EU\",\n    af_south_1: \"af-south-1\",\n    ap_east_1: \"ap-east-1\",\n    ap_northeast_1: \"ap-northeast-1\",\n    ap_northeast_2: \"ap-northeast-2\",\n    ap_northeast_3: \"ap-northeast-3\",\n    ap_south_1: \"ap-south-1\",\n    ap_south_2: \"ap-south-2\",\n    ap_southeast_1: \"ap-southeast-1\",\n    ap_southeast_2: \"ap-southeast-2\",\n    ap_southeast_3: \"ap-southeast-3\",\n    ca_central_1: \"ca-central-1\",\n    cn_north_1: \"cn-north-1\",\n    cn_northwest_1: \"cn-northwest-1\",\n    eu_central_1: \"eu-central-1\",\n    eu_north_1: \"eu-north-1\",\n    eu_south_1: \"eu-south-1\",\n    eu_south_2: \"eu-south-2\",\n    eu_west_1: \"eu-west-1\",\n    eu_west_2: \"eu-west-2\",\n    eu_west_3: \"eu-west-3\",\n    me_south_1: \"me-south-1\",\n    sa_east_1: \"sa-east-1\",\n    us_east_2: \"us-east-2\",\n    us_gov_east_1: \"us-gov-east-1\",\n    us_gov_west_1: \"us-gov-west-1\",\n    us_west_1: \"us-west-1\",\n    us_west_2: \"us-west-2\",\n};\nexport const ObjectOwnership = {\n    BucketOwnerEnforced: \"BucketOwnerEnforced\",\n    BucketOwnerPreferred: \"BucketOwnerPreferred\",\n    ObjectWriter: \"ObjectWriter\",\n};\nexport var AnalyticsFilter;\n(function (AnalyticsFilter) {\n    AnalyticsFilter.visit = (value, visitor) => {\n        if (value.Prefix !== undefined)\n            return visitor.Prefix(value.Prefix);\n        if (value.Tag !== undefined)\n            return visitor.Tag(value.Tag);\n        if (value.And !== undefined)\n            return visitor.And(value.And);\n        return visitor._(value.$unknown[0], value.$unknown[1]);\n    };\n})(AnalyticsFilter || (AnalyticsFilter = {}));\nexport const AnalyticsS3ExportFileFormat = {\n    CSV: \"CSV\",\n};\nexport const StorageClassAnalysisSchemaVersion = {\n    V_1: \"V_1\",\n};\nexport const IntelligentTieringStatus = {\n    Disabled: \"Disabled\",\n    Enabled: \"Enabled\",\n};\nexport const IntelligentTieringAccessTier = {\n    ARCHIVE_ACCESS: \"ARCHIVE_ACCESS\",\n    DEEP_ARCHIVE_ACCESS: \"DEEP_ARCHIVE_ACCESS\",\n};\nexport const InventoryFormat = {\n    CSV: \"CSV\",\n    ORC: \"ORC\",\n    Parquet: \"Parquet\",\n};\nexport const InventoryIncludedObjectVersions = {\n    All: \"All\",\n    Current: \"Current\",\n};\nexport const InventoryOptionalField = {\n    BucketKeyStatus: \"BucketKeyStatus\",\n    ChecksumAlgorithm: \"ChecksumAlgorithm\",\n    ETag: \"ETag\",\n    EncryptionStatus: \"EncryptionStatus\",\n    IntelligentTieringAccessTier: \"IntelligentTieringAccessTier\",\n    IsMultipartUploaded: \"IsMultipartUploaded\",\n    LastModifiedDate: \"LastModifiedDate\",\n    ObjectAccessControlList: \"ObjectAccessControlList\",\n    ObjectLockLegalHoldStatus: \"ObjectLockLegalHoldStatus\",\n    ObjectLockMode: \"ObjectLockMode\",\n    ObjectLockRetainUntilDate: \"ObjectLockRetainUntilDate\",\n    ObjectOwner: \"ObjectOwner\",\n    ReplicationStatus: \"ReplicationStatus\",\n    Size: \"Size\",\n    StorageClass: \"StorageClass\",\n};\nexport const InventoryFrequency = {\n    Daily: \"Daily\",\n    Weekly: \"Weekly\",\n};\nexport var LifecycleRuleFilter;\n(function (LifecycleRuleFilter) {\n    LifecycleRuleFilter.visit = (value, visitor) => {\n        if (value.Prefix !== undefined)\n            return visitor.Prefix(value.Prefix);\n        if (value.Tag !== undefined)\n            return visitor.Tag(value.Tag);\n        if (value.ObjectSizeGreaterThan !== undefined)\n            return visitor.ObjectSizeGreaterThan(value.ObjectSizeGreaterThan);\n        if (value.ObjectSizeLessThan !== undefined)\n            return visitor.ObjectSizeLessThan(value.ObjectSizeLessThan);\n        if (value.And !== undefined)\n            return visitor.And(value.And);\n        return visitor._(value.$unknown[0], value.$unknown[1]);\n    };\n})(LifecycleRuleFilter || (LifecycleRuleFilter = {}));\nexport const TransitionStorageClass = {\n    DEEP_ARCHIVE: \"DEEP_ARCHIVE\",\n    GLACIER: \"GLACIER\",\n    GLACIER_IR: \"GLACIER_IR\",\n    INTELLIGENT_TIERING: \"INTELLIGENT_TIERING\",\n    ONEZONE_IA: \"ONEZONE_IA\",\n    STANDARD_IA: \"STANDARD_IA\",\n};\nexport const ExpirationStatus = {\n    Disabled: \"Disabled\",\n    Enabled: \"Enabled\",\n};\nexport const BucketLogsPermission = {\n    FULL_CONTROL: \"FULL_CONTROL\",\n    READ: \"READ\",\n    WRITE: \"WRITE\",\n};\nexport var MetricsFilter;\n(function (MetricsFilter) {\n    MetricsFilter.visit = (value, visitor) => {\n        if (value.Prefix !== undefined)\n            return visitor.Prefix(value.Prefix);\n        if (value.Tag !== undefined)\n            return visitor.Tag(value.Tag);\n        if (value.AccessPointArn !== undefined)\n            return visitor.AccessPointArn(value.AccessPointArn);\n        if (value.And !== undefined)\n            return visitor.And(value.And);\n        return visitor._(value.$unknown[0], value.$unknown[1]);\n    };\n})(MetricsFilter || (MetricsFilter = {}));\nexport const Event = {\n    s3_IntelligentTiering: \"s3:IntelligentTiering\",\n    s3_LifecycleExpiration_: \"s3:LifecycleExpiration:*\",\n    s3_LifecycleExpiration_Delete: \"s3:LifecycleExpiration:Delete\",\n    s3_LifecycleExpiration_DeleteMarkerCreated: \"s3:LifecycleExpiration:DeleteMarkerCreated\",\n    s3_LifecycleTransition: \"s3:LifecycleTransition\",\n    s3_ObjectAcl_Put: \"s3:ObjectAcl:Put\",\n    s3_ObjectCreated_: \"s3:ObjectCreated:*\",\n    s3_ObjectCreated_CompleteMultipartUpload: \"s3:ObjectCreated:CompleteMultipartUpload\",\n    s3_ObjectCreated_Copy: \"s3:ObjectCreated:Copy\",\n    s3_ObjectCreated_Post: \"s3:ObjectCreated:Post\",\n    s3_ObjectCreated_Put: \"s3:ObjectCreated:Put\",\n    s3_ObjectRemoved_: \"s3:ObjectRemoved:*\",\n    s3_ObjectRemoved_Delete: \"s3:ObjectRemoved:Delete\",\n    s3_ObjectRemoved_DeleteMarkerCreated: \"s3:ObjectRemoved:DeleteMarkerCreated\",\n    s3_ObjectRestore_: \"s3:ObjectRestore:*\",\n    s3_ObjectRestore_Completed: \"s3:ObjectRestore:Completed\",\n    s3_ObjectRestore_Delete: \"s3:ObjectRestore:Delete\",\n    s3_ObjectRestore_Post: \"s3:ObjectRestore:Post\",\n    s3_ObjectTagging_: \"s3:ObjectTagging:*\",\n    s3_ObjectTagging_Delete: \"s3:ObjectTagging:Delete\",\n    s3_ObjectTagging_Put: \"s3:ObjectTagging:Put\",\n    s3_ReducedRedundancyLostObject: \"s3:ReducedRedundancyLostObject\",\n    s3_Replication_: \"s3:Replication:*\",\n    s3_Replication_OperationFailedReplication: \"s3:Replication:OperationFailedReplication\",\n    s3_Replication_OperationMissedThreshold: \"s3:Replication:OperationMissedThreshold\",\n    s3_Replication_OperationNotTracked: \"s3:Replication:OperationNotTracked\",\n    s3_Replication_OperationReplicatedAfterThreshold: \"s3:Replication:OperationReplicatedAfterThreshold\",\n};\nexport const FilterRuleName = {\n    prefix: \"prefix\",\n    suffix: \"suffix\",\n};\nexport const DeleteMarkerReplicationStatus = {\n    Disabled: \"Disabled\",\n    Enabled: \"Enabled\",\n};\nexport const MetricsStatus = {\n    Disabled: \"Disabled\",\n    Enabled: \"Enabled\",\n};\nexport const ReplicationTimeStatus = {\n    Disabled: \"Disabled\",\n    Enabled: \"Enabled\",\n};\nexport const ExistingObjectReplicationStatus = {\n    Disabled: \"Disabled\",\n    Enabled: \"Enabled\",\n};\nexport var ReplicationRuleFilter;\n(function (ReplicationRuleFilter) {\n    ReplicationRuleFilter.visit = (value, visitor) => {\n        if (value.Prefix !== undefined)\n            return visitor.Prefix(value.Prefix);\n        if (value.Tag !== undefined)\n            return visitor.Tag(value.Tag);\n        if (value.And !== undefined)\n            return visitor.And(value.And);\n        return visitor._(value.$unknown[0], value.$unknown[1]);\n    };\n})(ReplicationRuleFilter || (ReplicationRuleFilter = {}));\nexport const ReplicaModificationsStatus = {\n    Disabled: \"Disabled\",\n    Enabled: \"Enabled\",\n};\nexport const SseKmsEncryptedObjectsStatus = {\n    Disabled: \"Disabled\",\n    Enabled: \"Enabled\",\n};\nexport const ReplicationRuleStatus = {\n    Disabled: \"Disabled\",\n    Enabled: \"Enabled\",\n};\nexport const Payer = {\n    BucketOwner: \"BucketOwner\",\n    Requester: \"Requester\",\n};\nexport const MFADeleteStatus = {\n    Disabled: \"Disabled\",\n    Enabled: \"Enabled\",\n};\nexport const BucketVersioningStatus = {\n    Enabled: \"Enabled\",\n    Suspended: \"Suspended\",\n};\nexport const Protocol = {\n    http: \"http\",\n    https: \"https\",\n};\nexport const ReplicationStatus = {\n    COMPLETE: \"COMPLETE\",\n    FAILED: \"FAILED\",\n    PENDING: \"PENDING\",\n    REPLICA: \"REPLICA\",\n};\nexport const ChecksumMode = {\n    ENABLED: \"ENABLED\",\n};\nexport class InvalidObjectState extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"InvalidObjectState\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InvalidObjectState\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidObjectState.prototype);\n        this.StorageClass = opts.StorageClass;\n        this.AccessTier = opts.AccessTier;\n    }\n}\nexport class NoSuchKey extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"NoSuchKey\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"NoSuchKey\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, NoSuchKey.prototype);\n    }\n}\nexport const ObjectAttributes = {\n    CHECKSUM: \"Checksum\",\n    ETAG: \"ETag\",\n    OBJECT_PARTS: \"ObjectParts\",\n    OBJECT_SIZE: \"ObjectSize\",\n    STORAGE_CLASS: \"StorageClass\",\n};\nexport const ObjectLockEnabled = {\n    Enabled: \"Enabled\",\n};\nexport const ObjectLockRetentionMode = {\n    COMPLIANCE: \"COMPLIANCE\",\n    GOVERNANCE: \"GOVERNANCE\",\n};\nexport class NotFound extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"NotFound\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"NotFound\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, NotFound.prototype);\n    }\n}\nexport const ArchiveStatus = {\n    ARCHIVE_ACCESS: \"ARCHIVE_ACCESS\",\n    DEEP_ARCHIVE_ACCESS: \"DEEP_ARCHIVE_ACCESS\",\n};\nexport const EncodingType = {\n    url: \"url\",\n};\nexport const ObjectStorageClass = {\n    DEEP_ARCHIVE: \"DEEP_ARCHIVE\",\n    GLACIER: \"GLACIER\",\n    GLACIER_IR: \"GLACIER_IR\",\n    INTELLIGENT_TIERING: \"INTELLIGENT_TIERING\",\n    ONEZONE_IA: \"ONEZONE_IA\",\n    OUTPOSTS: \"OUTPOSTS\",\n    REDUCED_REDUNDANCY: \"REDUCED_REDUNDANCY\",\n    SNOW: \"SNOW\",\n    STANDARD: \"STANDARD\",\n    STANDARD_IA: \"STANDARD_IA\",\n};\nexport const OptionalObjectAttributes = {\n    RESTORE_STATUS: \"RestoreStatus\",\n};\nexport class NoSuchBucket extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"NoSuchBucket\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"NoSuchBucket\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, NoSuchBucket.prototype);\n    }\n}\nexport const ObjectVersionStorageClass = {\n    STANDARD: \"STANDARD\",\n};\nexport const MFADelete = {\n    Disabled: \"Disabled\",\n    Enabled: \"Enabled\",\n};\nexport const CompleteMultipartUploadOutputFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.SSEKMSKeyId && { SSEKMSKeyId: SENSITIVE_STRING }),\n});\nexport const CompleteMultipartUploadRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.SSECustomerKey && { SSECustomerKey: SENSITIVE_STRING }),\n});\nexport const CopyObjectOutputFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.SSEKMSKeyId && { SSEKMSKeyId: SENSITIVE_STRING }),\n    ...(obj.SSEKMSEncryptionContext && { SSEKMSEncryptionContext: SENSITIVE_STRING }),\n});\nexport const CopyObjectRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.SSECustomerKey && { SSECustomerKey: SENSITIVE_STRING }),\n    ...(obj.SSEKMSKeyId && { SSEKMSKeyId: SENSITIVE_STRING }),\n    ...(obj.SSEKMSEncryptionContext && { SSEKMSEncryptionContext: SENSITIVE_STRING }),\n    ...(obj.CopySourceSSECustomerKey && { CopySourceSSECustomerKey: SENSITIVE_STRING }),\n});\nexport const CreateMultipartUploadOutputFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.SSEKMSKeyId && { SSEKMSKeyId: SENSITIVE_STRING }),\n    ...(obj.SSEKMSEncryptionContext && { SSEKMSEncryptionContext: SENSITIVE_STRING }),\n});\nexport const CreateMultipartUploadRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.SSECustomerKey && { SSECustomerKey: SENSITIVE_STRING }),\n    ...(obj.SSEKMSKeyId && { SSEKMSKeyId: SENSITIVE_STRING }),\n    ...(obj.SSEKMSEncryptionContext && { SSEKMSEncryptionContext: SENSITIVE_STRING }),\n});\nexport const ServerSideEncryptionByDefaultFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.KMSMasterKeyID && { KMSMasterKeyID: SENSITIVE_STRING }),\n});\nexport const ServerSideEncryptionRuleFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.ApplyServerSideEncryptionByDefault && {\n        ApplyServerSideEncryptionByDefault: ServerSideEncryptionByDefaultFilterSensitiveLog(obj.ApplyServerSideEncryptionByDefault),\n    }),\n});\nexport const ServerSideEncryptionConfigurationFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Rules && { Rules: obj.Rules.map((item) => ServerSideEncryptionRuleFilterSensitiveLog(item)) }),\n});\nexport const GetBucketEncryptionOutputFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.ServerSideEncryptionConfiguration && {\n        ServerSideEncryptionConfiguration: ServerSideEncryptionConfigurationFilterSensitiveLog(obj.ServerSideEncryptionConfiguration),\n    }),\n});\nexport const SSEKMSFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.KeyId && { KeyId: SENSITIVE_STRING }),\n});\nexport const InventoryEncryptionFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.SSEKMS && { SSEKMS: SSEKMSFilterSensitiveLog(obj.SSEKMS) }),\n});\nexport const InventoryS3BucketDestinationFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Encryption && { Encryption: InventoryEncryptionFilterSensitiveLog(obj.Encryption) }),\n});\nexport const InventoryDestinationFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.S3BucketDestination && {\n        S3BucketDestination: InventoryS3BucketDestinationFilterSensitiveLog(obj.S3BucketDestination),\n    }),\n});\nexport const InventoryConfigurationFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Destination && { Destination: InventoryDestinationFilterSensitiveLog(obj.Destination) }),\n});\nexport const GetBucketInventoryConfigurationOutputFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.InventoryConfiguration && {\n        InventoryConfiguration: InventoryConfigurationFilterSensitiveLog(obj.InventoryConfiguration),\n    }),\n});\nexport const GetObjectOutputFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.SSEKMSKeyId && { SSEKMSKeyId: SENSITIVE_STRING }),\n});\nexport const GetObjectRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.SSECustomerKey && { SSECustomerKey: SENSITIVE_STRING }),\n});\nexport const GetObjectAttributesRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.SSECustomerKey && { SSECustomerKey: SENSITIVE_STRING }),\n});\nexport const GetObjectTorrentOutputFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const HeadObjectOutputFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.SSEKMSKeyId && { SSEKMSKeyId: SENSITIVE_STRING }),\n});\nexport const HeadObjectRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.SSECustomerKey && { SSECustomerKey: SENSITIVE_STRING }),\n});\nexport const ListBucketInventoryConfigurationsOutputFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.InventoryConfigurationList && {\n        InventoryConfigurationList: obj.InventoryConfigurationList.map((item) => InventoryConfigurationFilterSensitiveLog(item)),\n    }),\n});\nexport const ListPartsRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.SSECustomerKey && { SSECustomerKey: SENSITIVE_STRING }),\n});\nexport const PutBucketEncryptionRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.ServerSideEncryptionConfiguration && {\n        ServerSideEncryptionConfiguration: ServerSideEncryptionConfigurationFilterSensitiveLog(obj.ServerSideEncryptionConfiguration),\n    }),\n});\nexport const PutBucketInventoryConfigurationRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.InventoryConfiguration && {\n        InventoryConfiguration: InventoryConfigurationFilterSensitiveLog(obj.InventoryConfiguration),\n    }),\n});\nexport const PutObjectOutputFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.SSEKMSKeyId && { SSEKMSKeyId: SENSITIVE_STRING }),\n    ...(obj.SSEKMSEncryptionContext && { SSEKMSEncryptionContext: SENSITIVE_STRING }),\n});\nexport const PutObjectRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.SSECustomerKey && { SSECustomerKey: SENSITIVE_STRING }),\n    ...(obj.SSEKMSKeyId && { SSEKMSKeyId: SENSITIVE_STRING }),\n    ...(obj.SSEKMSEncryptionContext && { SSEKMSEncryptionContext: SENSITIVE_STRING }),\n});\n","import { XmlNode as __XmlNode, XmlText as __XmlText } from \"@aws-sdk/xml-builder\";\nimport { HttpRequest as __HttpRequest, isValidHostname as __isValidHostname, } from \"@smithy/protocol-http\";\nimport { collectBody, dateToUtcString as __dateToUtcString, decorateServiceException as __decorateServiceException, expectNonNull as __expectNonNull, expectObject as __expectObject, expectString as __expectString, expectUnion as __expectUnion, getArrayIfSingleItem as __getArrayIfSingleItem, getValueFromTextNode as __getValueFromTextNode, map, parseBoolean as __parseBoolean, parseRfc3339DateTimeWithOffset as __parseRfc3339DateTimeWithOffset, parseRfc7231DateTime as __parseRfc7231DateTime, resolvedPath as __resolvedPath, strictParseInt32 as __strictParseInt32, strictParseLong as __strictParseLong, withBaseException, } from \"@smithy/smithy-client\";\nimport { XMLParser } from \"fast-xml-parser\";\nimport { AnalyticsFilter, BucketAlreadyExists, BucketAlreadyOwnedByYou, InvalidObjectState, LifecycleRuleFilter, MetricsFilter, NoSuchBucket, NoSuchKey, NoSuchUpload, NotFound, ObjectNotInActiveTierError, ReplicationRuleFilter, } from \"../models/models_0\";\nimport { ObjectAlreadyInActiveTierError, } from \"../models/models_1\";\nimport { S3ServiceException as __BaseException } from \"../models/S3ServiceException\";\nexport const se_AbortMultipartUploadCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = map({}, isSerializableHeaderValue, {\n        \"x-amz-request-payer\": input.RequestPayer,\n        \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/{Key+}\";\n    resolvedPath = __resolvedPath(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    resolvedPath = __resolvedPath(resolvedPath, input, \"Key\", () => input.Key, \"{Key+}\", true);\n    const query = map({\n        \"x-id\": [, \"AbortMultipartUpload\"],\n        uploadId: [, __expectNonNull(input.UploadId, `UploadId`)],\n    });\n    let body;\n    return new __HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"DELETE\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexport const se_CompleteMultipartUploadCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = map({}, isSerializableHeaderValue, {\n        \"content-type\": \"application/xml\",\n        \"x-amz-checksum-crc32\": input.ChecksumCRC32,\n        \"x-amz-checksum-crc32c\": input.ChecksumCRC32C,\n        \"x-amz-checksum-sha1\": input.ChecksumSHA1,\n        \"x-amz-checksum-sha256\": input.ChecksumSHA256,\n        \"x-amz-request-payer\": input.RequestPayer,\n        \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n        \"x-amz-server-side-encryption-customer-algorithm\": input.SSECustomerAlgorithm,\n        \"x-amz-server-side-encryption-customer-key\": input.SSECustomerKey,\n        \"x-amz-server-side-encryption-customer-key-md5\": input.SSECustomerKeyMD5,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/{Key+}\";\n    resolvedPath = __resolvedPath(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    resolvedPath = __resolvedPath(resolvedPath, input, \"Key\", () => input.Key, \"{Key+}\", true);\n    const query = map({\n        \"x-id\": [, \"CompleteMultipartUpload\"],\n        uploadId: [, __expectNonNull(input.UploadId, `UploadId`)],\n    });\n    let body;\n    if (input.MultipartUpload !== undefined) {\n        body = se_CompletedMultipartUpload(input.MultipartUpload, context);\n    }\n    let contents;\n    if (input.MultipartUpload !== undefined) {\n        contents = se_CompletedMultipartUpload(input.MultipartUpload, context);\n        contents = contents.withName(\"CompleteMultipartUpload\");\n        body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n        contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n        body += contents.toString();\n    }\n    return new __HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"POST\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexport const se_CopyObjectCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = map({}, isSerializableHeaderValue, {\n        \"x-amz-acl\": input.ACL,\n        \"cache-control\": input.CacheControl,\n        \"x-amz-checksum-algorithm\": input.ChecksumAlgorithm,\n        \"content-disposition\": input.ContentDisposition,\n        \"content-encoding\": input.ContentEncoding,\n        \"content-language\": input.ContentLanguage,\n        \"content-type\": input.ContentType,\n        \"x-amz-copy-source\": input.CopySource,\n        \"x-amz-copy-source-if-match\": input.CopySourceIfMatch,\n        \"x-amz-copy-source-if-modified-since\": [\n            () => isSerializableHeaderValue(input.CopySourceIfModifiedSince),\n            () => __dateToUtcString(input.CopySourceIfModifiedSince).toString(),\n        ],\n        \"x-amz-copy-source-if-none-match\": input.CopySourceIfNoneMatch,\n        \"x-amz-copy-source-if-unmodified-since\": [\n            () => isSerializableHeaderValue(input.CopySourceIfUnmodifiedSince),\n            () => __dateToUtcString(input.CopySourceIfUnmodifiedSince).toString(),\n        ],\n        expires: [() => isSerializableHeaderValue(input.Expires), () => __dateToUtcString(input.Expires).toString()],\n        \"x-amz-grant-full-control\": input.GrantFullControl,\n        \"x-amz-grant-read\": input.GrantRead,\n        \"x-amz-grant-read-acp\": input.GrantReadACP,\n        \"x-amz-grant-write-acp\": input.GrantWriteACP,\n        \"x-amz-metadata-directive\": input.MetadataDirective,\n        \"x-amz-tagging-directive\": input.TaggingDirective,\n        \"x-amz-server-side-encryption\": input.ServerSideEncryption,\n        \"x-amz-storage-class\": input.StorageClass,\n        \"x-amz-website-redirect-location\": input.WebsiteRedirectLocation,\n        \"x-amz-server-side-encryption-customer-algorithm\": input.SSECustomerAlgorithm,\n        \"x-amz-server-side-encryption-customer-key\": input.SSECustomerKey,\n        \"x-amz-server-side-encryption-customer-key-md5\": input.SSECustomerKeyMD5,\n        \"x-amz-server-side-encryption-aws-kms-key-id\": input.SSEKMSKeyId,\n        \"x-amz-server-side-encryption-context\": input.SSEKMSEncryptionContext,\n        \"x-amz-server-side-encryption-bucket-key-enabled\": [\n            () => isSerializableHeaderValue(input.BucketKeyEnabled),\n            () => input.BucketKeyEnabled.toString(),\n        ],\n        \"x-amz-copy-source-server-side-encryption-customer-algorithm\": input.CopySourceSSECustomerAlgorithm,\n        \"x-amz-copy-source-server-side-encryption-customer-key\": input.CopySourceSSECustomerKey,\n        \"x-amz-copy-source-server-side-encryption-customer-key-md5\": input.CopySourceSSECustomerKeyMD5,\n        \"x-amz-request-payer\": input.RequestPayer,\n        \"x-amz-tagging\": input.Tagging,\n        \"x-amz-object-lock-mode\": input.ObjectLockMode,\n        \"x-amz-object-lock-retain-until-date\": [\n            () => isSerializableHeaderValue(input.ObjectLockRetainUntilDate),\n            () => (input.ObjectLockRetainUntilDate.toISOString().split(\".\")[0] + \"Z\").toString(),\n        ],\n        \"x-amz-object-lock-legal-hold\": input.ObjectLockLegalHoldStatus,\n        \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n        \"x-amz-source-expected-bucket-owner\": input.ExpectedSourceBucketOwner,\n        ...(input.Metadata !== undefined &&\n            Object.keys(input.Metadata).reduce((acc, suffix) => {\n                acc[`x-amz-meta-${suffix.toLowerCase()}`] = input.Metadata[suffix];\n                return acc;\n            }, {})),\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/{Key+}\";\n    resolvedPath = __resolvedPath(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    resolvedPath = __resolvedPath(resolvedPath, input, \"Key\", () => input.Key, \"{Key+}\", true);\n    const query = map({\n        \"x-id\": [, \"CopyObject\"],\n    });\n    let body;\n    return new __HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"PUT\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexport const se_CreateBucketCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = map({}, isSerializableHeaderValue, {\n        \"content-type\": \"application/xml\",\n        \"x-amz-acl\": input.ACL,\n        \"x-amz-grant-full-control\": input.GrantFullControl,\n        \"x-amz-grant-read\": input.GrantRead,\n        \"x-amz-grant-read-acp\": input.GrantReadACP,\n        \"x-amz-grant-write\": input.GrantWrite,\n        \"x-amz-grant-write-acp\": input.GrantWriteACP,\n        \"x-amz-bucket-object-lock-enabled\": [\n            () => isSerializableHeaderValue(input.ObjectLockEnabledForBucket),\n            () => input.ObjectLockEnabledForBucket.toString(),\n        ],\n        \"x-amz-object-ownership\": input.ObjectOwnership,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/\";\n    resolvedPath = __resolvedPath(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    let body;\n    if (input.CreateBucketConfiguration !== undefined) {\n        body = se_CreateBucketConfiguration(input.CreateBucketConfiguration, context);\n    }\n    let contents;\n    if (input.CreateBucketConfiguration !== undefined) {\n        contents = se_CreateBucketConfiguration(input.CreateBucketConfiguration, context);\n        body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n        contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n        body += contents.toString();\n    }\n    return new __HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"PUT\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexport const se_CreateMultipartUploadCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = map({}, isSerializableHeaderValue, {\n        \"x-amz-acl\": input.ACL,\n        \"cache-control\": input.CacheControl,\n        \"content-disposition\": input.ContentDisposition,\n        \"content-encoding\": input.ContentEncoding,\n        \"content-language\": input.ContentLanguage,\n        \"content-type\": input.ContentType,\n        expires: [() => isSerializableHeaderValue(input.Expires), () => __dateToUtcString(input.Expires).toString()],\n        \"x-amz-grant-full-control\": input.GrantFullControl,\n        \"x-amz-grant-read\": input.GrantRead,\n        \"x-amz-grant-read-acp\": input.GrantReadACP,\n        \"x-amz-grant-write-acp\": input.GrantWriteACP,\n        \"x-amz-server-side-encryption\": input.ServerSideEncryption,\n        \"x-amz-storage-class\": input.StorageClass,\n        \"x-amz-website-redirect-location\": input.WebsiteRedirectLocation,\n        \"x-amz-server-side-encryption-customer-algorithm\": input.SSECustomerAlgorithm,\n        \"x-amz-server-side-encryption-customer-key\": input.SSECustomerKey,\n        \"x-amz-server-side-encryption-customer-key-md5\": input.SSECustomerKeyMD5,\n        \"x-amz-server-side-encryption-aws-kms-key-id\": input.SSEKMSKeyId,\n        \"x-amz-server-side-encryption-context\": input.SSEKMSEncryptionContext,\n        \"x-amz-server-side-encryption-bucket-key-enabled\": [\n            () => isSerializableHeaderValue(input.BucketKeyEnabled),\n            () => input.BucketKeyEnabled.toString(),\n        ],\n        \"x-amz-request-payer\": input.RequestPayer,\n        \"x-amz-tagging\": input.Tagging,\n        \"x-amz-object-lock-mode\": input.ObjectLockMode,\n        \"x-amz-object-lock-retain-until-date\": [\n            () => isSerializableHeaderValue(input.ObjectLockRetainUntilDate),\n            () => (input.ObjectLockRetainUntilDate.toISOString().split(\".\")[0] + \"Z\").toString(),\n        ],\n        \"x-amz-object-lock-legal-hold\": input.ObjectLockLegalHoldStatus,\n        \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n        \"x-amz-checksum-algorithm\": input.ChecksumAlgorithm,\n        ...(input.Metadata !== undefined &&\n            Object.keys(input.Metadata).reduce((acc, suffix) => {\n                acc[`x-amz-meta-${suffix.toLowerCase()}`] = input.Metadata[suffix];\n                return acc;\n            }, {})),\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/{Key+}\";\n    resolvedPath = __resolvedPath(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    resolvedPath = __resolvedPath(resolvedPath, input, \"Key\", () => input.Key, \"{Key+}\", true);\n    const query = map({\n        uploads: [, \"\"],\n        \"x-id\": [, \"CreateMultipartUpload\"],\n    });\n    let body;\n    return new __HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"POST\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexport const se_DeleteBucketCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = map({}, isSerializableHeaderValue, {\n        \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/\";\n    resolvedPath = __resolvedPath(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    let body;\n    return new __HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"DELETE\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexport const se_DeleteBucketAnalyticsConfigurationCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = map({}, isSerializableHeaderValue, {\n        \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/\";\n    resolvedPath = __resolvedPath(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = map({\n        analytics: [, \"\"],\n        id: [, __expectNonNull(input.Id, `Id`)],\n    });\n    let body;\n    return new __HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"DELETE\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexport const se_DeleteBucketCorsCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = map({}, isSerializableHeaderValue, {\n        \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/\";\n    resolvedPath = __resolvedPath(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = map({\n        cors: [, \"\"],\n    });\n    let body;\n    return new __HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"DELETE\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexport const se_DeleteBucketEncryptionCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = map({}, isSerializableHeaderValue, {\n        \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/\";\n    resolvedPath = __resolvedPath(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = map({\n        encryption: [, \"\"],\n    });\n    let body;\n    return new __HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"DELETE\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexport const se_DeleteBucketIntelligentTieringConfigurationCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {};\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/\";\n    resolvedPath = __resolvedPath(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = map({\n        \"intelligent-tiering\": [, \"\"],\n        id: [, __expectNonNull(input.Id, `Id`)],\n    });\n    let body;\n    return new __HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"DELETE\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexport const se_DeleteBucketInventoryConfigurationCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = map({}, isSerializableHeaderValue, {\n        \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/\";\n    resolvedPath = __resolvedPath(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = map({\n        inventory: [, \"\"],\n        id: [, __expectNonNull(input.Id, `Id`)],\n    });\n    let body;\n    return new __HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"DELETE\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexport const se_DeleteBucketLifecycleCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = map({}, isSerializableHeaderValue, {\n        \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/\";\n    resolvedPath = __resolvedPath(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = map({\n        lifecycle: [, \"\"],\n    });\n    let body;\n    return new __HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"DELETE\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexport const se_DeleteBucketMetricsConfigurationCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = map({}, isSerializableHeaderValue, {\n        \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/\";\n    resolvedPath = __resolvedPath(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = map({\n        metrics: [, \"\"],\n        id: [, __expectNonNull(input.Id, `Id`)],\n    });\n    let body;\n    return new __HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"DELETE\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexport const se_DeleteBucketOwnershipControlsCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = map({}, isSerializableHeaderValue, {\n        \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/\";\n    resolvedPath = __resolvedPath(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = map({\n        ownershipControls: [, \"\"],\n    });\n    let body;\n    return new __HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"DELETE\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexport const se_DeleteBucketPolicyCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = map({}, isSerializableHeaderValue, {\n        \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/\";\n    resolvedPath = __resolvedPath(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = map({\n        policy: [, \"\"],\n    });\n    let body;\n    return new __HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"DELETE\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexport const se_DeleteBucketReplicationCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = map({}, isSerializableHeaderValue, {\n        \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/\";\n    resolvedPath = __resolvedPath(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = map({\n        replication: [, \"\"],\n    });\n    let body;\n    return new __HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"DELETE\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexport const se_DeleteBucketTaggingCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = map({}, isSerializableHeaderValue, {\n        \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/\";\n    resolvedPath = __resolvedPath(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = map({\n        tagging: [, \"\"],\n    });\n    let body;\n    return new __HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"DELETE\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexport const se_DeleteBucketWebsiteCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = map({}, isSerializableHeaderValue, {\n        \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/\";\n    resolvedPath = __resolvedPath(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = map({\n        website: [, \"\"],\n    });\n    let body;\n    return new __HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"DELETE\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexport const se_DeleteObjectCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = map({}, isSerializableHeaderValue, {\n        \"x-amz-mfa\": input.MFA,\n        \"x-amz-request-payer\": input.RequestPayer,\n        \"x-amz-bypass-governance-retention\": [\n            () => isSerializableHeaderValue(input.BypassGovernanceRetention),\n            () => input.BypassGovernanceRetention.toString(),\n        ],\n        \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/{Key+}\";\n    resolvedPath = __resolvedPath(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    resolvedPath = __resolvedPath(resolvedPath, input, \"Key\", () => input.Key, \"{Key+}\", true);\n    const query = map({\n        \"x-id\": [, \"DeleteObject\"],\n        versionId: [, input.VersionId],\n    });\n    let body;\n    return new __HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"DELETE\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexport const se_DeleteObjectsCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = map({}, isSerializableHeaderValue, {\n        \"content-type\": \"application/xml\",\n        \"x-amz-mfa\": input.MFA,\n        \"x-amz-request-payer\": input.RequestPayer,\n        \"x-amz-bypass-governance-retention\": [\n            () => isSerializableHeaderValue(input.BypassGovernanceRetention),\n            () => input.BypassGovernanceRetention.toString(),\n        ],\n        \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n        \"x-amz-sdk-checksum-algorithm\": input.ChecksumAlgorithm,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/\";\n    resolvedPath = __resolvedPath(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = map({\n        delete: [, \"\"],\n        \"x-id\": [, \"DeleteObjects\"],\n    });\n    let body;\n    if (input.Delete !== undefined) {\n        body = se_Delete(input.Delete, context);\n    }\n    let contents;\n    if (input.Delete !== undefined) {\n        contents = se_Delete(input.Delete, context);\n        body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n        contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n        body += contents.toString();\n    }\n    return new __HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"POST\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexport const se_DeleteObjectTaggingCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = map({}, isSerializableHeaderValue, {\n        \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/{Key+}\";\n    resolvedPath = __resolvedPath(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    resolvedPath = __resolvedPath(resolvedPath, input, \"Key\", () => input.Key, \"{Key+}\", true);\n    const query = map({\n        tagging: [, \"\"],\n        versionId: [, input.VersionId],\n    });\n    let body;\n    return new __HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"DELETE\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexport const se_DeletePublicAccessBlockCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = map({}, isSerializableHeaderValue, {\n        \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/\";\n    resolvedPath = __resolvedPath(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = map({\n        publicAccessBlock: [, \"\"],\n    });\n    let body;\n    return new __HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"DELETE\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexport const se_GetBucketAccelerateConfigurationCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = map({}, isSerializableHeaderValue, {\n        \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n        \"x-amz-request-payer\": input.RequestPayer,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/\";\n    resolvedPath = __resolvedPath(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = map({\n        accelerate: [, \"\"],\n    });\n    let body;\n    return new __HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexport const se_GetBucketAclCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = map({}, isSerializableHeaderValue, {\n        \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/\";\n    resolvedPath = __resolvedPath(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = map({\n        acl: [, \"\"],\n    });\n    let body;\n    return new __HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexport const se_GetBucketAnalyticsConfigurationCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = map({}, isSerializableHeaderValue, {\n        \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/\";\n    resolvedPath = __resolvedPath(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = map({\n        analytics: [, \"\"],\n        \"x-id\": [, \"GetBucketAnalyticsConfiguration\"],\n        id: [, __expectNonNull(input.Id, `Id`)],\n    });\n    let body;\n    return new __HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexport const se_GetBucketCorsCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = map({}, isSerializableHeaderValue, {\n        \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/\";\n    resolvedPath = __resolvedPath(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = map({\n        cors: [, \"\"],\n    });\n    let body;\n    return new __HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexport const se_GetBucketEncryptionCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = map({}, isSerializableHeaderValue, {\n        \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/\";\n    resolvedPath = __resolvedPath(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = map({\n        encryption: [, \"\"],\n    });\n    let body;\n    return new __HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexport const se_GetBucketIntelligentTieringConfigurationCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {};\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/\";\n    resolvedPath = __resolvedPath(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = map({\n        \"intelligent-tiering\": [, \"\"],\n        \"x-id\": [, \"GetBucketIntelligentTieringConfiguration\"],\n        id: [, __expectNonNull(input.Id, `Id`)],\n    });\n    let body;\n    return new __HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexport const se_GetBucketInventoryConfigurationCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = map({}, isSerializableHeaderValue, {\n        \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/\";\n    resolvedPath = __resolvedPath(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = map({\n        inventory: [, \"\"],\n        \"x-id\": [, \"GetBucketInventoryConfiguration\"],\n        id: [, __expectNonNull(input.Id, `Id`)],\n    });\n    let body;\n    return new __HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexport const se_GetBucketLifecycleConfigurationCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = map({}, isSerializableHeaderValue, {\n        \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/\";\n    resolvedPath = __resolvedPath(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = map({\n        lifecycle: [, \"\"],\n    });\n    let body;\n    return new __HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexport const se_GetBucketLocationCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = map({}, isSerializableHeaderValue, {\n        \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/\";\n    resolvedPath = __resolvedPath(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = map({\n        location: [, \"\"],\n    });\n    let body;\n    return new __HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexport const se_GetBucketLoggingCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = map({}, isSerializableHeaderValue, {\n        \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/\";\n    resolvedPath = __resolvedPath(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = map({\n        logging: [, \"\"],\n    });\n    let body;\n    return new __HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexport const se_GetBucketMetricsConfigurationCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = map({}, isSerializableHeaderValue, {\n        \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/\";\n    resolvedPath = __resolvedPath(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = map({\n        metrics: [, \"\"],\n        \"x-id\": [, \"GetBucketMetricsConfiguration\"],\n        id: [, __expectNonNull(input.Id, `Id`)],\n    });\n    let body;\n    return new __HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexport const se_GetBucketNotificationConfigurationCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = map({}, isSerializableHeaderValue, {\n        \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/\";\n    resolvedPath = __resolvedPath(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = map({\n        notification: [, \"\"],\n    });\n    let body;\n    return new __HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexport const se_GetBucketOwnershipControlsCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = map({}, isSerializableHeaderValue, {\n        \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/\";\n    resolvedPath = __resolvedPath(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = map({\n        ownershipControls: [, \"\"],\n    });\n    let body;\n    return new __HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexport const se_GetBucketPolicyCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = map({}, isSerializableHeaderValue, {\n        \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/\";\n    resolvedPath = __resolvedPath(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = map({\n        policy: [, \"\"],\n    });\n    let body;\n    return new __HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexport const se_GetBucketPolicyStatusCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = map({}, isSerializableHeaderValue, {\n        \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/\";\n    resolvedPath = __resolvedPath(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = map({\n        policyStatus: [, \"\"],\n    });\n    let body;\n    return new __HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexport const se_GetBucketReplicationCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = map({}, isSerializableHeaderValue, {\n        \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/\";\n    resolvedPath = __resolvedPath(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = map({\n        replication: [, \"\"],\n    });\n    let body;\n    return new __HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexport const se_GetBucketRequestPaymentCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = map({}, isSerializableHeaderValue, {\n        \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/\";\n    resolvedPath = __resolvedPath(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = map({\n        requestPayment: [, \"\"],\n    });\n    let body;\n    return new __HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexport const se_GetBucketTaggingCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = map({}, isSerializableHeaderValue, {\n        \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/\";\n    resolvedPath = __resolvedPath(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = map({\n        tagging: [, \"\"],\n    });\n    let body;\n    return new __HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexport const se_GetBucketVersioningCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = map({}, isSerializableHeaderValue, {\n        \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/\";\n    resolvedPath = __resolvedPath(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = map({\n        versioning: [, \"\"],\n    });\n    let body;\n    return new __HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexport const se_GetBucketWebsiteCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = map({}, isSerializableHeaderValue, {\n        \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/\";\n    resolvedPath = __resolvedPath(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = map({\n        website: [, \"\"],\n    });\n    let body;\n    return new __HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexport const se_GetObjectCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = map({}, isSerializableHeaderValue, {\n        \"if-match\": input.IfMatch,\n        \"if-modified-since\": [\n            () => isSerializableHeaderValue(input.IfModifiedSince),\n            () => __dateToUtcString(input.IfModifiedSince).toString(),\n        ],\n        \"if-none-match\": input.IfNoneMatch,\n        \"if-unmodified-since\": [\n            () => isSerializableHeaderValue(input.IfUnmodifiedSince),\n            () => __dateToUtcString(input.IfUnmodifiedSince).toString(),\n        ],\n        range: input.Range,\n        \"x-amz-server-side-encryption-customer-algorithm\": input.SSECustomerAlgorithm,\n        \"x-amz-server-side-encryption-customer-key\": input.SSECustomerKey,\n        \"x-amz-server-side-encryption-customer-key-md5\": input.SSECustomerKeyMD5,\n        \"x-amz-request-payer\": input.RequestPayer,\n        \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n        \"x-amz-checksum-mode\": input.ChecksumMode,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/{Key+}\";\n    resolvedPath = __resolvedPath(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    resolvedPath = __resolvedPath(resolvedPath, input, \"Key\", () => input.Key, \"{Key+}\", true);\n    const query = map({\n        \"x-id\": [, \"GetObject\"],\n        \"response-cache-control\": [, input.ResponseCacheControl],\n        \"response-content-disposition\": [, input.ResponseContentDisposition],\n        \"response-content-encoding\": [, input.ResponseContentEncoding],\n        \"response-content-language\": [, input.ResponseContentLanguage],\n        \"response-content-type\": [, input.ResponseContentType],\n        \"response-expires\": [\n            () => input.ResponseExpires !== void 0,\n            () => __dateToUtcString(input.ResponseExpires).toString(),\n        ],\n        versionId: [, input.VersionId],\n        partNumber: [() => input.PartNumber !== void 0, () => input.PartNumber.toString()],\n    });\n    let body;\n    return new __HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexport const se_GetObjectAclCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = map({}, isSerializableHeaderValue, {\n        \"x-amz-request-payer\": input.RequestPayer,\n        \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/{Key+}\";\n    resolvedPath = __resolvedPath(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    resolvedPath = __resolvedPath(resolvedPath, input, \"Key\", () => input.Key, \"{Key+}\", true);\n    const query = map({\n        acl: [, \"\"],\n        versionId: [, input.VersionId],\n    });\n    let body;\n    return new __HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexport const se_GetObjectAttributesCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = map({}, isSerializableHeaderValue, {\n        \"x-amz-max-parts\": [() => isSerializableHeaderValue(input.MaxParts), () => input.MaxParts.toString()],\n        \"x-amz-part-number-marker\": input.PartNumberMarker,\n        \"x-amz-server-side-encryption-customer-algorithm\": input.SSECustomerAlgorithm,\n        \"x-amz-server-side-encryption-customer-key\": input.SSECustomerKey,\n        \"x-amz-server-side-encryption-customer-key-md5\": input.SSECustomerKeyMD5,\n        \"x-amz-request-payer\": input.RequestPayer,\n        \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n        \"x-amz-object-attributes\": [\n            () => isSerializableHeaderValue(input.ObjectAttributes),\n            () => (input.ObjectAttributes || []).map((_entry) => _entry).join(\", \"),\n        ],\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/{Key+}\";\n    resolvedPath = __resolvedPath(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    resolvedPath = __resolvedPath(resolvedPath, input, \"Key\", () => input.Key, \"{Key+}\", true);\n    const query = map({\n        attributes: [, \"\"],\n        versionId: [, input.VersionId],\n    });\n    let body;\n    return new __HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexport const se_GetObjectLegalHoldCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = map({}, isSerializableHeaderValue, {\n        \"x-amz-request-payer\": input.RequestPayer,\n        \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/{Key+}\";\n    resolvedPath = __resolvedPath(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    resolvedPath = __resolvedPath(resolvedPath, input, \"Key\", () => input.Key, \"{Key+}\", true);\n    const query = map({\n        \"legal-hold\": [, \"\"],\n        versionId: [, input.VersionId],\n    });\n    let body;\n    return new __HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexport const se_GetObjectLockConfigurationCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = map({}, isSerializableHeaderValue, {\n        \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/\";\n    resolvedPath = __resolvedPath(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = map({\n        \"object-lock\": [, \"\"],\n    });\n    let body;\n    return new __HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexport const se_GetObjectRetentionCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = map({}, isSerializableHeaderValue, {\n        \"x-amz-request-payer\": input.RequestPayer,\n        \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/{Key+}\";\n    resolvedPath = __resolvedPath(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    resolvedPath = __resolvedPath(resolvedPath, input, \"Key\", () => input.Key, \"{Key+}\", true);\n    const query = map({\n        retention: [, \"\"],\n        versionId: [, input.VersionId],\n    });\n    let body;\n    return new __HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexport const se_GetObjectTaggingCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = map({}, isSerializableHeaderValue, {\n        \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n        \"x-amz-request-payer\": input.RequestPayer,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/{Key+}\";\n    resolvedPath = __resolvedPath(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    resolvedPath = __resolvedPath(resolvedPath, input, \"Key\", () => input.Key, \"{Key+}\", true);\n    const query = map({\n        tagging: [, \"\"],\n        versionId: [, input.VersionId],\n    });\n    let body;\n    return new __HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexport const se_GetObjectTorrentCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = map({}, isSerializableHeaderValue, {\n        \"x-amz-request-payer\": input.RequestPayer,\n        \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/{Key+}\";\n    resolvedPath = __resolvedPath(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    resolvedPath = __resolvedPath(resolvedPath, input, \"Key\", () => input.Key, \"{Key+}\", true);\n    const query = map({\n        torrent: [, \"\"],\n    });\n    let body;\n    return new __HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexport const se_GetPublicAccessBlockCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = map({}, isSerializableHeaderValue, {\n        \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/\";\n    resolvedPath = __resolvedPath(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = map({\n        publicAccessBlock: [, \"\"],\n    });\n    let body;\n    return new __HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexport const se_HeadBucketCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = map({}, isSerializableHeaderValue, {\n        \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/\";\n    resolvedPath = __resolvedPath(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    let body;\n    return new __HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"HEAD\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexport const se_HeadObjectCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = map({}, isSerializableHeaderValue, {\n        \"if-match\": input.IfMatch,\n        \"if-modified-since\": [\n            () => isSerializableHeaderValue(input.IfModifiedSince),\n            () => __dateToUtcString(input.IfModifiedSince).toString(),\n        ],\n        \"if-none-match\": input.IfNoneMatch,\n        \"if-unmodified-since\": [\n            () => isSerializableHeaderValue(input.IfUnmodifiedSince),\n            () => __dateToUtcString(input.IfUnmodifiedSince).toString(),\n        ],\n        range: input.Range,\n        \"x-amz-server-side-encryption-customer-algorithm\": input.SSECustomerAlgorithm,\n        \"x-amz-server-side-encryption-customer-key\": input.SSECustomerKey,\n        \"x-amz-server-side-encryption-customer-key-md5\": input.SSECustomerKeyMD5,\n        \"x-amz-request-payer\": input.RequestPayer,\n        \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n        \"x-amz-checksum-mode\": input.ChecksumMode,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/{Key+}\";\n    resolvedPath = __resolvedPath(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    resolvedPath = __resolvedPath(resolvedPath, input, \"Key\", () => input.Key, \"{Key+}\", true);\n    const query = map({\n        versionId: [, input.VersionId],\n        partNumber: [() => input.PartNumber !== void 0, () => input.PartNumber.toString()],\n    });\n    let body;\n    return new __HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"HEAD\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexport const se_ListBucketAnalyticsConfigurationsCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = map({}, isSerializableHeaderValue, {\n        \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/\";\n    resolvedPath = __resolvedPath(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = map({\n        analytics: [, \"\"],\n        \"x-id\": [, \"ListBucketAnalyticsConfigurations\"],\n        \"continuation-token\": [, input.ContinuationToken],\n    });\n    let body;\n    return new __HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexport const se_ListBucketIntelligentTieringConfigurationsCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {};\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/\";\n    resolvedPath = __resolvedPath(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = map({\n        \"intelligent-tiering\": [, \"\"],\n        \"x-id\": [, \"ListBucketIntelligentTieringConfigurations\"],\n        \"continuation-token\": [, input.ContinuationToken],\n    });\n    let body;\n    return new __HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexport const se_ListBucketInventoryConfigurationsCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = map({}, isSerializableHeaderValue, {\n        \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/\";\n    resolvedPath = __resolvedPath(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = map({\n        inventory: [, \"\"],\n        \"x-id\": [, \"ListBucketInventoryConfigurations\"],\n        \"continuation-token\": [, input.ContinuationToken],\n    });\n    let body;\n    return new __HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexport const se_ListBucketMetricsConfigurationsCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = map({}, isSerializableHeaderValue, {\n        \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/\";\n    resolvedPath = __resolvedPath(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = map({\n        metrics: [, \"\"],\n        \"x-id\": [, \"ListBucketMetricsConfigurations\"],\n        \"continuation-token\": [, input.ContinuationToken],\n    });\n    let body;\n    return new __HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexport const se_ListBucketsCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {\n        \"content-type\": \"application/xml\",\n    };\n    const resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/\";\n    let body;\n    body = \"\";\n    return new __HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexport const se_ListMultipartUploadsCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = map({}, isSerializableHeaderValue, {\n        \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n        \"x-amz-request-payer\": input.RequestPayer,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/\";\n    resolvedPath = __resolvedPath(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = map({\n        uploads: [, \"\"],\n        delimiter: [, input.Delimiter],\n        \"encoding-type\": [, input.EncodingType],\n        \"key-marker\": [, input.KeyMarker],\n        \"max-uploads\": [() => input.MaxUploads !== void 0, () => input.MaxUploads.toString()],\n        prefix: [, input.Prefix],\n        \"upload-id-marker\": [, input.UploadIdMarker],\n    });\n    let body;\n    return new __HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexport const se_ListObjectsCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = map({}, isSerializableHeaderValue, {\n        \"x-amz-request-payer\": input.RequestPayer,\n        \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n        \"x-amz-optional-object-attributes\": [\n            () => isSerializableHeaderValue(input.OptionalObjectAttributes),\n            () => (input.OptionalObjectAttributes || []).map((_entry) => _entry).join(\", \"),\n        ],\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/\";\n    resolvedPath = __resolvedPath(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = map({\n        delimiter: [, input.Delimiter],\n        \"encoding-type\": [, input.EncodingType],\n        marker: [, input.Marker],\n        \"max-keys\": [() => input.MaxKeys !== void 0, () => input.MaxKeys.toString()],\n        prefix: [, input.Prefix],\n    });\n    let body;\n    return new __HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexport const se_ListObjectsV2Command = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = map({}, isSerializableHeaderValue, {\n        \"x-amz-request-payer\": input.RequestPayer,\n        \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n        \"x-amz-optional-object-attributes\": [\n            () => isSerializableHeaderValue(input.OptionalObjectAttributes),\n            () => (input.OptionalObjectAttributes || []).map((_entry) => _entry).join(\", \"),\n        ],\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/\";\n    resolvedPath = __resolvedPath(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = map({\n        \"list-type\": [, \"2\"],\n        delimiter: [, input.Delimiter],\n        \"encoding-type\": [, input.EncodingType],\n        \"max-keys\": [() => input.MaxKeys !== void 0, () => input.MaxKeys.toString()],\n        prefix: [, input.Prefix],\n        \"continuation-token\": [, input.ContinuationToken],\n        \"fetch-owner\": [() => input.FetchOwner !== void 0, () => input.FetchOwner.toString()],\n        \"start-after\": [, input.StartAfter],\n    });\n    let body;\n    return new __HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexport const se_ListObjectVersionsCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = map({}, isSerializableHeaderValue, {\n        \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n        \"x-amz-request-payer\": input.RequestPayer,\n        \"x-amz-optional-object-attributes\": [\n            () => isSerializableHeaderValue(input.OptionalObjectAttributes),\n            () => (input.OptionalObjectAttributes || []).map((_entry) => _entry).join(\", \"),\n        ],\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/\";\n    resolvedPath = __resolvedPath(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = map({\n        versions: [, \"\"],\n        delimiter: [, input.Delimiter],\n        \"encoding-type\": [, input.EncodingType],\n        \"key-marker\": [, input.KeyMarker],\n        \"max-keys\": [() => input.MaxKeys !== void 0, () => input.MaxKeys.toString()],\n        prefix: [, input.Prefix],\n        \"version-id-marker\": [, input.VersionIdMarker],\n    });\n    let body;\n    return new __HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexport const se_ListPartsCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = map({}, isSerializableHeaderValue, {\n        \"x-amz-request-payer\": input.RequestPayer,\n        \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n        \"x-amz-server-side-encryption-customer-algorithm\": input.SSECustomerAlgorithm,\n        \"x-amz-server-side-encryption-customer-key\": input.SSECustomerKey,\n        \"x-amz-server-side-encryption-customer-key-md5\": input.SSECustomerKeyMD5,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/{Key+}\";\n    resolvedPath = __resolvedPath(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    resolvedPath = __resolvedPath(resolvedPath, input, \"Key\", () => input.Key, \"{Key+}\", true);\n    const query = map({\n        \"x-id\": [, \"ListParts\"],\n        \"max-parts\": [() => input.MaxParts !== void 0, () => input.MaxParts.toString()],\n        \"part-number-marker\": [, input.PartNumberMarker],\n        uploadId: [, __expectNonNull(input.UploadId, `UploadId`)],\n    });\n    let body;\n    return new __HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexport const se_PutBucketAccelerateConfigurationCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = map({}, isSerializableHeaderValue, {\n        \"content-type\": \"application/xml\",\n        \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n        \"x-amz-sdk-checksum-algorithm\": input.ChecksumAlgorithm,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/\";\n    resolvedPath = __resolvedPath(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = map({\n        accelerate: [, \"\"],\n    });\n    let body;\n    if (input.AccelerateConfiguration !== undefined) {\n        body = se_AccelerateConfiguration(input.AccelerateConfiguration, context);\n    }\n    let contents;\n    if (input.AccelerateConfiguration !== undefined) {\n        contents = se_AccelerateConfiguration(input.AccelerateConfiguration, context);\n        body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n        contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n        body += contents.toString();\n    }\n    return new __HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"PUT\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexport const se_PutBucketAclCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = map({}, isSerializableHeaderValue, {\n        \"content-type\": \"application/xml\",\n        \"x-amz-acl\": input.ACL,\n        \"content-md5\": input.ContentMD5,\n        \"x-amz-sdk-checksum-algorithm\": input.ChecksumAlgorithm,\n        \"x-amz-grant-full-control\": input.GrantFullControl,\n        \"x-amz-grant-read\": input.GrantRead,\n        \"x-amz-grant-read-acp\": input.GrantReadACP,\n        \"x-amz-grant-write\": input.GrantWrite,\n        \"x-amz-grant-write-acp\": input.GrantWriteACP,\n        \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/\";\n    resolvedPath = __resolvedPath(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = map({\n        acl: [, \"\"],\n    });\n    let body;\n    if (input.AccessControlPolicy !== undefined) {\n        body = se_AccessControlPolicy(input.AccessControlPolicy, context);\n    }\n    let contents;\n    if (input.AccessControlPolicy !== undefined) {\n        contents = se_AccessControlPolicy(input.AccessControlPolicy, context);\n        body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n        contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n        body += contents.toString();\n    }\n    return new __HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"PUT\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexport const se_PutBucketAnalyticsConfigurationCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = map({}, isSerializableHeaderValue, {\n        \"content-type\": \"application/xml\",\n        \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/\";\n    resolvedPath = __resolvedPath(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = map({\n        analytics: [, \"\"],\n        id: [, __expectNonNull(input.Id, `Id`)],\n    });\n    let body;\n    if (input.AnalyticsConfiguration !== undefined) {\n        body = se_AnalyticsConfiguration(input.AnalyticsConfiguration, context);\n    }\n    let contents;\n    if (input.AnalyticsConfiguration !== undefined) {\n        contents = se_AnalyticsConfiguration(input.AnalyticsConfiguration, context);\n        body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n        contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n        body += contents.toString();\n    }\n    return new __HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"PUT\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexport const se_PutBucketCorsCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = map({}, isSerializableHeaderValue, {\n        \"content-type\": \"application/xml\",\n        \"content-md5\": input.ContentMD5,\n        \"x-amz-sdk-checksum-algorithm\": input.ChecksumAlgorithm,\n        \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/\";\n    resolvedPath = __resolvedPath(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = map({\n        cors: [, \"\"],\n    });\n    let body;\n    if (input.CORSConfiguration !== undefined) {\n        body = se_CORSConfiguration(input.CORSConfiguration, context);\n    }\n    let contents;\n    if (input.CORSConfiguration !== undefined) {\n        contents = se_CORSConfiguration(input.CORSConfiguration, context);\n        body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n        contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n        body += contents.toString();\n    }\n    return new __HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"PUT\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexport const se_PutBucketEncryptionCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = map({}, isSerializableHeaderValue, {\n        \"content-type\": \"application/xml\",\n        \"content-md5\": input.ContentMD5,\n        \"x-amz-sdk-checksum-algorithm\": input.ChecksumAlgorithm,\n        \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/\";\n    resolvedPath = __resolvedPath(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = map({\n        encryption: [, \"\"],\n    });\n    let body;\n    if (input.ServerSideEncryptionConfiguration !== undefined) {\n        body = se_ServerSideEncryptionConfiguration(input.ServerSideEncryptionConfiguration, context);\n    }\n    let contents;\n    if (input.ServerSideEncryptionConfiguration !== undefined) {\n        contents = se_ServerSideEncryptionConfiguration(input.ServerSideEncryptionConfiguration, context);\n        body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n        contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n        body += contents.toString();\n    }\n    return new __HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"PUT\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexport const se_PutBucketIntelligentTieringConfigurationCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {\n        \"content-type\": \"application/xml\",\n    };\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/\";\n    resolvedPath = __resolvedPath(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = map({\n        \"intelligent-tiering\": [, \"\"],\n        id: [, __expectNonNull(input.Id, `Id`)],\n    });\n    let body;\n    if (input.IntelligentTieringConfiguration !== undefined) {\n        body = se_IntelligentTieringConfiguration(input.IntelligentTieringConfiguration, context);\n    }\n    let contents;\n    if (input.IntelligentTieringConfiguration !== undefined) {\n        contents = se_IntelligentTieringConfiguration(input.IntelligentTieringConfiguration, context);\n        body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n        contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n        body += contents.toString();\n    }\n    return new __HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"PUT\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexport const se_PutBucketInventoryConfigurationCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = map({}, isSerializableHeaderValue, {\n        \"content-type\": \"application/xml\",\n        \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/\";\n    resolvedPath = __resolvedPath(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = map({\n        inventory: [, \"\"],\n        id: [, __expectNonNull(input.Id, `Id`)],\n    });\n    let body;\n    if (input.InventoryConfiguration !== undefined) {\n        body = se_InventoryConfiguration(input.InventoryConfiguration, context);\n    }\n    let contents;\n    if (input.InventoryConfiguration !== undefined) {\n        contents = se_InventoryConfiguration(input.InventoryConfiguration, context);\n        body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n        contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n        body += contents.toString();\n    }\n    return new __HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"PUT\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexport const se_PutBucketLifecycleConfigurationCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = map({}, isSerializableHeaderValue, {\n        \"content-type\": \"application/xml\",\n        \"x-amz-sdk-checksum-algorithm\": input.ChecksumAlgorithm,\n        \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/\";\n    resolvedPath = __resolvedPath(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = map({\n        lifecycle: [, \"\"],\n    });\n    let body;\n    if (input.LifecycleConfiguration !== undefined) {\n        body = se_BucketLifecycleConfiguration(input.LifecycleConfiguration, context);\n    }\n    let contents;\n    if (input.LifecycleConfiguration !== undefined) {\n        contents = se_BucketLifecycleConfiguration(input.LifecycleConfiguration, context);\n        contents = contents.withName(\"LifecycleConfiguration\");\n        body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n        contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n        body += contents.toString();\n    }\n    return new __HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"PUT\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexport const se_PutBucketLoggingCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = map({}, isSerializableHeaderValue, {\n        \"content-type\": \"application/xml\",\n        \"content-md5\": input.ContentMD5,\n        \"x-amz-sdk-checksum-algorithm\": input.ChecksumAlgorithm,\n        \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/\";\n    resolvedPath = __resolvedPath(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = map({\n        logging: [, \"\"],\n    });\n    let body;\n    if (input.BucketLoggingStatus !== undefined) {\n        body = se_BucketLoggingStatus(input.BucketLoggingStatus, context);\n    }\n    let contents;\n    if (input.BucketLoggingStatus !== undefined) {\n        contents = se_BucketLoggingStatus(input.BucketLoggingStatus, context);\n        body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n        contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n        body += contents.toString();\n    }\n    return new __HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"PUT\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexport const se_PutBucketMetricsConfigurationCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = map({}, isSerializableHeaderValue, {\n        \"content-type\": \"application/xml\",\n        \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/\";\n    resolvedPath = __resolvedPath(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = map({\n        metrics: [, \"\"],\n        id: [, __expectNonNull(input.Id, `Id`)],\n    });\n    let body;\n    if (input.MetricsConfiguration !== undefined) {\n        body = se_MetricsConfiguration(input.MetricsConfiguration, context);\n    }\n    let contents;\n    if (input.MetricsConfiguration !== undefined) {\n        contents = se_MetricsConfiguration(input.MetricsConfiguration, context);\n        body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n        contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n        body += contents.toString();\n    }\n    return new __HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"PUT\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexport const se_PutBucketNotificationConfigurationCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = map({}, isSerializableHeaderValue, {\n        \"content-type\": \"application/xml\",\n        \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n        \"x-amz-skip-destination-validation\": [\n            () => isSerializableHeaderValue(input.SkipDestinationValidation),\n            () => input.SkipDestinationValidation.toString(),\n        ],\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/\";\n    resolvedPath = __resolvedPath(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = map({\n        notification: [, \"\"],\n    });\n    let body;\n    if (input.NotificationConfiguration !== undefined) {\n        body = se_NotificationConfiguration(input.NotificationConfiguration, context);\n    }\n    let contents;\n    if (input.NotificationConfiguration !== undefined) {\n        contents = se_NotificationConfiguration(input.NotificationConfiguration, context);\n        body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n        contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n        body += contents.toString();\n    }\n    return new __HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"PUT\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexport const se_PutBucketOwnershipControlsCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = map({}, isSerializableHeaderValue, {\n        \"content-type\": \"application/xml\",\n        \"content-md5\": input.ContentMD5,\n        \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/\";\n    resolvedPath = __resolvedPath(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = map({\n        ownershipControls: [, \"\"],\n    });\n    let body;\n    if (input.OwnershipControls !== undefined) {\n        body = se_OwnershipControls(input.OwnershipControls, context);\n    }\n    let contents;\n    if (input.OwnershipControls !== undefined) {\n        contents = se_OwnershipControls(input.OwnershipControls, context);\n        body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n        contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n        body += contents.toString();\n    }\n    return new __HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"PUT\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexport const se_PutBucketPolicyCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = map({}, isSerializableHeaderValue, {\n        \"content-type\": \"text/plain\",\n        \"content-md5\": input.ContentMD5,\n        \"x-amz-sdk-checksum-algorithm\": input.ChecksumAlgorithm,\n        \"x-amz-confirm-remove-self-bucket-access\": [\n            () => isSerializableHeaderValue(input.ConfirmRemoveSelfBucketAccess),\n            () => input.ConfirmRemoveSelfBucketAccess.toString(),\n        ],\n        \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/\";\n    resolvedPath = __resolvedPath(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = map({\n        policy: [, \"\"],\n    });\n    let body;\n    if (input.Policy !== undefined) {\n        body = input.Policy;\n    }\n    let contents;\n    if (input.Policy !== undefined) {\n        contents = input.Policy;\n        body = contents;\n    }\n    return new __HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"PUT\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexport const se_PutBucketReplicationCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = map({}, isSerializableHeaderValue, {\n        \"content-type\": \"application/xml\",\n        \"content-md5\": input.ContentMD5,\n        \"x-amz-sdk-checksum-algorithm\": input.ChecksumAlgorithm,\n        \"x-amz-bucket-object-lock-token\": input.Token,\n        \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/\";\n    resolvedPath = __resolvedPath(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = map({\n        replication: [, \"\"],\n    });\n    let body;\n    if (input.ReplicationConfiguration !== undefined) {\n        body = se_ReplicationConfiguration(input.ReplicationConfiguration, context);\n    }\n    let contents;\n    if (input.ReplicationConfiguration !== undefined) {\n        contents = se_ReplicationConfiguration(input.ReplicationConfiguration, context);\n        body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n        contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n        body += contents.toString();\n    }\n    return new __HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"PUT\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexport const se_PutBucketRequestPaymentCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = map({}, isSerializableHeaderValue, {\n        \"content-type\": \"application/xml\",\n        \"content-md5\": input.ContentMD5,\n        \"x-amz-sdk-checksum-algorithm\": input.ChecksumAlgorithm,\n        \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/\";\n    resolvedPath = __resolvedPath(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = map({\n        requestPayment: [, \"\"],\n    });\n    let body;\n    if (input.RequestPaymentConfiguration !== undefined) {\n        body = se_RequestPaymentConfiguration(input.RequestPaymentConfiguration, context);\n    }\n    let contents;\n    if (input.RequestPaymentConfiguration !== undefined) {\n        contents = se_RequestPaymentConfiguration(input.RequestPaymentConfiguration, context);\n        body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n        contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n        body += contents.toString();\n    }\n    return new __HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"PUT\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexport const se_PutBucketTaggingCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = map({}, isSerializableHeaderValue, {\n        \"content-type\": \"application/xml\",\n        \"content-md5\": input.ContentMD5,\n        \"x-amz-sdk-checksum-algorithm\": input.ChecksumAlgorithm,\n        \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/\";\n    resolvedPath = __resolvedPath(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = map({\n        tagging: [, \"\"],\n    });\n    let body;\n    if (input.Tagging !== undefined) {\n        body = se_Tagging(input.Tagging, context);\n    }\n    let contents;\n    if (input.Tagging !== undefined) {\n        contents = se_Tagging(input.Tagging, context);\n        body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n        contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n        body += contents.toString();\n    }\n    return new __HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"PUT\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexport const se_PutBucketVersioningCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = map({}, isSerializableHeaderValue, {\n        \"content-type\": \"application/xml\",\n        \"content-md5\": input.ContentMD5,\n        \"x-amz-sdk-checksum-algorithm\": input.ChecksumAlgorithm,\n        \"x-amz-mfa\": input.MFA,\n        \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/\";\n    resolvedPath = __resolvedPath(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = map({\n        versioning: [, \"\"],\n    });\n    let body;\n    if (input.VersioningConfiguration !== undefined) {\n        body = se_VersioningConfiguration(input.VersioningConfiguration, context);\n    }\n    let contents;\n    if (input.VersioningConfiguration !== undefined) {\n        contents = se_VersioningConfiguration(input.VersioningConfiguration, context);\n        body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n        contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n        body += contents.toString();\n    }\n    return new __HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"PUT\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexport const se_PutBucketWebsiteCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = map({}, isSerializableHeaderValue, {\n        \"content-type\": \"application/xml\",\n        \"content-md5\": input.ContentMD5,\n        \"x-amz-sdk-checksum-algorithm\": input.ChecksumAlgorithm,\n        \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/\";\n    resolvedPath = __resolvedPath(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = map({\n        website: [, \"\"],\n    });\n    let body;\n    if (input.WebsiteConfiguration !== undefined) {\n        body = se_WebsiteConfiguration(input.WebsiteConfiguration, context);\n    }\n    let contents;\n    if (input.WebsiteConfiguration !== undefined) {\n        contents = se_WebsiteConfiguration(input.WebsiteConfiguration, context);\n        body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n        contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n        body += contents.toString();\n    }\n    return new __HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"PUT\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexport const se_PutObjectCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = map({}, isSerializableHeaderValue, {\n        \"content-type\": input.ContentType || \"application/octet-stream\",\n        \"x-amz-acl\": input.ACL,\n        \"cache-control\": input.CacheControl,\n        \"content-disposition\": input.ContentDisposition,\n        \"content-encoding\": input.ContentEncoding,\n        \"content-language\": input.ContentLanguage,\n        \"content-length\": [() => isSerializableHeaderValue(input.ContentLength), () => input.ContentLength.toString()],\n        \"content-md5\": input.ContentMD5,\n        \"x-amz-sdk-checksum-algorithm\": input.ChecksumAlgorithm,\n        \"x-amz-checksum-crc32\": input.ChecksumCRC32,\n        \"x-amz-checksum-crc32c\": input.ChecksumCRC32C,\n        \"x-amz-checksum-sha1\": input.ChecksumSHA1,\n        \"x-amz-checksum-sha256\": input.ChecksumSHA256,\n        expires: [() => isSerializableHeaderValue(input.Expires), () => __dateToUtcString(input.Expires).toString()],\n        \"x-amz-grant-full-control\": input.GrantFullControl,\n        \"x-amz-grant-read\": input.GrantRead,\n        \"x-amz-grant-read-acp\": input.GrantReadACP,\n        \"x-amz-grant-write-acp\": input.GrantWriteACP,\n        \"x-amz-server-side-encryption\": input.ServerSideEncryption,\n        \"x-amz-storage-class\": input.StorageClass,\n        \"x-amz-website-redirect-location\": input.WebsiteRedirectLocation,\n        \"x-amz-server-side-encryption-customer-algorithm\": input.SSECustomerAlgorithm,\n        \"x-amz-server-side-encryption-customer-key\": input.SSECustomerKey,\n        \"x-amz-server-side-encryption-customer-key-md5\": input.SSECustomerKeyMD5,\n        \"x-amz-server-side-encryption-aws-kms-key-id\": input.SSEKMSKeyId,\n        \"x-amz-server-side-encryption-context\": input.SSEKMSEncryptionContext,\n        \"x-amz-server-side-encryption-bucket-key-enabled\": [\n            () => isSerializableHeaderValue(input.BucketKeyEnabled),\n            () => input.BucketKeyEnabled.toString(),\n        ],\n        \"x-amz-request-payer\": input.RequestPayer,\n        \"x-amz-tagging\": input.Tagging,\n        \"x-amz-object-lock-mode\": input.ObjectLockMode,\n        \"x-amz-object-lock-retain-until-date\": [\n            () => isSerializableHeaderValue(input.ObjectLockRetainUntilDate),\n            () => (input.ObjectLockRetainUntilDate.toISOString().split(\".\")[0] + \"Z\").toString(),\n        ],\n        \"x-amz-object-lock-legal-hold\": input.ObjectLockLegalHoldStatus,\n        \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n        ...(input.Metadata !== undefined &&\n            Object.keys(input.Metadata).reduce((acc, suffix) => {\n                acc[`x-amz-meta-${suffix.toLowerCase()}`] = input.Metadata[suffix];\n                return acc;\n            }, {})),\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/{Key+}\";\n    resolvedPath = __resolvedPath(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    resolvedPath = __resolvedPath(resolvedPath, input, \"Key\", () => input.Key, \"{Key+}\", true);\n    const query = map({\n        \"x-id\": [, \"PutObject\"],\n    });\n    let body;\n    if (input.Body !== undefined) {\n        body = input.Body;\n    }\n    let contents;\n    if (input.Body !== undefined) {\n        contents = input.Body;\n        body = contents;\n    }\n    return new __HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"PUT\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexport const se_PutObjectAclCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = map({}, isSerializableHeaderValue, {\n        \"content-type\": \"application/xml\",\n        \"x-amz-acl\": input.ACL,\n        \"content-md5\": input.ContentMD5,\n        \"x-amz-sdk-checksum-algorithm\": input.ChecksumAlgorithm,\n        \"x-amz-grant-full-control\": input.GrantFullControl,\n        \"x-amz-grant-read\": input.GrantRead,\n        \"x-amz-grant-read-acp\": input.GrantReadACP,\n        \"x-amz-grant-write\": input.GrantWrite,\n        \"x-amz-grant-write-acp\": input.GrantWriteACP,\n        \"x-amz-request-payer\": input.RequestPayer,\n        \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/{Key+}\";\n    resolvedPath = __resolvedPath(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    resolvedPath = __resolvedPath(resolvedPath, input, \"Key\", () => input.Key, \"{Key+}\", true);\n    const query = map({\n        acl: [, \"\"],\n        versionId: [, input.VersionId],\n    });\n    let body;\n    if (input.AccessControlPolicy !== undefined) {\n        body = se_AccessControlPolicy(input.AccessControlPolicy, context);\n    }\n    let contents;\n    if (input.AccessControlPolicy !== undefined) {\n        contents = se_AccessControlPolicy(input.AccessControlPolicy, context);\n        body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n        contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n        body += contents.toString();\n    }\n    return new __HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"PUT\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexport const se_PutObjectLegalHoldCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = map({}, isSerializableHeaderValue, {\n        \"content-type\": \"application/xml\",\n        \"x-amz-request-payer\": input.RequestPayer,\n        \"content-md5\": input.ContentMD5,\n        \"x-amz-sdk-checksum-algorithm\": input.ChecksumAlgorithm,\n        \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/{Key+}\";\n    resolvedPath = __resolvedPath(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    resolvedPath = __resolvedPath(resolvedPath, input, \"Key\", () => input.Key, \"{Key+}\", true);\n    const query = map({\n        \"legal-hold\": [, \"\"],\n        versionId: [, input.VersionId],\n    });\n    let body;\n    if (input.LegalHold !== undefined) {\n        body = se_ObjectLockLegalHold(input.LegalHold, context);\n    }\n    let contents;\n    if (input.LegalHold !== undefined) {\n        contents = se_ObjectLockLegalHold(input.LegalHold, context);\n        contents = contents.withName(\"LegalHold\");\n        body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n        contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n        body += contents.toString();\n    }\n    return new __HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"PUT\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexport const se_PutObjectLockConfigurationCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = map({}, isSerializableHeaderValue, {\n        \"content-type\": \"application/xml\",\n        \"x-amz-request-payer\": input.RequestPayer,\n        \"x-amz-bucket-object-lock-token\": input.Token,\n        \"content-md5\": input.ContentMD5,\n        \"x-amz-sdk-checksum-algorithm\": input.ChecksumAlgorithm,\n        \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/\";\n    resolvedPath = __resolvedPath(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = map({\n        \"object-lock\": [, \"\"],\n    });\n    let body;\n    if (input.ObjectLockConfiguration !== undefined) {\n        body = se_ObjectLockConfiguration(input.ObjectLockConfiguration, context);\n    }\n    let contents;\n    if (input.ObjectLockConfiguration !== undefined) {\n        contents = se_ObjectLockConfiguration(input.ObjectLockConfiguration, context);\n        body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n        contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n        body += contents.toString();\n    }\n    return new __HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"PUT\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexport const se_PutObjectRetentionCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = map({}, isSerializableHeaderValue, {\n        \"content-type\": \"application/xml\",\n        \"x-amz-request-payer\": input.RequestPayer,\n        \"x-amz-bypass-governance-retention\": [\n            () => isSerializableHeaderValue(input.BypassGovernanceRetention),\n            () => input.BypassGovernanceRetention.toString(),\n        ],\n        \"content-md5\": input.ContentMD5,\n        \"x-amz-sdk-checksum-algorithm\": input.ChecksumAlgorithm,\n        \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/{Key+}\";\n    resolvedPath = __resolvedPath(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    resolvedPath = __resolvedPath(resolvedPath, input, \"Key\", () => input.Key, \"{Key+}\", true);\n    const query = map({\n        retention: [, \"\"],\n        versionId: [, input.VersionId],\n    });\n    let body;\n    if (input.Retention !== undefined) {\n        body = se_ObjectLockRetention(input.Retention, context);\n    }\n    let contents;\n    if (input.Retention !== undefined) {\n        contents = se_ObjectLockRetention(input.Retention, context);\n        contents = contents.withName(\"Retention\");\n        body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n        contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n        body += contents.toString();\n    }\n    return new __HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"PUT\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexport const se_PutObjectTaggingCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = map({}, isSerializableHeaderValue, {\n        \"content-type\": \"application/xml\",\n        \"content-md5\": input.ContentMD5,\n        \"x-amz-sdk-checksum-algorithm\": input.ChecksumAlgorithm,\n        \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n        \"x-amz-request-payer\": input.RequestPayer,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/{Key+}\";\n    resolvedPath = __resolvedPath(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    resolvedPath = __resolvedPath(resolvedPath, input, \"Key\", () => input.Key, \"{Key+}\", true);\n    const query = map({\n        tagging: [, \"\"],\n        versionId: [, input.VersionId],\n    });\n    let body;\n    if (input.Tagging !== undefined) {\n        body = se_Tagging(input.Tagging, context);\n    }\n    let contents;\n    if (input.Tagging !== undefined) {\n        contents = se_Tagging(input.Tagging, context);\n        body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n        contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n        body += contents.toString();\n    }\n    return new __HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"PUT\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexport const se_PutPublicAccessBlockCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = map({}, isSerializableHeaderValue, {\n        \"content-type\": \"application/xml\",\n        \"content-md5\": input.ContentMD5,\n        \"x-amz-sdk-checksum-algorithm\": input.ChecksumAlgorithm,\n        \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/\";\n    resolvedPath = __resolvedPath(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = map({\n        publicAccessBlock: [, \"\"],\n    });\n    let body;\n    if (input.PublicAccessBlockConfiguration !== undefined) {\n        body = se_PublicAccessBlockConfiguration(input.PublicAccessBlockConfiguration, context);\n    }\n    let contents;\n    if (input.PublicAccessBlockConfiguration !== undefined) {\n        contents = se_PublicAccessBlockConfiguration(input.PublicAccessBlockConfiguration, context);\n        body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n        contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n        body += contents.toString();\n    }\n    return new __HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"PUT\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexport const se_RestoreObjectCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = map({}, isSerializableHeaderValue, {\n        \"content-type\": \"application/xml\",\n        \"x-amz-request-payer\": input.RequestPayer,\n        \"x-amz-sdk-checksum-algorithm\": input.ChecksumAlgorithm,\n        \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/{Key+}\";\n    resolvedPath = __resolvedPath(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    resolvedPath = __resolvedPath(resolvedPath, input, \"Key\", () => input.Key, \"{Key+}\", true);\n    const query = map({\n        restore: [, \"\"],\n        \"x-id\": [, \"RestoreObject\"],\n        versionId: [, input.VersionId],\n    });\n    let body;\n    if (input.RestoreRequest !== undefined) {\n        body = se_RestoreRequest(input.RestoreRequest, context);\n    }\n    let contents;\n    if (input.RestoreRequest !== undefined) {\n        contents = se_RestoreRequest(input.RestoreRequest, context);\n        body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n        contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n        body += contents.toString();\n    }\n    return new __HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"POST\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexport const se_SelectObjectContentCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = map({}, isSerializableHeaderValue, {\n        \"content-type\": \"application/xml\",\n        \"x-amz-server-side-encryption-customer-algorithm\": input.SSECustomerAlgorithm,\n        \"x-amz-server-side-encryption-customer-key\": input.SSECustomerKey,\n        \"x-amz-server-side-encryption-customer-key-md5\": input.SSECustomerKeyMD5,\n        \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/{Key+}\";\n    resolvedPath = __resolvedPath(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    resolvedPath = __resolvedPath(resolvedPath, input, \"Key\", () => input.Key, \"{Key+}\", true);\n    const query = map({\n        select: [, \"\"],\n        \"select-type\": [, \"2\"],\n        \"x-id\": [, \"SelectObjectContent\"],\n    });\n    let body;\n    body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n    const bodyNode = new __XmlNode(\"SelectObjectContentRequest\");\n    bodyNode.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n    if (input.Expression !== undefined) {\n        const node = __XmlNode.of(\"Expression\", input.Expression).withName(\"Expression\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.ExpressionType !== undefined) {\n        const node = __XmlNode.of(\"ExpressionType\", input.ExpressionType).withName(\"ExpressionType\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.InputSerialization !== undefined) {\n        const node = se_InputSerialization(input.InputSerialization, context).withName(\"InputSerialization\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.OutputSerialization !== undefined) {\n        const node = se_OutputSerialization(input.OutputSerialization, context).withName(\"OutputSerialization\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.RequestProgress !== undefined) {\n        const node = se_RequestProgress(input.RequestProgress, context).withName(\"RequestProgress\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.ScanRange !== undefined) {\n        const node = se_ScanRange(input.ScanRange, context).withName(\"ScanRange\");\n        bodyNode.addChildNode(node);\n    }\n    body += bodyNode.toString();\n    return new __HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"POST\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexport const se_UploadPartCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = map({}, isSerializableHeaderValue, {\n        \"content-type\": \"application/octet-stream\",\n        \"content-length\": [() => isSerializableHeaderValue(input.ContentLength), () => input.ContentLength.toString()],\n        \"content-md5\": input.ContentMD5,\n        \"x-amz-sdk-checksum-algorithm\": input.ChecksumAlgorithm,\n        \"x-amz-checksum-crc32\": input.ChecksumCRC32,\n        \"x-amz-checksum-crc32c\": input.ChecksumCRC32C,\n        \"x-amz-checksum-sha1\": input.ChecksumSHA1,\n        \"x-amz-checksum-sha256\": input.ChecksumSHA256,\n        \"x-amz-server-side-encryption-customer-algorithm\": input.SSECustomerAlgorithm,\n        \"x-amz-server-side-encryption-customer-key\": input.SSECustomerKey,\n        \"x-amz-server-side-encryption-customer-key-md5\": input.SSECustomerKeyMD5,\n        \"x-amz-request-payer\": input.RequestPayer,\n        \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/{Key+}\";\n    resolvedPath = __resolvedPath(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    resolvedPath = __resolvedPath(resolvedPath, input, \"Key\", () => input.Key, \"{Key+}\", true);\n    const query = map({\n        \"x-id\": [, \"UploadPart\"],\n        partNumber: [__expectNonNull(input.PartNumber, `PartNumber`) != null, () => input.PartNumber.toString()],\n        uploadId: [, __expectNonNull(input.UploadId, `UploadId`)],\n    });\n    let body;\n    if (input.Body !== undefined) {\n        body = input.Body;\n    }\n    let contents;\n    if (input.Body !== undefined) {\n        contents = input.Body;\n        body = contents;\n    }\n    return new __HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"PUT\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexport const se_UploadPartCopyCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = map({}, isSerializableHeaderValue, {\n        \"x-amz-copy-source\": input.CopySource,\n        \"x-amz-copy-source-if-match\": input.CopySourceIfMatch,\n        \"x-amz-copy-source-if-modified-since\": [\n            () => isSerializableHeaderValue(input.CopySourceIfModifiedSince),\n            () => __dateToUtcString(input.CopySourceIfModifiedSince).toString(),\n        ],\n        \"x-amz-copy-source-if-none-match\": input.CopySourceIfNoneMatch,\n        \"x-amz-copy-source-if-unmodified-since\": [\n            () => isSerializableHeaderValue(input.CopySourceIfUnmodifiedSince),\n            () => __dateToUtcString(input.CopySourceIfUnmodifiedSince).toString(),\n        ],\n        \"x-amz-copy-source-range\": input.CopySourceRange,\n        \"x-amz-server-side-encryption-customer-algorithm\": input.SSECustomerAlgorithm,\n        \"x-amz-server-side-encryption-customer-key\": input.SSECustomerKey,\n        \"x-amz-server-side-encryption-customer-key-md5\": input.SSECustomerKeyMD5,\n        \"x-amz-copy-source-server-side-encryption-customer-algorithm\": input.CopySourceSSECustomerAlgorithm,\n        \"x-amz-copy-source-server-side-encryption-customer-key\": input.CopySourceSSECustomerKey,\n        \"x-amz-copy-source-server-side-encryption-customer-key-md5\": input.CopySourceSSECustomerKeyMD5,\n        \"x-amz-request-payer\": input.RequestPayer,\n        \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n        \"x-amz-source-expected-bucket-owner\": input.ExpectedSourceBucketOwner,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/{Key+}\";\n    resolvedPath = __resolvedPath(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    resolvedPath = __resolvedPath(resolvedPath, input, \"Key\", () => input.Key, \"{Key+}\", true);\n    const query = map({\n        \"x-id\": [, \"UploadPartCopy\"],\n        partNumber: [__expectNonNull(input.PartNumber, `PartNumber`) != null, () => input.PartNumber.toString()],\n        uploadId: [, __expectNonNull(input.UploadId, `UploadId`)],\n    });\n    let body;\n    return new __HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"PUT\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexport const se_WriteGetObjectResponseCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = map({}, isSerializableHeaderValue, {\n        \"x-amz-content-sha256\": \"UNSIGNED-PAYLOAD\",\n        \"content-type\": \"application/octet-stream\",\n        \"x-amz-request-route\": input.RequestRoute,\n        \"x-amz-request-token\": input.RequestToken,\n        \"x-amz-fwd-status\": [() => isSerializableHeaderValue(input.StatusCode), () => input.StatusCode.toString()],\n        \"x-amz-fwd-error-code\": input.ErrorCode,\n        \"x-amz-fwd-error-message\": input.ErrorMessage,\n        \"x-amz-fwd-header-accept-ranges\": input.AcceptRanges,\n        \"x-amz-fwd-header-cache-control\": input.CacheControl,\n        \"x-amz-fwd-header-content-disposition\": input.ContentDisposition,\n        \"x-amz-fwd-header-content-encoding\": input.ContentEncoding,\n        \"x-amz-fwd-header-content-language\": input.ContentLanguage,\n        \"content-length\": [() => isSerializableHeaderValue(input.ContentLength), () => input.ContentLength.toString()],\n        \"x-amz-fwd-header-content-range\": input.ContentRange,\n        \"x-amz-fwd-header-content-type\": input.ContentType,\n        \"x-amz-fwd-header-x-amz-checksum-crc32\": input.ChecksumCRC32,\n        \"x-amz-fwd-header-x-amz-checksum-crc32c\": input.ChecksumCRC32C,\n        \"x-amz-fwd-header-x-amz-checksum-sha1\": input.ChecksumSHA1,\n        \"x-amz-fwd-header-x-amz-checksum-sha256\": input.ChecksumSHA256,\n        \"x-amz-fwd-header-x-amz-delete-marker\": [\n            () => isSerializableHeaderValue(input.DeleteMarker),\n            () => input.DeleteMarker.toString(),\n        ],\n        \"x-amz-fwd-header-etag\": input.ETag,\n        \"x-amz-fwd-header-expires\": [\n            () => isSerializableHeaderValue(input.Expires),\n            () => __dateToUtcString(input.Expires).toString(),\n        ],\n        \"x-amz-fwd-header-x-amz-expiration\": input.Expiration,\n        \"x-amz-fwd-header-last-modified\": [\n            () => isSerializableHeaderValue(input.LastModified),\n            () => __dateToUtcString(input.LastModified).toString(),\n        ],\n        \"x-amz-fwd-header-x-amz-missing-meta\": [\n            () => isSerializableHeaderValue(input.MissingMeta),\n            () => input.MissingMeta.toString(),\n        ],\n        \"x-amz-fwd-header-x-amz-object-lock-mode\": input.ObjectLockMode,\n        \"x-amz-fwd-header-x-amz-object-lock-legal-hold\": input.ObjectLockLegalHoldStatus,\n        \"x-amz-fwd-header-x-amz-object-lock-retain-until-date\": [\n            () => isSerializableHeaderValue(input.ObjectLockRetainUntilDate),\n            () => (input.ObjectLockRetainUntilDate.toISOString().split(\".\")[0] + \"Z\").toString(),\n        ],\n        \"x-amz-fwd-header-x-amz-mp-parts-count\": [\n            () => isSerializableHeaderValue(input.PartsCount),\n            () => input.PartsCount.toString(),\n        ],\n        \"x-amz-fwd-header-x-amz-replication-status\": input.ReplicationStatus,\n        \"x-amz-fwd-header-x-amz-request-charged\": input.RequestCharged,\n        \"x-amz-fwd-header-x-amz-restore\": input.Restore,\n        \"x-amz-fwd-header-x-amz-server-side-encryption\": input.ServerSideEncryption,\n        \"x-amz-fwd-header-x-amz-server-side-encryption-customer-algorithm\": input.SSECustomerAlgorithm,\n        \"x-amz-fwd-header-x-amz-server-side-encryption-aws-kms-key-id\": input.SSEKMSKeyId,\n        \"x-amz-fwd-header-x-amz-server-side-encryption-customer-key-md5\": input.SSECustomerKeyMD5,\n        \"x-amz-fwd-header-x-amz-storage-class\": input.StorageClass,\n        \"x-amz-fwd-header-x-amz-tagging-count\": [\n            () => isSerializableHeaderValue(input.TagCount),\n            () => input.TagCount.toString(),\n        ],\n        \"x-amz-fwd-header-x-amz-version-id\": input.VersionId,\n        \"x-amz-fwd-header-x-amz-server-side-encryption-bucket-key-enabled\": [\n            () => isSerializableHeaderValue(input.BucketKeyEnabled),\n            () => input.BucketKeyEnabled.toString(),\n        ],\n        ...(input.Metadata !== undefined &&\n            Object.keys(input.Metadata).reduce((acc, suffix) => {\n                acc[`x-amz-meta-${suffix.toLowerCase()}`] = input.Metadata[suffix];\n                return acc;\n            }, {})),\n    });\n    const resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/WriteGetObjectResponse\";\n    const query = map({\n        \"x-id\": [, \"WriteGetObjectResponse\"],\n    });\n    let body;\n    if (input.Body !== undefined) {\n        body = input.Body;\n    }\n    let contents;\n    if (input.Body !== undefined) {\n        contents = input.Body;\n        body = contents;\n    }\n    let { hostname: resolvedHostname } = await context.endpoint();\n    if (context.disableHostPrefix !== true) {\n        resolvedHostname = \"{RequestRoute}.\" + resolvedHostname;\n        if (input.RequestRoute === undefined) {\n            throw new Error(\"Empty value provided for input host prefix: RequestRoute.\");\n        }\n        resolvedHostname = resolvedHostname.replace(\"{RequestRoute}\", input.RequestRoute);\n        if (!__isValidHostname(resolvedHostname)) {\n            throw new Error(\"ValidationError: prefixed hostname must be hostname compatible.\");\n        }\n    }\n    return new __HttpRequest({\n        protocol,\n        hostname: resolvedHostname,\n        port,\n        method: \"POST\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexport const de_AbortMultipartUploadCommand = async (output, context) => {\n    if (output.statusCode !== 204 && output.statusCode >= 300) {\n        return de_AbortMultipartUploadCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n        RequestCharged: [, output.headers[\"x-amz-request-charged\"]],\n    });\n    await collectBody(output.body, context);\n    return contents;\n};\nconst de_AbortMultipartUploadCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"NoSuchUpload\":\n        case \"com.amazonaws.s3#NoSuchUpload\":\n            throw await de_NoSuchUploadRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_CompleteMultipartUploadCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_CompleteMultipartUploadCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n        Expiration: [, output.headers[\"x-amz-expiration\"]],\n        ServerSideEncryption: [, output.headers[\"x-amz-server-side-encryption\"]],\n        VersionId: [, output.headers[\"x-amz-version-id\"]],\n        SSEKMSKeyId: [, output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"]],\n        BucketKeyEnabled: [\n            () => void 0 !== output.headers[\"x-amz-server-side-encryption-bucket-key-enabled\"],\n            () => __parseBoolean(output.headers[\"x-amz-server-side-encryption-bucket-key-enabled\"]),\n        ],\n        RequestCharged: [, output.headers[\"x-amz-request-charged\"]],\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    if (data[\"Bucket\"] !== undefined) {\n        contents.Bucket = __expectString(data[\"Bucket\"]);\n    }\n    if (data[\"ChecksumCRC32\"] !== undefined) {\n        contents.ChecksumCRC32 = __expectString(data[\"ChecksumCRC32\"]);\n    }\n    if (data[\"ChecksumCRC32C\"] !== undefined) {\n        contents.ChecksumCRC32C = __expectString(data[\"ChecksumCRC32C\"]);\n    }\n    if (data[\"ChecksumSHA1\"] !== undefined) {\n        contents.ChecksumSHA1 = __expectString(data[\"ChecksumSHA1\"]);\n    }\n    if (data[\"ChecksumSHA256\"] !== undefined) {\n        contents.ChecksumSHA256 = __expectString(data[\"ChecksumSHA256\"]);\n    }\n    if (data[\"ETag\"] !== undefined) {\n        contents.ETag = __expectString(data[\"ETag\"]);\n    }\n    if (data[\"Key\"] !== undefined) {\n        contents.Key = __expectString(data[\"Key\"]);\n    }\n    if (data[\"Location\"] !== undefined) {\n        contents.Location = __expectString(data[\"Location\"]);\n    }\n    return contents;\n};\nconst de_CompleteMultipartUploadCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    return throwDefaultError({\n        output,\n        parsedBody,\n        errorCode,\n    });\n};\nexport const de_CopyObjectCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_CopyObjectCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n        Expiration: [, output.headers[\"x-amz-expiration\"]],\n        CopySourceVersionId: [, output.headers[\"x-amz-copy-source-version-id\"]],\n        VersionId: [, output.headers[\"x-amz-version-id\"]],\n        ServerSideEncryption: [, output.headers[\"x-amz-server-side-encryption\"]],\n        SSECustomerAlgorithm: [, output.headers[\"x-amz-server-side-encryption-customer-algorithm\"]],\n        SSECustomerKeyMD5: [, output.headers[\"x-amz-server-side-encryption-customer-key-md5\"]],\n        SSEKMSKeyId: [, output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"]],\n        SSEKMSEncryptionContext: [, output.headers[\"x-amz-server-side-encryption-context\"]],\n        BucketKeyEnabled: [\n            () => void 0 !== output.headers[\"x-amz-server-side-encryption-bucket-key-enabled\"],\n            () => __parseBoolean(output.headers[\"x-amz-server-side-encryption-bucket-key-enabled\"]),\n        ],\n        RequestCharged: [, output.headers[\"x-amz-request-charged\"]],\n    });\n    const data = __expectObject(await parseBody(output.body, context));\n    contents.CopyObjectResult = de_CopyObjectResult(data, context);\n    return contents;\n};\nconst de_CopyObjectCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"ObjectNotInActiveTierError\":\n        case \"com.amazonaws.s3#ObjectNotInActiveTierError\":\n            throw await de_ObjectNotInActiveTierErrorRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_CreateBucketCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_CreateBucketCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n        Location: [, output.headers[\"location\"]],\n    });\n    await collectBody(output.body, context);\n    return contents;\n};\nconst de_CreateBucketCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"BucketAlreadyExists\":\n        case \"com.amazonaws.s3#BucketAlreadyExists\":\n            throw await de_BucketAlreadyExistsRes(parsedOutput, context);\n        case \"BucketAlreadyOwnedByYou\":\n        case \"com.amazonaws.s3#BucketAlreadyOwnedByYou\":\n            throw await de_BucketAlreadyOwnedByYouRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_CreateMultipartUploadCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_CreateMultipartUploadCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n        AbortDate: [\n            () => void 0 !== output.headers[\"x-amz-abort-date\"],\n            () => __expectNonNull(__parseRfc7231DateTime(output.headers[\"x-amz-abort-date\"])),\n        ],\n        AbortRuleId: [, output.headers[\"x-amz-abort-rule-id\"]],\n        ServerSideEncryption: [, output.headers[\"x-amz-server-side-encryption\"]],\n        SSECustomerAlgorithm: [, output.headers[\"x-amz-server-side-encryption-customer-algorithm\"]],\n        SSECustomerKeyMD5: [, output.headers[\"x-amz-server-side-encryption-customer-key-md5\"]],\n        SSEKMSKeyId: [, output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"]],\n        SSEKMSEncryptionContext: [, output.headers[\"x-amz-server-side-encryption-context\"]],\n        BucketKeyEnabled: [\n            () => void 0 !== output.headers[\"x-amz-server-side-encryption-bucket-key-enabled\"],\n            () => __parseBoolean(output.headers[\"x-amz-server-side-encryption-bucket-key-enabled\"]),\n        ],\n        RequestCharged: [, output.headers[\"x-amz-request-charged\"]],\n        ChecksumAlgorithm: [, output.headers[\"x-amz-checksum-algorithm\"]],\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    if (data[\"Bucket\"] !== undefined) {\n        contents.Bucket = __expectString(data[\"Bucket\"]);\n    }\n    if (data[\"Key\"] !== undefined) {\n        contents.Key = __expectString(data[\"Key\"]);\n    }\n    if (data[\"UploadId\"] !== undefined) {\n        contents.UploadId = __expectString(data[\"UploadId\"]);\n    }\n    return contents;\n};\nconst de_CreateMultipartUploadCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    return throwDefaultError({\n        output,\n        parsedBody,\n        errorCode,\n    });\n};\nexport const de_DeleteBucketCommand = async (output, context) => {\n    if (output.statusCode !== 204 && output.statusCode >= 300) {\n        return de_DeleteBucketCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    await collectBody(output.body, context);\n    return contents;\n};\nconst de_DeleteBucketCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    return throwDefaultError({\n        output,\n        parsedBody,\n        errorCode,\n    });\n};\nexport const de_DeleteBucketAnalyticsConfigurationCommand = async (output, context) => {\n    if (output.statusCode !== 204 && output.statusCode >= 300) {\n        return de_DeleteBucketAnalyticsConfigurationCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    await collectBody(output.body, context);\n    return contents;\n};\nconst de_DeleteBucketAnalyticsConfigurationCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    return throwDefaultError({\n        output,\n        parsedBody,\n        errorCode,\n    });\n};\nexport const de_DeleteBucketCorsCommand = async (output, context) => {\n    if (output.statusCode !== 204 && output.statusCode >= 300) {\n        return de_DeleteBucketCorsCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    await collectBody(output.body, context);\n    return contents;\n};\nconst de_DeleteBucketCorsCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    return throwDefaultError({\n        output,\n        parsedBody,\n        errorCode,\n    });\n};\nexport const de_DeleteBucketEncryptionCommand = async (output, context) => {\n    if (output.statusCode !== 204 && output.statusCode >= 300) {\n        return de_DeleteBucketEncryptionCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    await collectBody(output.body, context);\n    return contents;\n};\nconst de_DeleteBucketEncryptionCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    return throwDefaultError({\n        output,\n        parsedBody,\n        errorCode,\n    });\n};\nexport const de_DeleteBucketIntelligentTieringConfigurationCommand = async (output, context) => {\n    if (output.statusCode !== 204 && output.statusCode >= 300) {\n        return de_DeleteBucketIntelligentTieringConfigurationCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    await collectBody(output.body, context);\n    return contents;\n};\nconst de_DeleteBucketIntelligentTieringConfigurationCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    return throwDefaultError({\n        output,\n        parsedBody,\n        errorCode,\n    });\n};\nexport const de_DeleteBucketInventoryConfigurationCommand = async (output, context) => {\n    if (output.statusCode !== 204 && output.statusCode >= 300) {\n        return de_DeleteBucketInventoryConfigurationCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    await collectBody(output.body, context);\n    return contents;\n};\nconst de_DeleteBucketInventoryConfigurationCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    return throwDefaultError({\n        output,\n        parsedBody,\n        errorCode,\n    });\n};\nexport const de_DeleteBucketLifecycleCommand = async (output, context) => {\n    if (output.statusCode !== 204 && output.statusCode >= 300) {\n        return de_DeleteBucketLifecycleCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    await collectBody(output.body, context);\n    return contents;\n};\nconst de_DeleteBucketLifecycleCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    return throwDefaultError({\n        output,\n        parsedBody,\n        errorCode,\n    });\n};\nexport const de_DeleteBucketMetricsConfigurationCommand = async (output, context) => {\n    if (output.statusCode !== 204 && output.statusCode >= 300) {\n        return de_DeleteBucketMetricsConfigurationCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    await collectBody(output.body, context);\n    return contents;\n};\nconst de_DeleteBucketMetricsConfigurationCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    return throwDefaultError({\n        output,\n        parsedBody,\n        errorCode,\n    });\n};\nexport const de_DeleteBucketOwnershipControlsCommand = async (output, context) => {\n    if (output.statusCode !== 204 && output.statusCode >= 300) {\n        return de_DeleteBucketOwnershipControlsCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    await collectBody(output.body, context);\n    return contents;\n};\nconst de_DeleteBucketOwnershipControlsCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    return throwDefaultError({\n        output,\n        parsedBody,\n        errorCode,\n    });\n};\nexport const de_DeleteBucketPolicyCommand = async (output, context) => {\n    if (output.statusCode !== 204 && output.statusCode >= 300) {\n        return de_DeleteBucketPolicyCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    await collectBody(output.body, context);\n    return contents;\n};\nconst de_DeleteBucketPolicyCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    return throwDefaultError({\n        output,\n        parsedBody,\n        errorCode,\n    });\n};\nexport const de_DeleteBucketReplicationCommand = async (output, context) => {\n    if (output.statusCode !== 204 && output.statusCode >= 300) {\n        return de_DeleteBucketReplicationCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    await collectBody(output.body, context);\n    return contents;\n};\nconst de_DeleteBucketReplicationCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    return throwDefaultError({\n        output,\n        parsedBody,\n        errorCode,\n    });\n};\nexport const de_DeleteBucketTaggingCommand = async (output, context) => {\n    if (output.statusCode !== 204 && output.statusCode >= 300) {\n        return de_DeleteBucketTaggingCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    await collectBody(output.body, context);\n    return contents;\n};\nconst de_DeleteBucketTaggingCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    return throwDefaultError({\n        output,\n        parsedBody,\n        errorCode,\n    });\n};\nexport const de_DeleteBucketWebsiteCommand = async (output, context) => {\n    if (output.statusCode !== 204 && output.statusCode >= 300) {\n        return de_DeleteBucketWebsiteCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    await collectBody(output.body, context);\n    return contents;\n};\nconst de_DeleteBucketWebsiteCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    return throwDefaultError({\n        output,\n        parsedBody,\n        errorCode,\n    });\n};\nexport const de_DeleteObjectCommand = async (output, context) => {\n    if (output.statusCode !== 204 && output.statusCode >= 300) {\n        return de_DeleteObjectCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n        DeleteMarker: [\n            () => void 0 !== output.headers[\"x-amz-delete-marker\"],\n            () => __parseBoolean(output.headers[\"x-amz-delete-marker\"]),\n        ],\n        VersionId: [, output.headers[\"x-amz-version-id\"]],\n        RequestCharged: [, output.headers[\"x-amz-request-charged\"]],\n    });\n    await collectBody(output.body, context);\n    return contents;\n};\nconst de_DeleteObjectCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    return throwDefaultError({\n        output,\n        parsedBody,\n        errorCode,\n    });\n};\nexport const de_DeleteObjectsCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_DeleteObjectsCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n        RequestCharged: [, output.headers[\"x-amz-request-charged\"]],\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    if (data.Deleted === \"\") {\n        contents.Deleted = [];\n    }\n    else if (data[\"Deleted\"] !== undefined) {\n        contents.Deleted = de_DeletedObjects(__getArrayIfSingleItem(data[\"Deleted\"]), context);\n    }\n    if (data.Error === \"\") {\n        contents.Errors = [];\n    }\n    else if (data[\"Error\"] !== undefined) {\n        contents.Errors = de_Errors(__getArrayIfSingleItem(data[\"Error\"]), context);\n    }\n    return contents;\n};\nconst de_DeleteObjectsCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    return throwDefaultError({\n        output,\n        parsedBody,\n        errorCode,\n    });\n};\nexport const de_DeleteObjectTaggingCommand = async (output, context) => {\n    if (output.statusCode !== 204 && output.statusCode >= 300) {\n        return de_DeleteObjectTaggingCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n        VersionId: [, output.headers[\"x-amz-version-id\"]],\n    });\n    await collectBody(output.body, context);\n    return contents;\n};\nconst de_DeleteObjectTaggingCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    return throwDefaultError({\n        output,\n        parsedBody,\n        errorCode,\n    });\n};\nexport const de_DeletePublicAccessBlockCommand = async (output, context) => {\n    if (output.statusCode !== 204 && output.statusCode >= 300) {\n        return de_DeletePublicAccessBlockCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    await collectBody(output.body, context);\n    return contents;\n};\nconst de_DeletePublicAccessBlockCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    return throwDefaultError({\n        output,\n        parsedBody,\n        errorCode,\n    });\n};\nexport const de_GetBucketAccelerateConfigurationCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_GetBucketAccelerateConfigurationCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n        RequestCharged: [, output.headers[\"x-amz-request-charged\"]],\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    if (data[\"Status\"] !== undefined) {\n        contents.Status = __expectString(data[\"Status\"]);\n    }\n    return contents;\n};\nconst de_GetBucketAccelerateConfigurationCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    return throwDefaultError({\n        output,\n        parsedBody,\n        errorCode,\n    });\n};\nexport const de_GetBucketAclCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_GetBucketAclCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    if (data.AccessControlList === \"\") {\n        contents.Grants = [];\n    }\n    else if (data[\"AccessControlList\"] !== undefined && data[\"AccessControlList\"][\"Grant\"] !== undefined) {\n        contents.Grants = de_Grants(__getArrayIfSingleItem(data[\"AccessControlList\"][\"Grant\"]), context);\n    }\n    if (data[\"Owner\"] !== undefined) {\n        contents.Owner = de_Owner(data[\"Owner\"], context);\n    }\n    return contents;\n};\nconst de_GetBucketAclCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    return throwDefaultError({\n        output,\n        parsedBody,\n        errorCode,\n    });\n};\nexport const de_GetBucketAnalyticsConfigurationCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_GetBucketAnalyticsConfigurationCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectObject(await parseBody(output.body, context));\n    contents.AnalyticsConfiguration = de_AnalyticsConfiguration(data, context);\n    return contents;\n};\nconst de_GetBucketAnalyticsConfigurationCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    return throwDefaultError({\n        output,\n        parsedBody,\n        errorCode,\n    });\n};\nexport const de_GetBucketCorsCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_GetBucketCorsCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    if (data.CORSRule === \"\") {\n        contents.CORSRules = [];\n    }\n    else if (data[\"CORSRule\"] !== undefined) {\n        contents.CORSRules = de_CORSRules(__getArrayIfSingleItem(data[\"CORSRule\"]), context);\n    }\n    return contents;\n};\nconst de_GetBucketCorsCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    return throwDefaultError({\n        output,\n        parsedBody,\n        errorCode,\n    });\n};\nexport const de_GetBucketEncryptionCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_GetBucketEncryptionCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectObject(await parseBody(output.body, context));\n    contents.ServerSideEncryptionConfiguration = de_ServerSideEncryptionConfiguration(data, context);\n    return contents;\n};\nconst de_GetBucketEncryptionCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    return throwDefaultError({\n        output,\n        parsedBody,\n        errorCode,\n    });\n};\nexport const de_GetBucketIntelligentTieringConfigurationCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_GetBucketIntelligentTieringConfigurationCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectObject(await parseBody(output.body, context));\n    contents.IntelligentTieringConfiguration = de_IntelligentTieringConfiguration(data, context);\n    return contents;\n};\nconst de_GetBucketIntelligentTieringConfigurationCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    return throwDefaultError({\n        output,\n        parsedBody,\n        errorCode,\n    });\n};\nexport const de_GetBucketInventoryConfigurationCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_GetBucketInventoryConfigurationCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectObject(await parseBody(output.body, context));\n    contents.InventoryConfiguration = de_InventoryConfiguration(data, context);\n    return contents;\n};\nconst de_GetBucketInventoryConfigurationCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    return throwDefaultError({\n        output,\n        parsedBody,\n        errorCode,\n    });\n};\nexport const de_GetBucketLifecycleConfigurationCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_GetBucketLifecycleConfigurationCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    if (data.Rule === \"\") {\n        contents.Rules = [];\n    }\n    else if (data[\"Rule\"] !== undefined) {\n        contents.Rules = de_LifecycleRules(__getArrayIfSingleItem(data[\"Rule\"]), context);\n    }\n    return contents;\n};\nconst de_GetBucketLifecycleConfigurationCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    return throwDefaultError({\n        output,\n        parsedBody,\n        errorCode,\n    });\n};\nexport const de_GetBucketLocationCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_GetBucketLocationCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    if (data[\"LocationConstraint\"] !== undefined) {\n        contents.LocationConstraint = __expectString(data[\"LocationConstraint\"]);\n    }\n    return contents;\n};\nconst de_GetBucketLocationCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    return throwDefaultError({\n        output,\n        parsedBody,\n        errorCode,\n    });\n};\nexport const de_GetBucketLoggingCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_GetBucketLoggingCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    if (data[\"LoggingEnabled\"] !== undefined) {\n        contents.LoggingEnabled = de_LoggingEnabled(data[\"LoggingEnabled\"], context);\n    }\n    return contents;\n};\nconst de_GetBucketLoggingCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    return throwDefaultError({\n        output,\n        parsedBody,\n        errorCode,\n    });\n};\nexport const de_GetBucketMetricsConfigurationCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_GetBucketMetricsConfigurationCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectObject(await parseBody(output.body, context));\n    contents.MetricsConfiguration = de_MetricsConfiguration(data, context);\n    return contents;\n};\nconst de_GetBucketMetricsConfigurationCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    return throwDefaultError({\n        output,\n        parsedBody,\n        errorCode,\n    });\n};\nexport const de_GetBucketNotificationConfigurationCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_GetBucketNotificationConfigurationCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    if (data[\"EventBridgeConfiguration\"] !== undefined) {\n        contents.EventBridgeConfiguration = de_EventBridgeConfiguration(data[\"EventBridgeConfiguration\"], context);\n    }\n    if (data.CloudFunctionConfiguration === \"\") {\n        contents.LambdaFunctionConfigurations = [];\n    }\n    else if (data[\"CloudFunctionConfiguration\"] !== undefined) {\n        contents.LambdaFunctionConfigurations = de_LambdaFunctionConfigurationList(__getArrayIfSingleItem(data[\"CloudFunctionConfiguration\"]), context);\n    }\n    if (data.QueueConfiguration === \"\") {\n        contents.QueueConfigurations = [];\n    }\n    else if (data[\"QueueConfiguration\"] !== undefined) {\n        contents.QueueConfigurations = de_QueueConfigurationList(__getArrayIfSingleItem(data[\"QueueConfiguration\"]), context);\n    }\n    if (data.TopicConfiguration === \"\") {\n        contents.TopicConfigurations = [];\n    }\n    else if (data[\"TopicConfiguration\"] !== undefined) {\n        contents.TopicConfigurations = de_TopicConfigurationList(__getArrayIfSingleItem(data[\"TopicConfiguration\"]), context);\n    }\n    return contents;\n};\nconst de_GetBucketNotificationConfigurationCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    return throwDefaultError({\n        output,\n        parsedBody,\n        errorCode,\n    });\n};\nexport const de_GetBucketOwnershipControlsCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_GetBucketOwnershipControlsCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectObject(await parseBody(output.body, context));\n    contents.OwnershipControls = de_OwnershipControls(data, context);\n    return contents;\n};\nconst de_GetBucketOwnershipControlsCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    return throwDefaultError({\n        output,\n        parsedBody,\n        errorCode,\n    });\n};\nexport const de_GetBucketPolicyCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_GetBucketPolicyCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = await collectBodyString(output.body, context);\n    contents.Policy = __expectString(data);\n    return contents;\n};\nconst de_GetBucketPolicyCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    return throwDefaultError({\n        output,\n        parsedBody,\n        errorCode,\n    });\n};\nexport const de_GetBucketPolicyStatusCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_GetBucketPolicyStatusCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectObject(await parseBody(output.body, context));\n    contents.PolicyStatus = de_PolicyStatus(data, context);\n    return contents;\n};\nconst de_GetBucketPolicyStatusCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    return throwDefaultError({\n        output,\n        parsedBody,\n        errorCode,\n    });\n};\nexport const de_GetBucketReplicationCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_GetBucketReplicationCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectObject(await parseBody(output.body, context));\n    contents.ReplicationConfiguration = de_ReplicationConfiguration(data, context);\n    return contents;\n};\nconst de_GetBucketReplicationCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    return throwDefaultError({\n        output,\n        parsedBody,\n        errorCode,\n    });\n};\nexport const de_GetBucketRequestPaymentCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_GetBucketRequestPaymentCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    if (data[\"Payer\"] !== undefined) {\n        contents.Payer = __expectString(data[\"Payer\"]);\n    }\n    return contents;\n};\nconst de_GetBucketRequestPaymentCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    return throwDefaultError({\n        output,\n        parsedBody,\n        errorCode,\n    });\n};\nexport const de_GetBucketTaggingCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_GetBucketTaggingCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    if (data.TagSet === \"\") {\n        contents.TagSet = [];\n    }\n    else if (data[\"TagSet\"] !== undefined && data[\"TagSet\"][\"Tag\"] !== undefined) {\n        contents.TagSet = de_TagSet(__getArrayIfSingleItem(data[\"TagSet\"][\"Tag\"]), context);\n    }\n    return contents;\n};\nconst de_GetBucketTaggingCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    return throwDefaultError({\n        output,\n        parsedBody,\n        errorCode,\n    });\n};\nexport const de_GetBucketVersioningCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_GetBucketVersioningCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    if (data[\"MfaDelete\"] !== undefined) {\n        contents.MFADelete = __expectString(data[\"MfaDelete\"]);\n    }\n    if (data[\"Status\"] !== undefined) {\n        contents.Status = __expectString(data[\"Status\"]);\n    }\n    return contents;\n};\nconst de_GetBucketVersioningCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    return throwDefaultError({\n        output,\n        parsedBody,\n        errorCode,\n    });\n};\nexport const de_GetBucketWebsiteCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_GetBucketWebsiteCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    if (data[\"ErrorDocument\"] !== undefined) {\n        contents.ErrorDocument = de_ErrorDocument(data[\"ErrorDocument\"], context);\n    }\n    if (data[\"IndexDocument\"] !== undefined) {\n        contents.IndexDocument = de_IndexDocument(data[\"IndexDocument\"], context);\n    }\n    if (data[\"RedirectAllRequestsTo\"] !== undefined) {\n        contents.RedirectAllRequestsTo = de_RedirectAllRequestsTo(data[\"RedirectAllRequestsTo\"], context);\n    }\n    if (data.RoutingRules === \"\") {\n        contents.RoutingRules = [];\n    }\n    else if (data[\"RoutingRules\"] !== undefined && data[\"RoutingRules\"][\"RoutingRule\"] !== undefined) {\n        contents.RoutingRules = de_RoutingRules(__getArrayIfSingleItem(data[\"RoutingRules\"][\"RoutingRule\"]), context);\n    }\n    return contents;\n};\nconst de_GetBucketWebsiteCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    return throwDefaultError({\n        output,\n        parsedBody,\n        errorCode,\n    });\n};\nexport const de_GetObjectCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_GetObjectCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n        DeleteMarker: [\n            () => void 0 !== output.headers[\"x-amz-delete-marker\"],\n            () => __parseBoolean(output.headers[\"x-amz-delete-marker\"]),\n        ],\n        AcceptRanges: [, output.headers[\"accept-ranges\"]],\n        Expiration: [, output.headers[\"x-amz-expiration\"]],\n        Restore: [, output.headers[\"x-amz-restore\"]],\n        LastModified: [\n            () => void 0 !== output.headers[\"last-modified\"],\n            () => __expectNonNull(__parseRfc7231DateTime(output.headers[\"last-modified\"])),\n        ],\n        ContentLength: [\n            () => void 0 !== output.headers[\"content-length\"],\n            () => __strictParseLong(output.headers[\"content-length\"]),\n        ],\n        ETag: [, output.headers[\"etag\"]],\n        ChecksumCRC32: [, output.headers[\"x-amz-checksum-crc32\"]],\n        ChecksumCRC32C: [, output.headers[\"x-amz-checksum-crc32c\"]],\n        ChecksumSHA1: [, output.headers[\"x-amz-checksum-sha1\"]],\n        ChecksumSHA256: [, output.headers[\"x-amz-checksum-sha256\"]],\n        MissingMeta: [\n            () => void 0 !== output.headers[\"x-amz-missing-meta\"],\n            () => __strictParseInt32(output.headers[\"x-amz-missing-meta\"]),\n        ],\n        VersionId: [, output.headers[\"x-amz-version-id\"]],\n        CacheControl: [, output.headers[\"cache-control\"]],\n        ContentDisposition: [, output.headers[\"content-disposition\"]],\n        ContentEncoding: [, output.headers[\"content-encoding\"]],\n        ContentLanguage: [, output.headers[\"content-language\"]],\n        ContentRange: [, output.headers[\"content-range\"]],\n        ContentType: [, output.headers[\"content-type\"]],\n        Expires: [\n            () => void 0 !== output.headers[\"expires\"],\n            () => __expectNonNull(__parseRfc7231DateTime(output.headers[\"expires\"])),\n        ],\n        WebsiteRedirectLocation: [, output.headers[\"x-amz-website-redirect-location\"]],\n        ServerSideEncryption: [, output.headers[\"x-amz-server-side-encryption\"]],\n        SSECustomerAlgorithm: [, output.headers[\"x-amz-server-side-encryption-customer-algorithm\"]],\n        SSECustomerKeyMD5: [, output.headers[\"x-amz-server-side-encryption-customer-key-md5\"]],\n        SSEKMSKeyId: [, output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"]],\n        BucketKeyEnabled: [\n            () => void 0 !== output.headers[\"x-amz-server-side-encryption-bucket-key-enabled\"],\n            () => __parseBoolean(output.headers[\"x-amz-server-side-encryption-bucket-key-enabled\"]),\n        ],\n        StorageClass: [, output.headers[\"x-amz-storage-class\"]],\n        RequestCharged: [, output.headers[\"x-amz-request-charged\"]],\n        ReplicationStatus: [, output.headers[\"x-amz-replication-status\"]],\n        PartsCount: [\n            () => void 0 !== output.headers[\"x-amz-mp-parts-count\"],\n            () => __strictParseInt32(output.headers[\"x-amz-mp-parts-count\"]),\n        ],\n        TagCount: [\n            () => void 0 !== output.headers[\"x-amz-tagging-count\"],\n            () => __strictParseInt32(output.headers[\"x-amz-tagging-count\"]),\n        ],\n        ObjectLockMode: [, output.headers[\"x-amz-object-lock-mode\"]],\n        ObjectLockRetainUntilDate: [\n            () => void 0 !== output.headers[\"x-amz-object-lock-retain-until-date\"],\n            () => __expectNonNull(__parseRfc3339DateTimeWithOffset(output.headers[\"x-amz-object-lock-retain-until-date\"])),\n        ],\n        ObjectLockLegalHoldStatus: [, output.headers[\"x-amz-object-lock-legal-hold\"]],\n        Metadata: [\n            ,\n            Object.keys(output.headers)\n                .filter((header) => header.startsWith(\"x-amz-meta-\"))\n                .reduce((acc, header) => {\n                acc[header.substring(11)] = output.headers[header];\n                return acc;\n            }, {}),\n        ],\n    });\n    const data = output.body;\n    context.sdkStreamMixin(data);\n    contents.Body = data;\n    return contents;\n};\nconst de_GetObjectCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InvalidObjectState\":\n        case \"com.amazonaws.s3#InvalidObjectState\":\n            throw await de_InvalidObjectStateRes(parsedOutput, context);\n        case \"NoSuchKey\":\n        case \"com.amazonaws.s3#NoSuchKey\":\n            throw await de_NoSuchKeyRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_GetObjectAclCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_GetObjectAclCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n        RequestCharged: [, output.headers[\"x-amz-request-charged\"]],\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    if (data.AccessControlList === \"\") {\n        contents.Grants = [];\n    }\n    else if (data[\"AccessControlList\"] !== undefined && data[\"AccessControlList\"][\"Grant\"] !== undefined) {\n        contents.Grants = de_Grants(__getArrayIfSingleItem(data[\"AccessControlList\"][\"Grant\"]), context);\n    }\n    if (data[\"Owner\"] !== undefined) {\n        contents.Owner = de_Owner(data[\"Owner\"], context);\n    }\n    return contents;\n};\nconst de_GetObjectAclCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"NoSuchKey\":\n        case \"com.amazonaws.s3#NoSuchKey\":\n            throw await de_NoSuchKeyRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_GetObjectAttributesCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_GetObjectAttributesCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n        DeleteMarker: [\n            () => void 0 !== output.headers[\"x-amz-delete-marker\"],\n            () => __parseBoolean(output.headers[\"x-amz-delete-marker\"]),\n        ],\n        LastModified: [\n            () => void 0 !== output.headers[\"last-modified\"],\n            () => __expectNonNull(__parseRfc7231DateTime(output.headers[\"last-modified\"])),\n        ],\n        VersionId: [, output.headers[\"x-amz-version-id\"]],\n        RequestCharged: [, output.headers[\"x-amz-request-charged\"]],\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    if (data[\"Checksum\"] !== undefined) {\n        contents.Checksum = de_Checksum(data[\"Checksum\"], context);\n    }\n    if (data[\"ETag\"] !== undefined) {\n        contents.ETag = __expectString(data[\"ETag\"]);\n    }\n    if (data[\"ObjectParts\"] !== undefined) {\n        contents.ObjectParts = de_GetObjectAttributesParts(data[\"ObjectParts\"], context);\n    }\n    if (data[\"ObjectSize\"] !== undefined) {\n        contents.ObjectSize = __strictParseLong(data[\"ObjectSize\"]);\n    }\n    if (data[\"StorageClass\"] !== undefined) {\n        contents.StorageClass = __expectString(data[\"StorageClass\"]);\n    }\n    return contents;\n};\nconst de_GetObjectAttributesCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"NoSuchKey\":\n        case \"com.amazonaws.s3#NoSuchKey\":\n            throw await de_NoSuchKeyRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_GetObjectLegalHoldCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_GetObjectLegalHoldCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectObject(await parseBody(output.body, context));\n    contents.LegalHold = de_ObjectLockLegalHold(data, context);\n    return contents;\n};\nconst de_GetObjectLegalHoldCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    return throwDefaultError({\n        output,\n        parsedBody,\n        errorCode,\n    });\n};\nexport const de_GetObjectLockConfigurationCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_GetObjectLockConfigurationCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectObject(await parseBody(output.body, context));\n    contents.ObjectLockConfiguration = de_ObjectLockConfiguration(data, context);\n    return contents;\n};\nconst de_GetObjectLockConfigurationCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    return throwDefaultError({\n        output,\n        parsedBody,\n        errorCode,\n    });\n};\nexport const de_GetObjectRetentionCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_GetObjectRetentionCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectObject(await parseBody(output.body, context));\n    contents.Retention = de_ObjectLockRetention(data, context);\n    return contents;\n};\nconst de_GetObjectRetentionCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    return throwDefaultError({\n        output,\n        parsedBody,\n        errorCode,\n    });\n};\nexport const de_GetObjectTaggingCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_GetObjectTaggingCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n        VersionId: [, output.headers[\"x-amz-version-id\"]],\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    if (data.TagSet === \"\") {\n        contents.TagSet = [];\n    }\n    else if (data[\"TagSet\"] !== undefined && data[\"TagSet\"][\"Tag\"] !== undefined) {\n        contents.TagSet = de_TagSet(__getArrayIfSingleItem(data[\"TagSet\"][\"Tag\"]), context);\n    }\n    return contents;\n};\nconst de_GetObjectTaggingCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    return throwDefaultError({\n        output,\n        parsedBody,\n        errorCode,\n    });\n};\nexport const de_GetObjectTorrentCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_GetObjectTorrentCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n        RequestCharged: [, output.headers[\"x-amz-request-charged\"]],\n    });\n    const data = output.body;\n    context.sdkStreamMixin(data);\n    contents.Body = data;\n    return contents;\n};\nconst de_GetObjectTorrentCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    return throwDefaultError({\n        output,\n        parsedBody,\n        errorCode,\n    });\n};\nexport const de_GetPublicAccessBlockCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_GetPublicAccessBlockCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectObject(await parseBody(output.body, context));\n    contents.PublicAccessBlockConfiguration = de_PublicAccessBlockConfiguration(data, context);\n    return contents;\n};\nconst de_GetPublicAccessBlockCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    return throwDefaultError({\n        output,\n        parsedBody,\n        errorCode,\n    });\n};\nexport const de_HeadBucketCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_HeadBucketCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    await collectBody(output.body, context);\n    return contents;\n};\nconst de_HeadBucketCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"NotFound\":\n        case \"com.amazonaws.s3#NotFound\":\n            throw await de_NotFoundRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_HeadObjectCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_HeadObjectCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n        DeleteMarker: [\n            () => void 0 !== output.headers[\"x-amz-delete-marker\"],\n            () => __parseBoolean(output.headers[\"x-amz-delete-marker\"]),\n        ],\n        AcceptRanges: [, output.headers[\"accept-ranges\"]],\n        Expiration: [, output.headers[\"x-amz-expiration\"]],\n        Restore: [, output.headers[\"x-amz-restore\"]],\n        ArchiveStatus: [, output.headers[\"x-amz-archive-status\"]],\n        LastModified: [\n            () => void 0 !== output.headers[\"last-modified\"],\n            () => __expectNonNull(__parseRfc7231DateTime(output.headers[\"last-modified\"])),\n        ],\n        ContentLength: [\n            () => void 0 !== output.headers[\"content-length\"],\n            () => __strictParseLong(output.headers[\"content-length\"]),\n        ],\n        ChecksumCRC32: [, output.headers[\"x-amz-checksum-crc32\"]],\n        ChecksumCRC32C: [, output.headers[\"x-amz-checksum-crc32c\"]],\n        ChecksumSHA1: [, output.headers[\"x-amz-checksum-sha1\"]],\n        ChecksumSHA256: [, output.headers[\"x-amz-checksum-sha256\"]],\n        ETag: [, output.headers[\"etag\"]],\n        MissingMeta: [\n            () => void 0 !== output.headers[\"x-amz-missing-meta\"],\n            () => __strictParseInt32(output.headers[\"x-amz-missing-meta\"]),\n        ],\n        VersionId: [, output.headers[\"x-amz-version-id\"]],\n        CacheControl: [, output.headers[\"cache-control\"]],\n        ContentDisposition: [, output.headers[\"content-disposition\"]],\n        ContentEncoding: [, output.headers[\"content-encoding\"]],\n        ContentLanguage: [, output.headers[\"content-language\"]],\n        ContentType: [, output.headers[\"content-type\"]],\n        Expires: [\n            () => void 0 !== output.headers[\"expires\"],\n            () => __expectNonNull(__parseRfc7231DateTime(output.headers[\"expires\"])),\n        ],\n        WebsiteRedirectLocation: [, output.headers[\"x-amz-website-redirect-location\"]],\n        ServerSideEncryption: [, output.headers[\"x-amz-server-side-encryption\"]],\n        SSECustomerAlgorithm: [, output.headers[\"x-amz-server-side-encryption-customer-algorithm\"]],\n        SSECustomerKeyMD5: [, output.headers[\"x-amz-server-side-encryption-customer-key-md5\"]],\n        SSEKMSKeyId: [, output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"]],\n        BucketKeyEnabled: [\n            () => void 0 !== output.headers[\"x-amz-server-side-encryption-bucket-key-enabled\"],\n            () => __parseBoolean(output.headers[\"x-amz-server-side-encryption-bucket-key-enabled\"]),\n        ],\n        StorageClass: [, output.headers[\"x-amz-storage-class\"]],\n        RequestCharged: [, output.headers[\"x-amz-request-charged\"]],\n        ReplicationStatus: [, output.headers[\"x-amz-replication-status\"]],\n        PartsCount: [\n            () => void 0 !== output.headers[\"x-amz-mp-parts-count\"],\n            () => __strictParseInt32(output.headers[\"x-amz-mp-parts-count\"]),\n        ],\n        ObjectLockMode: [, output.headers[\"x-amz-object-lock-mode\"]],\n        ObjectLockRetainUntilDate: [\n            () => void 0 !== output.headers[\"x-amz-object-lock-retain-until-date\"],\n            () => __expectNonNull(__parseRfc3339DateTimeWithOffset(output.headers[\"x-amz-object-lock-retain-until-date\"])),\n        ],\n        ObjectLockLegalHoldStatus: [, output.headers[\"x-amz-object-lock-legal-hold\"]],\n        Metadata: [\n            ,\n            Object.keys(output.headers)\n                .filter((header) => header.startsWith(\"x-amz-meta-\"))\n                .reduce((acc, header) => {\n                acc[header.substring(11)] = output.headers[header];\n                return acc;\n            }, {}),\n        ],\n    });\n    await collectBody(output.body, context);\n    return contents;\n};\nconst de_HeadObjectCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"NotFound\":\n        case \"com.amazonaws.s3#NotFound\":\n            throw await de_NotFoundRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_ListBucketAnalyticsConfigurationsCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_ListBucketAnalyticsConfigurationsCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    if (data.AnalyticsConfiguration === \"\") {\n        contents.AnalyticsConfigurationList = [];\n    }\n    else if (data[\"AnalyticsConfiguration\"] !== undefined) {\n        contents.AnalyticsConfigurationList = de_AnalyticsConfigurationList(__getArrayIfSingleItem(data[\"AnalyticsConfiguration\"]), context);\n    }\n    if (data[\"ContinuationToken\"] !== undefined) {\n        contents.ContinuationToken = __expectString(data[\"ContinuationToken\"]);\n    }\n    if (data[\"IsTruncated\"] !== undefined) {\n        contents.IsTruncated = __parseBoolean(data[\"IsTruncated\"]);\n    }\n    if (data[\"NextContinuationToken\"] !== undefined) {\n        contents.NextContinuationToken = __expectString(data[\"NextContinuationToken\"]);\n    }\n    return contents;\n};\nconst de_ListBucketAnalyticsConfigurationsCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    return throwDefaultError({\n        output,\n        parsedBody,\n        errorCode,\n    });\n};\nexport const de_ListBucketIntelligentTieringConfigurationsCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_ListBucketIntelligentTieringConfigurationsCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    if (data[\"ContinuationToken\"] !== undefined) {\n        contents.ContinuationToken = __expectString(data[\"ContinuationToken\"]);\n    }\n    if (data.IntelligentTieringConfiguration === \"\") {\n        contents.IntelligentTieringConfigurationList = [];\n    }\n    else if (data[\"IntelligentTieringConfiguration\"] !== undefined) {\n        contents.IntelligentTieringConfigurationList = de_IntelligentTieringConfigurationList(__getArrayIfSingleItem(data[\"IntelligentTieringConfiguration\"]), context);\n    }\n    if (data[\"IsTruncated\"] !== undefined) {\n        contents.IsTruncated = __parseBoolean(data[\"IsTruncated\"]);\n    }\n    if (data[\"NextContinuationToken\"] !== undefined) {\n        contents.NextContinuationToken = __expectString(data[\"NextContinuationToken\"]);\n    }\n    return contents;\n};\nconst de_ListBucketIntelligentTieringConfigurationsCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    return throwDefaultError({\n        output,\n        parsedBody,\n        errorCode,\n    });\n};\nexport const de_ListBucketInventoryConfigurationsCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_ListBucketInventoryConfigurationsCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    if (data[\"ContinuationToken\"] !== undefined) {\n        contents.ContinuationToken = __expectString(data[\"ContinuationToken\"]);\n    }\n    if (data.InventoryConfiguration === \"\") {\n        contents.InventoryConfigurationList = [];\n    }\n    else if (data[\"InventoryConfiguration\"] !== undefined) {\n        contents.InventoryConfigurationList = de_InventoryConfigurationList(__getArrayIfSingleItem(data[\"InventoryConfiguration\"]), context);\n    }\n    if (data[\"IsTruncated\"] !== undefined) {\n        contents.IsTruncated = __parseBoolean(data[\"IsTruncated\"]);\n    }\n    if (data[\"NextContinuationToken\"] !== undefined) {\n        contents.NextContinuationToken = __expectString(data[\"NextContinuationToken\"]);\n    }\n    return contents;\n};\nconst de_ListBucketInventoryConfigurationsCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    return throwDefaultError({\n        output,\n        parsedBody,\n        errorCode,\n    });\n};\nexport const de_ListBucketMetricsConfigurationsCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_ListBucketMetricsConfigurationsCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    if (data[\"ContinuationToken\"] !== undefined) {\n        contents.ContinuationToken = __expectString(data[\"ContinuationToken\"]);\n    }\n    if (data[\"IsTruncated\"] !== undefined) {\n        contents.IsTruncated = __parseBoolean(data[\"IsTruncated\"]);\n    }\n    if (data.MetricsConfiguration === \"\") {\n        contents.MetricsConfigurationList = [];\n    }\n    else if (data[\"MetricsConfiguration\"] !== undefined) {\n        contents.MetricsConfigurationList = de_MetricsConfigurationList(__getArrayIfSingleItem(data[\"MetricsConfiguration\"]), context);\n    }\n    if (data[\"NextContinuationToken\"] !== undefined) {\n        contents.NextContinuationToken = __expectString(data[\"NextContinuationToken\"]);\n    }\n    return contents;\n};\nconst de_ListBucketMetricsConfigurationsCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    return throwDefaultError({\n        output,\n        parsedBody,\n        errorCode,\n    });\n};\nexport const de_ListBucketsCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_ListBucketsCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    if (data.Buckets === \"\") {\n        contents.Buckets = [];\n    }\n    else if (data[\"Buckets\"] !== undefined && data[\"Buckets\"][\"Bucket\"] !== undefined) {\n        contents.Buckets = de_Buckets(__getArrayIfSingleItem(data[\"Buckets\"][\"Bucket\"]), context);\n    }\n    if (data[\"Owner\"] !== undefined) {\n        contents.Owner = de_Owner(data[\"Owner\"], context);\n    }\n    return contents;\n};\nconst de_ListBucketsCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    return throwDefaultError({\n        output,\n        parsedBody,\n        errorCode,\n    });\n};\nexport const de_ListMultipartUploadsCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_ListMultipartUploadsCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n        RequestCharged: [, output.headers[\"x-amz-request-charged\"]],\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    if (data[\"Bucket\"] !== undefined) {\n        contents.Bucket = __expectString(data[\"Bucket\"]);\n    }\n    if (data.CommonPrefixes === \"\") {\n        contents.CommonPrefixes = [];\n    }\n    else if (data[\"CommonPrefixes\"] !== undefined) {\n        contents.CommonPrefixes = de_CommonPrefixList(__getArrayIfSingleItem(data[\"CommonPrefixes\"]), context);\n    }\n    if (data[\"Delimiter\"] !== undefined) {\n        contents.Delimiter = __expectString(data[\"Delimiter\"]);\n    }\n    if (data[\"EncodingType\"] !== undefined) {\n        contents.EncodingType = __expectString(data[\"EncodingType\"]);\n    }\n    if (data[\"IsTruncated\"] !== undefined) {\n        contents.IsTruncated = __parseBoolean(data[\"IsTruncated\"]);\n    }\n    if (data[\"KeyMarker\"] !== undefined) {\n        contents.KeyMarker = __expectString(data[\"KeyMarker\"]);\n    }\n    if (data[\"MaxUploads\"] !== undefined) {\n        contents.MaxUploads = __strictParseInt32(data[\"MaxUploads\"]);\n    }\n    if (data[\"NextKeyMarker\"] !== undefined) {\n        contents.NextKeyMarker = __expectString(data[\"NextKeyMarker\"]);\n    }\n    if (data[\"NextUploadIdMarker\"] !== undefined) {\n        contents.NextUploadIdMarker = __expectString(data[\"NextUploadIdMarker\"]);\n    }\n    if (data[\"Prefix\"] !== undefined) {\n        contents.Prefix = __expectString(data[\"Prefix\"]);\n    }\n    if (data[\"UploadIdMarker\"] !== undefined) {\n        contents.UploadIdMarker = __expectString(data[\"UploadIdMarker\"]);\n    }\n    if (data.Upload === \"\") {\n        contents.Uploads = [];\n    }\n    else if (data[\"Upload\"] !== undefined) {\n        contents.Uploads = de_MultipartUploadList(__getArrayIfSingleItem(data[\"Upload\"]), context);\n    }\n    return contents;\n};\nconst de_ListMultipartUploadsCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    return throwDefaultError({\n        output,\n        parsedBody,\n        errorCode,\n    });\n};\nexport const de_ListObjectsCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_ListObjectsCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n        RequestCharged: [, output.headers[\"x-amz-request-charged\"]],\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    if (data.CommonPrefixes === \"\") {\n        contents.CommonPrefixes = [];\n    }\n    else if (data[\"CommonPrefixes\"] !== undefined) {\n        contents.CommonPrefixes = de_CommonPrefixList(__getArrayIfSingleItem(data[\"CommonPrefixes\"]), context);\n    }\n    if (data.Contents === \"\") {\n        contents.Contents = [];\n    }\n    else if (data[\"Contents\"] !== undefined) {\n        contents.Contents = de_ObjectList(__getArrayIfSingleItem(data[\"Contents\"]), context);\n    }\n    if (data[\"Delimiter\"] !== undefined) {\n        contents.Delimiter = __expectString(data[\"Delimiter\"]);\n    }\n    if (data[\"EncodingType\"] !== undefined) {\n        contents.EncodingType = __expectString(data[\"EncodingType\"]);\n    }\n    if (data[\"IsTruncated\"] !== undefined) {\n        contents.IsTruncated = __parseBoolean(data[\"IsTruncated\"]);\n    }\n    if (data[\"Marker\"] !== undefined) {\n        contents.Marker = __expectString(data[\"Marker\"]);\n    }\n    if (data[\"MaxKeys\"] !== undefined) {\n        contents.MaxKeys = __strictParseInt32(data[\"MaxKeys\"]);\n    }\n    if (data[\"Name\"] !== undefined) {\n        contents.Name = __expectString(data[\"Name\"]);\n    }\n    if (data[\"NextMarker\"] !== undefined) {\n        contents.NextMarker = __expectString(data[\"NextMarker\"]);\n    }\n    if (data[\"Prefix\"] !== undefined) {\n        contents.Prefix = __expectString(data[\"Prefix\"]);\n    }\n    return contents;\n};\nconst de_ListObjectsCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"NoSuchBucket\":\n        case \"com.amazonaws.s3#NoSuchBucket\":\n            throw await de_NoSuchBucketRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_ListObjectsV2Command = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_ListObjectsV2CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n        RequestCharged: [, output.headers[\"x-amz-request-charged\"]],\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    if (data.CommonPrefixes === \"\") {\n        contents.CommonPrefixes = [];\n    }\n    else if (data[\"CommonPrefixes\"] !== undefined) {\n        contents.CommonPrefixes = de_CommonPrefixList(__getArrayIfSingleItem(data[\"CommonPrefixes\"]), context);\n    }\n    if (data.Contents === \"\") {\n        contents.Contents = [];\n    }\n    else if (data[\"Contents\"] !== undefined) {\n        contents.Contents = de_ObjectList(__getArrayIfSingleItem(data[\"Contents\"]), context);\n    }\n    if (data[\"ContinuationToken\"] !== undefined) {\n        contents.ContinuationToken = __expectString(data[\"ContinuationToken\"]);\n    }\n    if (data[\"Delimiter\"] !== undefined) {\n        contents.Delimiter = __expectString(data[\"Delimiter\"]);\n    }\n    if (data[\"EncodingType\"] !== undefined) {\n        contents.EncodingType = __expectString(data[\"EncodingType\"]);\n    }\n    if (data[\"IsTruncated\"] !== undefined) {\n        contents.IsTruncated = __parseBoolean(data[\"IsTruncated\"]);\n    }\n    if (data[\"KeyCount\"] !== undefined) {\n        contents.KeyCount = __strictParseInt32(data[\"KeyCount\"]);\n    }\n    if (data[\"MaxKeys\"] !== undefined) {\n        contents.MaxKeys = __strictParseInt32(data[\"MaxKeys\"]);\n    }\n    if (data[\"Name\"] !== undefined) {\n        contents.Name = __expectString(data[\"Name\"]);\n    }\n    if (data[\"NextContinuationToken\"] !== undefined) {\n        contents.NextContinuationToken = __expectString(data[\"NextContinuationToken\"]);\n    }\n    if (data[\"Prefix\"] !== undefined) {\n        contents.Prefix = __expectString(data[\"Prefix\"]);\n    }\n    if (data[\"StartAfter\"] !== undefined) {\n        contents.StartAfter = __expectString(data[\"StartAfter\"]);\n    }\n    return contents;\n};\nconst de_ListObjectsV2CommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"NoSuchBucket\":\n        case \"com.amazonaws.s3#NoSuchBucket\":\n            throw await de_NoSuchBucketRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_ListObjectVersionsCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_ListObjectVersionsCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n        RequestCharged: [, output.headers[\"x-amz-request-charged\"]],\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    if (data.CommonPrefixes === \"\") {\n        contents.CommonPrefixes = [];\n    }\n    else if (data[\"CommonPrefixes\"] !== undefined) {\n        contents.CommonPrefixes = de_CommonPrefixList(__getArrayIfSingleItem(data[\"CommonPrefixes\"]), context);\n    }\n    if (data.DeleteMarker === \"\") {\n        contents.DeleteMarkers = [];\n    }\n    else if (data[\"DeleteMarker\"] !== undefined) {\n        contents.DeleteMarkers = de_DeleteMarkers(__getArrayIfSingleItem(data[\"DeleteMarker\"]), context);\n    }\n    if (data[\"Delimiter\"] !== undefined) {\n        contents.Delimiter = __expectString(data[\"Delimiter\"]);\n    }\n    if (data[\"EncodingType\"] !== undefined) {\n        contents.EncodingType = __expectString(data[\"EncodingType\"]);\n    }\n    if (data[\"IsTruncated\"] !== undefined) {\n        contents.IsTruncated = __parseBoolean(data[\"IsTruncated\"]);\n    }\n    if (data[\"KeyMarker\"] !== undefined) {\n        contents.KeyMarker = __expectString(data[\"KeyMarker\"]);\n    }\n    if (data[\"MaxKeys\"] !== undefined) {\n        contents.MaxKeys = __strictParseInt32(data[\"MaxKeys\"]);\n    }\n    if (data[\"Name\"] !== undefined) {\n        contents.Name = __expectString(data[\"Name\"]);\n    }\n    if (data[\"NextKeyMarker\"] !== undefined) {\n        contents.NextKeyMarker = __expectString(data[\"NextKeyMarker\"]);\n    }\n    if (data[\"NextVersionIdMarker\"] !== undefined) {\n        contents.NextVersionIdMarker = __expectString(data[\"NextVersionIdMarker\"]);\n    }\n    if (data[\"Prefix\"] !== undefined) {\n        contents.Prefix = __expectString(data[\"Prefix\"]);\n    }\n    if (data[\"VersionIdMarker\"] !== undefined) {\n        contents.VersionIdMarker = __expectString(data[\"VersionIdMarker\"]);\n    }\n    if (data.Version === \"\") {\n        contents.Versions = [];\n    }\n    else if (data[\"Version\"] !== undefined) {\n        contents.Versions = de_ObjectVersionList(__getArrayIfSingleItem(data[\"Version\"]), context);\n    }\n    return contents;\n};\nconst de_ListObjectVersionsCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    return throwDefaultError({\n        output,\n        parsedBody,\n        errorCode,\n    });\n};\nexport const de_ListPartsCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_ListPartsCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n        AbortDate: [\n            () => void 0 !== output.headers[\"x-amz-abort-date\"],\n            () => __expectNonNull(__parseRfc7231DateTime(output.headers[\"x-amz-abort-date\"])),\n        ],\n        AbortRuleId: [, output.headers[\"x-amz-abort-rule-id\"]],\n        RequestCharged: [, output.headers[\"x-amz-request-charged\"]],\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    if (data[\"Bucket\"] !== undefined) {\n        contents.Bucket = __expectString(data[\"Bucket\"]);\n    }\n    if (data[\"ChecksumAlgorithm\"] !== undefined) {\n        contents.ChecksumAlgorithm = __expectString(data[\"ChecksumAlgorithm\"]);\n    }\n    if (data[\"Initiator\"] !== undefined) {\n        contents.Initiator = de_Initiator(data[\"Initiator\"], context);\n    }\n    if (data[\"IsTruncated\"] !== undefined) {\n        contents.IsTruncated = __parseBoolean(data[\"IsTruncated\"]);\n    }\n    if (data[\"Key\"] !== undefined) {\n        contents.Key = __expectString(data[\"Key\"]);\n    }\n    if (data[\"MaxParts\"] !== undefined) {\n        contents.MaxParts = __strictParseInt32(data[\"MaxParts\"]);\n    }\n    if (data[\"NextPartNumberMarker\"] !== undefined) {\n        contents.NextPartNumberMarker = __expectString(data[\"NextPartNumberMarker\"]);\n    }\n    if (data[\"Owner\"] !== undefined) {\n        contents.Owner = de_Owner(data[\"Owner\"], context);\n    }\n    if (data[\"PartNumberMarker\"] !== undefined) {\n        contents.PartNumberMarker = __expectString(data[\"PartNumberMarker\"]);\n    }\n    if (data.Part === \"\") {\n        contents.Parts = [];\n    }\n    else if (data[\"Part\"] !== undefined) {\n        contents.Parts = de_Parts(__getArrayIfSingleItem(data[\"Part\"]), context);\n    }\n    if (data[\"StorageClass\"] !== undefined) {\n        contents.StorageClass = __expectString(data[\"StorageClass\"]);\n    }\n    if (data[\"UploadId\"] !== undefined) {\n        contents.UploadId = __expectString(data[\"UploadId\"]);\n    }\n    return contents;\n};\nconst de_ListPartsCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    return throwDefaultError({\n        output,\n        parsedBody,\n        errorCode,\n    });\n};\nexport const de_PutBucketAccelerateConfigurationCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_PutBucketAccelerateConfigurationCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    await collectBody(output.body, context);\n    return contents;\n};\nconst de_PutBucketAccelerateConfigurationCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    return throwDefaultError({\n        output,\n        parsedBody,\n        errorCode,\n    });\n};\nexport const de_PutBucketAclCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_PutBucketAclCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    await collectBody(output.body, context);\n    return contents;\n};\nconst de_PutBucketAclCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    return throwDefaultError({\n        output,\n        parsedBody,\n        errorCode,\n    });\n};\nexport const de_PutBucketAnalyticsConfigurationCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_PutBucketAnalyticsConfigurationCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    await collectBody(output.body, context);\n    return contents;\n};\nconst de_PutBucketAnalyticsConfigurationCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    return throwDefaultError({\n        output,\n        parsedBody,\n        errorCode,\n    });\n};\nexport const de_PutBucketCorsCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_PutBucketCorsCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    await collectBody(output.body, context);\n    return contents;\n};\nconst de_PutBucketCorsCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    return throwDefaultError({\n        output,\n        parsedBody,\n        errorCode,\n    });\n};\nexport const de_PutBucketEncryptionCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_PutBucketEncryptionCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    await collectBody(output.body, context);\n    return contents;\n};\nconst de_PutBucketEncryptionCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    return throwDefaultError({\n        output,\n        parsedBody,\n        errorCode,\n    });\n};\nexport const de_PutBucketIntelligentTieringConfigurationCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_PutBucketIntelligentTieringConfigurationCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    await collectBody(output.body, context);\n    return contents;\n};\nconst de_PutBucketIntelligentTieringConfigurationCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    return throwDefaultError({\n        output,\n        parsedBody,\n        errorCode,\n    });\n};\nexport const de_PutBucketInventoryConfigurationCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_PutBucketInventoryConfigurationCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    await collectBody(output.body, context);\n    return contents;\n};\nconst de_PutBucketInventoryConfigurationCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    return throwDefaultError({\n        output,\n        parsedBody,\n        errorCode,\n    });\n};\nexport const de_PutBucketLifecycleConfigurationCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_PutBucketLifecycleConfigurationCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    await collectBody(output.body, context);\n    return contents;\n};\nconst de_PutBucketLifecycleConfigurationCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    return throwDefaultError({\n        output,\n        parsedBody,\n        errorCode,\n    });\n};\nexport const de_PutBucketLoggingCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_PutBucketLoggingCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    await collectBody(output.body, context);\n    return contents;\n};\nconst de_PutBucketLoggingCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    return throwDefaultError({\n        output,\n        parsedBody,\n        errorCode,\n    });\n};\nexport const de_PutBucketMetricsConfigurationCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_PutBucketMetricsConfigurationCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    await collectBody(output.body, context);\n    return contents;\n};\nconst de_PutBucketMetricsConfigurationCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    return throwDefaultError({\n        output,\n        parsedBody,\n        errorCode,\n    });\n};\nexport const de_PutBucketNotificationConfigurationCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_PutBucketNotificationConfigurationCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    await collectBody(output.body, context);\n    return contents;\n};\nconst de_PutBucketNotificationConfigurationCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    return throwDefaultError({\n        output,\n        parsedBody,\n        errorCode,\n    });\n};\nexport const de_PutBucketOwnershipControlsCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_PutBucketOwnershipControlsCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    await collectBody(output.body, context);\n    return contents;\n};\nconst de_PutBucketOwnershipControlsCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    return throwDefaultError({\n        output,\n        parsedBody,\n        errorCode,\n    });\n};\nexport const de_PutBucketPolicyCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_PutBucketPolicyCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    await collectBody(output.body, context);\n    return contents;\n};\nconst de_PutBucketPolicyCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    return throwDefaultError({\n        output,\n        parsedBody,\n        errorCode,\n    });\n};\nexport const de_PutBucketReplicationCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_PutBucketReplicationCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    await collectBody(output.body, context);\n    return contents;\n};\nconst de_PutBucketReplicationCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    return throwDefaultError({\n        output,\n        parsedBody,\n        errorCode,\n    });\n};\nexport const de_PutBucketRequestPaymentCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_PutBucketRequestPaymentCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    await collectBody(output.body, context);\n    return contents;\n};\nconst de_PutBucketRequestPaymentCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    return throwDefaultError({\n        output,\n        parsedBody,\n        errorCode,\n    });\n};\nexport const de_PutBucketTaggingCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_PutBucketTaggingCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    await collectBody(output.body, context);\n    return contents;\n};\nconst de_PutBucketTaggingCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    return throwDefaultError({\n        output,\n        parsedBody,\n        errorCode,\n    });\n};\nexport const de_PutBucketVersioningCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_PutBucketVersioningCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    await collectBody(output.body, context);\n    return contents;\n};\nconst de_PutBucketVersioningCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    return throwDefaultError({\n        output,\n        parsedBody,\n        errorCode,\n    });\n};\nexport const de_PutBucketWebsiteCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_PutBucketWebsiteCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    await collectBody(output.body, context);\n    return contents;\n};\nconst de_PutBucketWebsiteCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    return throwDefaultError({\n        output,\n        parsedBody,\n        errorCode,\n    });\n};\nexport const de_PutObjectCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_PutObjectCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n        Expiration: [, output.headers[\"x-amz-expiration\"]],\n        ETag: [, output.headers[\"etag\"]],\n        ChecksumCRC32: [, output.headers[\"x-amz-checksum-crc32\"]],\n        ChecksumCRC32C: [, output.headers[\"x-amz-checksum-crc32c\"]],\n        ChecksumSHA1: [, output.headers[\"x-amz-checksum-sha1\"]],\n        ChecksumSHA256: [, output.headers[\"x-amz-checksum-sha256\"]],\n        ServerSideEncryption: [, output.headers[\"x-amz-server-side-encryption\"]],\n        VersionId: [, output.headers[\"x-amz-version-id\"]],\n        SSECustomerAlgorithm: [, output.headers[\"x-amz-server-side-encryption-customer-algorithm\"]],\n        SSECustomerKeyMD5: [, output.headers[\"x-amz-server-side-encryption-customer-key-md5\"]],\n        SSEKMSKeyId: [, output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"]],\n        SSEKMSEncryptionContext: [, output.headers[\"x-amz-server-side-encryption-context\"]],\n        BucketKeyEnabled: [\n            () => void 0 !== output.headers[\"x-amz-server-side-encryption-bucket-key-enabled\"],\n            () => __parseBoolean(output.headers[\"x-amz-server-side-encryption-bucket-key-enabled\"]),\n        ],\n        RequestCharged: [, output.headers[\"x-amz-request-charged\"]],\n    });\n    await collectBody(output.body, context);\n    return contents;\n};\nconst de_PutObjectCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    return throwDefaultError({\n        output,\n        parsedBody,\n        errorCode,\n    });\n};\nexport const de_PutObjectAclCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_PutObjectAclCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n        RequestCharged: [, output.headers[\"x-amz-request-charged\"]],\n    });\n    await collectBody(output.body, context);\n    return contents;\n};\nconst de_PutObjectAclCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"NoSuchKey\":\n        case \"com.amazonaws.s3#NoSuchKey\":\n            throw await de_NoSuchKeyRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_PutObjectLegalHoldCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_PutObjectLegalHoldCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n        RequestCharged: [, output.headers[\"x-amz-request-charged\"]],\n    });\n    await collectBody(output.body, context);\n    return contents;\n};\nconst de_PutObjectLegalHoldCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    return throwDefaultError({\n        output,\n        parsedBody,\n        errorCode,\n    });\n};\nexport const de_PutObjectLockConfigurationCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_PutObjectLockConfigurationCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n        RequestCharged: [, output.headers[\"x-amz-request-charged\"]],\n    });\n    await collectBody(output.body, context);\n    return contents;\n};\nconst de_PutObjectLockConfigurationCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    return throwDefaultError({\n        output,\n        parsedBody,\n        errorCode,\n    });\n};\nexport const de_PutObjectRetentionCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_PutObjectRetentionCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n        RequestCharged: [, output.headers[\"x-amz-request-charged\"]],\n    });\n    await collectBody(output.body, context);\n    return contents;\n};\nconst de_PutObjectRetentionCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    return throwDefaultError({\n        output,\n        parsedBody,\n        errorCode,\n    });\n};\nexport const de_PutObjectTaggingCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_PutObjectTaggingCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n        VersionId: [, output.headers[\"x-amz-version-id\"]],\n    });\n    await collectBody(output.body, context);\n    return contents;\n};\nconst de_PutObjectTaggingCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    return throwDefaultError({\n        output,\n        parsedBody,\n        errorCode,\n    });\n};\nexport const de_PutPublicAccessBlockCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_PutPublicAccessBlockCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    await collectBody(output.body, context);\n    return contents;\n};\nconst de_PutPublicAccessBlockCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    return throwDefaultError({\n        output,\n        parsedBody,\n        errorCode,\n    });\n};\nexport const de_RestoreObjectCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_RestoreObjectCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n        RequestCharged: [, output.headers[\"x-amz-request-charged\"]],\n        RestoreOutputPath: [, output.headers[\"x-amz-restore-output-path\"]],\n    });\n    await collectBody(output.body, context);\n    return contents;\n};\nconst de_RestoreObjectCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"ObjectAlreadyInActiveTierError\":\n        case \"com.amazonaws.s3#ObjectAlreadyInActiveTierError\":\n            throw await de_ObjectAlreadyInActiveTierErrorRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_SelectObjectContentCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_SelectObjectContentCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = output.body;\n    contents.Payload = de_SelectObjectContentEventStream(data, context);\n    return contents;\n};\nconst de_SelectObjectContentCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    return throwDefaultError({\n        output,\n        parsedBody,\n        errorCode,\n    });\n};\nexport const de_UploadPartCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_UploadPartCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n        ServerSideEncryption: [, output.headers[\"x-amz-server-side-encryption\"]],\n        ETag: [, output.headers[\"etag\"]],\n        ChecksumCRC32: [, output.headers[\"x-amz-checksum-crc32\"]],\n        ChecksumCRC32C: [, output.headers[\"x-amz-checksum-crc32c\"]],\n        ChecksumSHA1: [, output.headers[\"x-amz-checksum-sha1\"]],\n        ChecksumSHA256: [, output.headers[\"x-amz-checksum-sha256\"]],\n        SSECustomerAlgorithm: [, output.headers[\"x-amz-server-side-encryption-customer-algorithm\"]],\n        SSECustomerKeyMD5: [, output.headers[\"x-amz-server-side-encryption-customer-key-md5\"]],\n        SSEKMSKeyId: [, output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"]],\n        BucketKeyEnabled: [\n            () => void 0 !== output.headers[\"x-amz-server-side-encryption-bucket-key-enabled\"],\n            () => __parseBoolean(output.headers[\"x-amz-server-side-encryption-bucket-key-enabled\"]),\n        ],\n        RequestCharged: [, output.headers[\"x-amz-request-charged\"]],\n    });\n    await collectBody(output.body, context);\n    return contents;\n};\nconst de_UploadPartCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    return throwDefaultError({\n        output,\n        parsedBody,\n        errorCode,\n    });\n};\nexport const de_UploadPartCopyCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_UploadPartCopyCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n        CopySourceVersionId: [, output.headers[\"x-amz-copy-source-version-id\"]],\n        ServerSideEncryption: [, output.headers[\"x-amz-server-side-encryption\"]],\n        SSECustomerAlgorithm: [, output.headers[\"x-amz-server-side-encryption-customer-algorithm\"]],\n        SSECustomerKeyMD5: [, output.headers[\"x-amz-server-side-encryption-customer-key-md5\"]],\n        SSEKMSKeyId: [, output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"]],\n        BucketKeyEnabled: [\n            () => void 0 !== output.headers[\"x-amz-server-side-encryption-bucket-key-enabled\"],\n            () => __parseBoolean(output.headers[\"x-amz-server-side-encryption-bucket-key-enabled\"]),\n        ],\n        RequestCharged: [, output.headers[\"x-amz-request-charged\"]],\n    });\n    const data = __expectObject(await parseBody(output.body, context));\n    contents.CopyPartResult = de_CopyPartResult(data, context);\n    return contents;\n};\nconst de_UploadPartCopyCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    return throwDefaultError({\n        output,\n        parsedBody,\n        errorCode,\n    });\n};\nexport const de_WriteGetObjectResponseCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_WriteGetObjectResponseCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    await collectBody(output.body, context);\n    return contents;\n};\nconst de_WriteGetObjectResponseCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    return throwDefaultError({\n        output,\n        parsedBody,\n        errorCode,\n    });\n};\nconst throwDefaultError = withBaseException(__BaseException);\nconst de_BucketAlreadyExistsRes = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body;\n    const exception = new BucketAlreadyExists({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n};\nconst de_BucketAlreadyOwnedByYouRes = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body;\n    const exception = new BucketAlreadyOwnedByYou({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n};\nconst de_InvalidObjectStateRes = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body;\n    if (data[\"AccessTier\"] !== undefined) {\n        contents.AccessTier = __expectString(data[\"AccessTier\"]);\n    }\n    if (data[\"StorageClass\"] !== undefined) {\n        contents.StorageClass = __expectString(data[\"StorageClass\"]);\n    }\n    const exception = new InvalidObjectState({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n};\nconst de_NoSuchBucketRes = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body;\n    const exception = new NoSuchBucket({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n};\nconst de_NoSuchKeyRes = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body;\n    const exception = new NoSuchKey({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n};\nconst de_NoSuchUploadRes = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body;\n    const exception = new NoSuchUpload({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n};\nconst de_NotFoundRes = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body;\n    const exception = new NotFound({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n};\nconst de_ObjectAlreadyInActiveTierErrorRes = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body;\n    const exception = new ObjectAlreadyInActiveTierError({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n};\nconst de_ObjectNotInActiveTierErrorRes = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body;\n    const exception = new ObjectNotInActiveTierError({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n};\nconst de_SelectObjectContentEventStream = (output, context) => {\n    return context.eventStreamMarshaller.deserialize(output, async (event) => {\n        if (event[\"Records\"] != null) {\n            return {\n                Records: await de_RecordsEvent_event(event[\"Records\"], context),\n            };\n        }\n        if (event[\"Stats\"] != null) {\n            return {\n                Stats: await de_StatsEvent_event(event[\"Stats\"], context),\n            };\n        }\n        if (event[\"Progress\"] != null) {\n            return {\n                Progress: await de_ProgressEvent_event(event[\"Progress\"], context),\n            };\n        }\n        if (event[\"Cont\"] != null) {\n            return {\n                Cont: await de_ContinuationEvent_event(event[\"Cont\"], context),\n            };\n        }\n        if (event[\"End\"] != null) {\n            return {\n                End: await de_EndEvent_event(event[\"End\"], context),\n            };\n        }\n        return { $unknown: output };\n    });\n};\nconst de_ContinuationEvent_event = async (output, context) => {\n    const contents = {};\n    const data = await parseBody(output.body, context);\n    Object.assign(contents, de_ContinuationEvent(data, context));\n    return contents;\n};\nconst de_EndEvent_event = async (output, context) => {\n    const contents = {};\n    const data = await parseBody(output.body, context);\n    Object.assign(contents, de_EndEvent(data, context));\n    return contents;\n};\nconst de_ProgressEvent_event = async (output, context) => {\n    const contents = {};\n    const data = await parseBody(output.body, context);\n    contents.Details = de_Progress(data, context);\n    return contents;\n};\nconst de_RecordsEvent_event = async (output, context) => {\n    const contents = {};\n    contents.Payload = output.body;\n    return contents;\n};\nconst de_StatsEvent_event = async (output, context) => {\n    const contents = {};\n    const data = await parseBody(output.body, context);\n    contents.Details = de_Stats(data, context);\n    return contents;\n};\nconst se_AbortIncompleteMultipartUpload = (input, context) => {\n    const bodyNode = new __XmlNode(\"AbortIncompleteMultipartUpload\");\n    if (input.DaysAfterInitiation != null) {\n        const node = __XmlNode.of(\"DaysAfterInitiation\", String(input.DaysAfterInitiation)).withName(\"DaysAfterInitiation\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_AccelerateConfiguration = (input, context) => {\n    const bodyNode = new __XmlNode(\"AccelerateConfiguration\");\n    if (input.Status != null) {\n        const node = __XmlNode.of(\"BucketAccelerateStatus\", input.Status).withName(\"Status\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_AccessControlPolicy = (input, context) => {\n    const bodyNode = new __XmlNode(\"AccessControlPolicy\");\n    if (input.Grants != null) {\n        const nodes = se_Grants(input.Grants, context);\n        const containerNode = new __XmlNode(\"AccessControlList\");\n        nodes.map((node) => {\n            containerNode.addChildNode(node);\n        });\n        bodyNode.addChildNode(containerNode);\n    }\n    if (input.Owner != null) {\n        const node = se_Owner(input.Owner, context).withName(\"Owner\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_AccessControlTranslation = (input, context) => {\n    const bodyNode = new __XmlNode(\"AccessControlTranslation\");\n    if (input.Owner != null) {\n        const node = __XmlNode.of(\"OwnerOverride\", input.Owner).withName(\"Owner\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_AllowedHeaders = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        const node = __XmlNode.of(\"AllowedHeader\", entry);\n        return node.withName(\"member\");\n    });\n};\nconst se_AllowedMethods = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        const node = __XmlNode.of(\"AllowedMethod\", entry);\n        return node.withName(\"member\");\n    });\n};\nconst se_AllowedOrigins = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        const node = __XmlNode.of(\"AllowedOrigin\", entry);\n        return node.withName(\"member\");\n    });\n};\nconst se_AnalyticsAndOperator = (input, context) => {\n    const bodyNode = new __XmlNode(\"AnalyticsAndOperator\");\n    if (input.Prefix != null) {\n        const node = __XmlNode.of(\"Prefix\", input.Prefix).withName(\"Prefix\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Tags != null) {\n        const nodes = se_TagSet(input.Tags, context);\n        nodes.map((node) => {\n            node = node.withName(\"Tag\");\n            bodyNode.addChildNode(node);\n        });\n    }\n    return bodyNode;\n};\nconst se_AnalyticsConfiguration = (input, context) => {\n    const bodyNode = new __XmlNode(\"AnalyticsConfiguration\");\n    if (input.Id != null) {\n        const node = __XmlNode.of(\"AnalyticsId\", input.Id).withName(\"Id\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Filter != null) {\n        const node = se_AnalyticsFilter(input.Filter, context).withName(\"Filter\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.StorageClassAnalysis != null) {\n        const node = se_StorageClassAnalysis(input.StorageClassAnalysis, context).withName(\"StorageClassAnalysis\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_AnalyticsExportDestination = (input, context) => {\n    const bodyNode = new __XmlNode(\"AnalyticsExportDestination\");\n    if (input.S3BucketDestination != null) {\n        const node = se_AnalyticsS3BucketDestination(input.S3BucketDestination, context).withName(\"S3BucketDestination\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_AnalyticsFilter = (input, context) => {\n    const bodyNode = new __XmlNode(\"AnalyticsFilter\");\n    AnalyticsFilter.visit(input, {\n        Prefix: (value) => {\n            const node = __XmlNode.of(\"Prefix\", value).withName(\"Prefix\");\n            bodyNode.addChildNode(node);\n        },\n        Tag: (value) => {\n            const node = se_Tag(value, context).withName(\"Tag\");\n            bodyNode.addChildNode(node);\n        },\n        And: (value) => {\n            const node = se_AnalyticsAndOperator(value, context).withName(\"And\");\n            bodyNode.addChildNode(node);\n        },\n        _: (name, value) => {\n            if (!(value instanceof __XmlNode || value instanceof __XmlText)) {\n                throw new Error(\"Unable to serialize unknown union members in XML.\");\n            }\n            bodyNode.addChildNode(new __XmlNode(name).addChildNode(value));\n        },\n    });\n    return bodyNode;\n};\nconst se_AnalyticsS3BucketDestination = (input, context) => {\n    const bodyNode = new __XmlNode(\"AnalyticsS3BucketDestination\");\n    if (input.Format != null) {\n        const node = __XmlNode.of(\"AnalyticsS3ExportFileFormat\", input.Format).withName(\"Format\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.BucketAccountId != null) {\n        const node = __XmlNode.of(\"AccountId\", input.BucketAccountId).withName(\"BucketAccountId\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Bucket != null) {\n        const node = __XmlNode.of(\"BucketName\", input.Bucket).withName(\"Bucket\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Prefix != null) {\n        const node = __XmlNode.of(\"Prefix\", input.Prefix).withName(\"Prefix\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_BucketLifecycleConfiguration = (input, context) => {\n    const bodyNode = new __XmlNode(\"BucketLifecycleConfiguration\");\n    if (input.Rules != null) {\n        const nodes = se_LifecycleRules(input.Rules, context);\n        nodes.map((node) => {\n            node = node.withName(\"Rule\");\n            bodyNode.addChildNode(node);\n        });\n    }\n    return bodyNode;\n};\nconst se_BucketLoggingStatus = (input, context) => {\n    const bodyNode = new __XmlNode(\"BucketLoggingStatus\");\n    if (input.LoggingEnabled != null) {\n        const node = se_LoggingEnabled(input.LoggingEnabled, context).withName(\"LoggingEnabled\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_CompletedMultipartUpload = (input, context) => {\n    const bodyNode = new __XmlNode(\"CompletedMultipartUpload\");\n    if (input.Parts != null) {\n        const nodes = se_CompletedPartList(input.Parts, context);\n        nodes.map((node) => {\n            node = node.withName(\"Part\");\n            bodyNode.addChildNode(node);\n        });\n    }\n    return bodyNode;\n};\nconst se_CompletedPart = (input, context) => {\n    const bodyNode = new __XmlNode(\"CompletedPart\");\n    if (input.ETag != null) {\n        const node = __XmlNode.of(\"ETag\", input.ETag).withName(\"ETag\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.ChecksumCRC32 != null) {\n        const node = __XmlNode.of(\"ChecksumCRC32\", input.ChecksumCRC32).withName(\"ChecksumCRC32\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.ChecksumCRC32C != null) {\n        const node = __XmlNode.of(\"ChecksumCRC32C\", input.ChecksumCRC32C).withName(\"ChecksumCRC32C\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.ChecksumSHA1 != null) {\n        const node = __XmlNode.of(\"ChecksumSHA1\", input.ChecksumSHA1).withName(\"ChecksumSHA1\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.ChecksumSHA256 != null) {\n        const node = __XmlNode.of(\"ChecksumSHA256\", input.ChecksumSHA256).withName(\"ChecksumSHA256\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.PartNumber != null) {\n        const node = __XmlNode.of(\"PartNumber\", String(input.PartNumber)).withName(\"PartNumber\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_CompletedPartList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        const node = se_CompletedPart(entry, context);\n        return node.withName(\"member\");\n    });\n};\nconst se_Condition = (input, context) => {\n    const bodyNode = new __XmlNode(\"Condition\");\n    if (input.HttpErrorCodeReturnedEquals != null) {\n        const node = __XmlNode\n            .of(\"HttpErrorCodeReturnedEquals\", input.HttpErrorCodeReturnedEquals)\n            .withName(\"HttpErrorCodeReturnedEquals\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.KeyPrefixEquals != null) {\n        const node = __XmlNode.of(\"KeyPrefixEquals\", input.KeyPrefixEquals).withName(\"KeyPrefixEquals\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_CORSConfiguration = (input, context) => {\n    const bodyNode = new __XmlNode(\"CORSConfiguration\");\n    if (input.CORSRules != null) {\n        const nodes = se_CORSRules(input.CORSRules, context);\n        nodes.map((node) => {\n            node = node.withName(\"CORSRule\");\n            bodyNode.addChildNode(node);\n        });\n    }\n    return bodyNode;\n};\nconst se_CORSRule = (input, context) => {\n    const bodyNode = new __XmlNode(\"CORSRule\");\n    if (input.ID != null) {\n        const node = __XmlNode.of(\"ID\", input.ID).withName(\"ID\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.AllowedHeaders != null) {\n        const nodes = se_AllowedHeaders(input.AllowedHeaders, context);\n        nodes.map((node) => {\n            node = node.withName(\"AllowedHeader\");\n            bodyNode.addChildNode(node);\n        });\n    }\n    if (input.AllowedMethods != null) {\n        const nodes = se_AllowedMethods(input.AllowedMethods, context);\n        nodes.map((node) => {\n            node = node.withName(\"AllowedMethod\");\n            bodyNode.addChildNode(node);\n        });\n    }\n    if (input.AllowedOrigins != null) {\n        const nodes = se_AllowedOrigins(input.AllowedOrigins, context);\n        nodes.map((node) => {\n            node = node.withName(\"AllowedOrigin\");\n            bodyNode.addChildNode(node);\n        });\n    }\n    if (input.ExposeHeaders != null) {\n        const nodes = se_ExposeHeaders(input.ExposeHeaders, context);\n        nodes.map((node) => {\n            node = node.withName(\"ExposeHeader\");\n            bodyNode.addChildNode(node);\n        });\n    }\n    if (input.MaxAgeSeconds != null) {\n        const node = __XmlNode.of(\"MaxAgeSeconds\", String(input.MaxAgeSeconds)).withName(\"MaxAgeSeconds\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_CORSRules = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        const node = se_CORSRule(entry, context);\n        return node.withName(\"member\");\n    });\n};\nconst se_CreateBucketConfiguration = (input, context) => {\n    const bodyNode = new __XmlNode(\"CreateBucketConfiguration\");\n    if (input.LocationConstraint != null) {\n        const node = __XmlNode.of(\"BucketLocationConstraint\", input.LocationConstraint).withName(\"LocationConstraint\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_CSVInput = (input, context) => {\n    const bodyNode = new __XmlNode(\"CSVInput\");\n    if (input.FileHeaderInfo != null) {\n        const node = __XmlNode.of(\"FileHeaderInfo\", input.FileHeaderInfo).withName(\"FileHeaderInfo\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Comments != null) {\n        const node = __XmlNode.of(\"Comments\", input.Comments).withName(\"Comments\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.QuoteEscapeCharacter != null) {\n        const node = __XmlNode.of(\"QuoteEscapeCharacter\", input.QuoteEscapeCharacter).withName(\"QuoteEscapeCharacter\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.RecordDelimiter != null) {\n        const node = __XmlNode.of(\"RecordDelimiter\", input.RecordDelimiter).withName(\"RecordDelimiter\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.FieldDelimiter != null) {\n        const node = __XmlNode.of(\"FieldDelimiter\", input.FieldDelimiter).withName(\"FieldDelimiter\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.QuoteCharacter != null) {\n        const node = __XmlNode.of(\"QuoteCharacter\", input.QuoteCharacter).withName(\"QuoteCharacter\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.AllowQuotedRecordDelimiter != null) {\n        const node = __XmlNode\n            .of(\"AllowQuotedRecordDelimiter\", String(input.AllowQuotedRecordDelimiter))\n            .withName(\"AllowQuotedRecordDelimiter\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_CSVOutput = (input, context) => {\n    const bodyNode = new __XmlNode(\"CSVOutput\");\n    if (input.QuoteFields != null) {\n        const node = __XmlNode.of(\"QuoteFields\", input.QuoteFields).withName(\"QuoteFields\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.QuoteEscapeCharacter != null) {\n        const node = __XmlNode.of(\"QuoteEscapeCharacter\", input.QuoteEscapeCharacter).withName(\"QuoteEscapeCharacter\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.RecordDelimiter != null) {\n        const node = __XmlNode.of(\"RecordDelimiter\", input.RecordDelimiter).withName(\"RecordDelimiter\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.FieldDelimiter != null) {\n        const node = __XmlNode.of(\"FieldDelimiter\", input.FieldDelimiter).withName(\"FieldDelimiter\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.QuoteCharacter != null) {\n        const node = __XmlNode.of(\"QuoteCharacter\", input.QuoteCharacter).withName(\"QuoteCharacter\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_DefaultRetention = (input, context) => {\n    const bodyNode = new __XmlNode(\"DefaultRetention\");\n    if (input.Mode != null) {\n        const node = __XmlNode.of(\"ObjectLockRetentionMode\", input.Mode).withName(\"Mode\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Days != null) {\n        const node = __XmlNode.of(\"Days\", String(input.Days)).withName(\"Days\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Years != null) {\n        const node = __XmlNode.of(\"Years\", String(input.Years)).withName(\"Years\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_Delete = (input, context) => {\n    const bodyNode = new __XmlNode(\"Delete\");\n    if (input.Objects != null) {\n        const nodes = se_ObjectIdentifierList(input.Objects, context);\n        nodes.map((node) => {\n            node = node.withName(\"Object\");\n            bodyNode.addChildNode(node);\n        });\n    }\n    if (input.Quiet != null) {\n        const node = __XmlNode.of(\"Quiet\", String(input.Quiet)).withName(\"Quiet\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_DeleteMarkerReplication = (input, context) => {\n    const bodyNode = new __XmlNode(\"DeleteMarkerReplication\");\n    if (input.Status != null) {\n        const node = __XmlNode.of(\"DeleteMarkerReplicationStatus\", input.Status).withName(\"Status\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_Destination = (input, context) => {\n    const bodyNode = new __XmlNode(\"Destination\");\n    if (input.Bucket != null) {\n        const node = __XmlNode.of(\"BucketName\", input.Bucket).withName(\"Bucket\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Account != null) {\n        const node = __XmlNode.of(\"AccountId\", input.Account).withName(\"Account\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.StorageClass != null) {\n        const node = __XmlNode.of(\"StorageClass\", input.StorageClass).withName(\"StorageClass\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.AccessControlTranslation != null) {\n        const node = se_AccessControlTranslation(input.AccessControlTranslation, context).withName(\"AccessControlTranslation\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.EncryptionConfiguration != null) {\n        const node = se_EncryptionConfiguration(input.EncryptionConfiguration, context).withName(\"EncryptionConfiguration\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.ReplicationTime != null) {\n        const node = se_ReplicationTime(input.ReplicationTime, context).withName(\"ReplicationTime\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Metrics != null) {\n        const node = se_Metrics(input.Metrics, context).withName(\"Metrics\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_Encryption = (input, context) => {\n    const bodyNode = new __XmlNode(\"Encryption\");\n    if (input.EncryptionType != null) {\n        const node = __XmlNode.of(\"ServerSideEncryption\", input.EncryptionType).withName(\"EncryptionType\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.KMSKeyId != null) {\n        const node = __XmlNode.of(\"SSEKMSKeyId\", input.KMSKeyId).withName(\"KMSKeyId\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.KMSContext != null) {\n        const node = __XmlNode.of(\"KMSContext\", input.KMSContext).withName(\"KMSContext\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_EncryptionConfiguration = (input, context) => {\n    const bodyNode = new __XmlNode(\"EncryptionConfiguration\");\n    if (input.ReplicaKmsKeyID != null) {\n        const node = __XmlNode.of(\"ReplicaKmsKeyID\", input.ReplicaKmsKeyID).withName(\"ReplicaKmsKeyID\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_ErrorDocument = (input, context) => {\n    const bodyNode = new __XmlNode(\"ErrorDocument\");\n    if (input.Key != null) {\n        const node = __XmlNode.of(\"ObjectKey\", input.Key).withName(\"Key\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_EventBridgeConfiguration = (input, context) => {\n    const bodyNode = new __XmlNode(\"EventBridgeConfiguration\");\n    return bodyNode;\n};\nconst se_EventList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        const node = __XmlNode.of(\"Event\", entry);\n        return node.withName(\"member\");\n    });\n};\nconst se_ExistingObjectReplication = (input, context) => {\n    const bodyNode = new __XmlNode(\"ExistingObjectReplication\");\n    if (input.Status != null) {\n        const node = __XmlNode.of(\"ExistingObjectReplicationStatus\", input.Status).withName(\"Status\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_ExposeHeaders = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        const node = __XmlNode.of(\"ExposeHeader\", entry);\n        return node.withName(\"member\");\n    });\n};\nconst se_FilterRule = (input, context) => {\n    const bodyNode = new __XmlNode(\"FilterRule\");\n    if (input.Name != null) {\n        const node = __XmlNode.of(\"FilterRuleName\", input.Name).withName(\"Name\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Value != null) {\n        const node = __XmlNode.of(\"FilterRuleValue\", input.Value).withName(\"Value\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_FilterRuleList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        const node = se_FilterRule(entry, context);\n        return node.withName(\"member\");\n    });\n};\nconst se_GlacierJobParameters = (input, context) => {\n    const bodyNode = new __XmlNode(\"GlacierJobParameters\");\n    if (input.Tier != null) {\n        const node = __XmlNode.of(\"Tier\", input.Tier).withName(\"Tier\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_Grant = (input, context) => {\n    const bodyNode = new __XmlNode(\"Grant\");\n    if (input.Grantee != null) {\n        const node = se_Grantee(input.Grantee, context).withName(\"Grantee\");\n        node.addAttribute(\"xmlns:xsi\", \"http://www.w3.org/2001/XMLSchema-instance\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Permission != null) {\n        const node = __XmlNode.of(\"Permission\", input.Permission).withName(\"Permission\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_Grantee = (input, context) => {\n    const bodyNode = new __XmlNode(\"Grantee\");\n    if (input.DisplayName != null) {\n        const node = __XmlNode.of(\"DisplayName\", input.DisplayName).withName(\"DisplayName\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.EmailAddress != null) {\n        const node = __XmlNode.of(\"EmailAddress\", input.EmailAddress).withName(\"EmailAddress\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.ID != null) {\n        const node = __XmlNode.of(\"ID\", input.ID).withName(\"ID\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.URI != null) {\n        const node = __XmlNode.of(\"URI\", input.URI).withName(\"URI\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Type != null) {\n        bodyNode.addAttribute(\"xsi:type\", input.Type);\n    }\n    return bodyNode;\n};\nconst se_Grants = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        const node = se_Grant(entry, context);\n        return node.withName(\"Grant\");\n    });\n};\nconst se_IndexDocument = (input, context) => {\n    const bodyNode = new __XmlNode(\"IndexDocument\");\n    if (input.Suffix != null) {\n        const node = __XmlNode.of(\"Suffix\", input.Suffix).withName(\"Suffix\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_InputSerialization = (input, context) => {\n    const bodyNode = new __XmlNode(\"InputSerialization\");\n    if (input.CSV != null) {\n        const node = se_CSVInput(input.CSV, context).withName(\"CSV\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.CompressionType != null) {\n        const node = __XmlNode.of(\"CompressionType\", input.CompressionType).withName(\"CompressionType\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.JSON != null) {\n        const node = se_JSONInput(input.JSON, context).withName(\"JSON\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Parquet != null) {\n        const node = se_ParquetInput(input.Parquet, context).withName(\"Parquet\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_IntelligentTieringAndOperator = (input, context) => {\n    const bodyNode = new __XmlNode(\"IntelligentTieringAndOperator\");\n    if (input.Prefix != null) {\n        const node = __XmlNode.of(\"Prefix\", input.Prefix).withName(\"Prefix\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Tags != null) {\n        const nodes = se_TagSet(input.Tags, context);\n        nodes.map((node) => {\n            node = node.withName(\"Tag\");\n            bodyNode.addChildNode(node);\n        });\n    }\n    return bodyNode;\n};\nconst se_IntelligentTieringConfiguration = (input, context) => {\n    const bodyNode = new __XmlNode(\"IntelligentTieringConfiguration\");\n    if (input.Id != null) {\n        const node = __XmlNode.of(\"IntelligentTieringId\", input.Id).withName(\"Id\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Filter != null) {\n        const node = se_IntelligentTieringFilter(input.Filter, context).withName(\"Filter\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Status != null) {\n        const node = __XmlNode.of(\"IntelligentTieringStatus\", input.Status).withName(\"Status\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Tierings != null) {\n        const nodes = se_TieringList(input.Tierings, context);\n        nodes.map((node) => {\n            node = node.withName(\"Tiering\");\n            bodyNode.addChildNode(node);\n        });\n    }\n    return bodyNode;\n};\nconst se_IntelligentTieringFilter = (input, context) => {\n    const bodyNode = new __XmlNode(\"IntelligentTieringFilter\");\n    if (input.Prefix != null) {\n        const node = __XmlNode.of(\"Prefix\", input.Prefix).withName(\"Prefix\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Tag != null) {\n        const node = se_Tag(input.Tag, context).withName(\"Tag\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.And != null) {\n        const node = se_IntelligentTieringAndOperator(input.And, context).withName(\"And\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_InventoryConfiguration = (input, context) => {\n    const bodyNode = new __XmlNode(\"InventoryConfiguration\");\n    if (input.Destination != null) {\n        const node = se_InventoryDestination(input.Destination, context).withName(\"Destination\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.IsEnabled != null) {\n        const node = __XmlNode.of(\"IsEnabled\", String(input.IsEnabled)).withName(\"IsEnabled\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Filter != null) {\n        const node = se_InventoryFilter(input.Filter, context).withName(\"Filter\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Id != null) {\n        const node = __XmlNode.of(\"InventoryId\", input.Id).withName(\"Id\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.IncludedObjectVersions != null) {\n        const node = __XmlNode\n            .of(\"InventoryIncludedObjectVersions\", input.IncludedObjectVersions)\n            .withName(\"IncludedObjectVersions\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.OptionalFields != null) {\n        const nodes = se_InventoryOptionalFields(input.OptionalFields, context);\n        const containerNode = new __XmlNode(\"OptionalFields\");\n        nodes.map((node) => {\n            containerNode.addChildNode(node);\n        });\n        bodyNode.addChildNode(containerNode);\n    }\n    if (input.Schedule != null) {\n        const node = se_InventorySchedule(input.Schedule, context).withName(\"Schedule\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_InventoryDestination = (input, context) => {\n    const bodyNode = new __XmlNode(\"InventoryDestination\");\n    if (input.S3BucketDestination != null) {\n        const node = se_InventoryS3BucketDestination(input.S3BucketDestination, context).withName(\"S3BucketDestination\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_InventoryEncryption = (input, context) => {\n    const bodyNode = new __XmlNode(\"InventoryEncryption\");\n    if (input.SSES3 != null) {\n        const node = se_SSES3(input.SSES3, context).withName(\"SSE-S3\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.SSEKMS != null) {\n        const node = se_SSEKMS(input.SSEKMS, context).withName(\"SSE-KMS\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_InventoryFilter = (input, context) => {\n    const bodyNode = new __XmlNode(\"InventoryFilter\");\n    if (input.Prefix != null) {\n        const node = __XmlNode.of(\"Prefix\", input.Prefix).withName(\"Prefix\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_InventoryOptionalFields = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        const node = __XmlNode.of(\"InventoryOptionalField\", entry);\n        return node.withName(\"Field\");\n    });\n};\nconst se_InventoryS3BucketDestination = (input, context) => {\n    const bodyNode = new __XmlNode(\"InventoryS3BucketDestination\");\n    if (input.AccountId != null) {\n        const node = __XmlNode.of(\"AccountId\", input.AccountId).withName(\"AccountId\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Bucket != null) {\n        const node = __XmlNode.of(\"BucketName\", input.Bucket).withName(\"Bucket\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Format != null) {\n        const node = __XmlNode.of(\"InventoryFormat\", input.Format).withName(\"Format\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Prefix != null) {\n        const node = __XmlNode.of(\"Prefix\", input.Prefix).withName(\"Prefix\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Encryption != null) {\n        const node = se_InventoryEncryption(input.Encryption, context).withName(\"Encryption\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_InventorySchedule = (input, context) => {\n    const bodyNode = new __XmlNode(\"InventorySchedule\");\n    if (input.Frequency != null) {\n        const node = __XmlNode.of(\"InventoryFrequency\", input.Frequency).withName(\"Frequency\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_JSONInput = (input, context) => {\n    const bodyNode = new __XmlNode(\"JSONInput\");\n    if (input.Type != null) {\n        const node = __XmlNode.of(\"JSONType\", input.Type).withName(\"Type\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_JSONOutput = (input, context) => {\n    const bodyNode = new __XmlNode(\"JSONOutput\");\n    if (input.RecordDelimiter != null) {\n        const node = __XmlNode.of(\"RecordDelimiter\", input.RecordDelimiter).withName(\"RecordDelimiter\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_LambdaFunctionConfiguration = (input, context) => {\n    const bodyNode = new __XmlNode(\"LambdaFunctionConfiguration\");\n    if (input.Id != null) {\n        const node = __XmlNode.of(\"NotificationId\", input.Id).withName(\"Id\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.LambdaFunctionArn != null) {\n        const node = __XmlNode.of(\"LambdaFunctionArn\", input.LambdaFunctionArn).withName(\"CloudFunction\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Events != null) {\n        const nodes = se_EventList(input.Events, context);\n        nodes.map((node) => {\n            node = node.withName(\"Event\");\n            bodyNode.addChildNode(node);\n        });\n    }\n    if (input.Filter != null) {\n        const node = se_NotificationConfigurationFilter(input.Filter, context).withName(\"Filter\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_LambdaFunctionConfigurationList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        const node = se_LambdaFunctionConfiguration(entry, context);\n        return node.withName(\"member\");\n    });\n};\nconst se_LifecycleExpiration = (input, context) => {\n    const bodyNode = new __XmlNode(\"LifecycleExpiration\");\n    if (input.Date != null) {\n        const node = __XmlNode.of(\"Date\", (input.Date.toISOString().split(\".\")[0] + \"Z\").toString()).withName(\"Date\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Days != null) {\n        const node = __XmlNode.of(\"Days\", String(input.Days)).withName(\"Days\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.ExpiredObjectDeleteMarker != null) {\n        const node = __XmlNode\n            .of(\"ExpiredObjectDeleteMarker\", String(input.ExpiredObjectDeleteMarker))\n            .withName(\"ExpiredObjectDeleteMarker\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_LifecycleRule = (input, context) => {\n    const bodyNode = new __XmlNode(\"LifecycleRule\");\n    if (input.Expiration != null) {\n        const node = se_LifecycleExpiration(input.Expiration, context).withName(\"Expiration\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.ID != null) {\n        const node = __XmlNode.of(\"ID\", input.ID).withName(\"ID\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Prefix != null) {\n        const node = __XmlNode.of(\"Prefix\", input.Prefix).withName(\"Prefix\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Filter != null) {\n        const node = se_LifecycleRuleFilter(input.Filter, context).withName(\"Filter\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Status != null) {\n        const node = __XmlNode.of(\"ExpirationStatus\", input.Status).withName(\"Status\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Transitions != null) {\n        const nodes = se_TransitionList(input.Transitions, context);\n        nodes.map((node) => {\n            node = node.withName(\"Transition\");\n            bodyNode.addChildNode(node);\n        });\n    }\n    if (input.NoncurrentVersionTransitions != null) {\n        const nodes = se_NoncurrentVersionTransitionList(input.NoncurrentVersionTransitions, context);\n        nodes.map((node) => {\n            node = node.withName(\"NoncurrentVersionTransition\");\n            bodyNode.addChildNode(node);\n        });\n    }\n    if (input.NoncurrentVersionExpiration != null) {\n        const node = se_NoncurrentVersionExpiration(input.NoncurrentVersionExpiration, context).withName(\"NoncurrentVersionExpiration\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.AbortIncompleteMultipartUpload != null) {\n        const node = se_AbortIncompleteMultipartUpload(input.AbortIncompleteMultipartUpload, context).withName(\"AbortIncompleteMultipartUpload\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_LifecycleRuleAndOperator = (input, context) => {\n    const bodyNode = new __XmlNode(\"LifecycleRuleAndOperator\");\n    if (input.Prefix != null) {\n        const node = __XmlNode.of(\"Prefix\", input.Prefix).withName(\"Prefix\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Tags != null) {\n        const nodes = se_TagSet(input.Tags, context);\n        nodes.map((node) => {\n            node = node.withName(\"Tag\");\n            bodyNode.addChildNode(node);\n        });\n    }\n    if (input.ObjectSizeGreaterThan != null) {\n        const node = __XmlNode\n            .of(\"ObjectSizeGreaterThanBytes\", String(input.ObjectSizeGreaterThan))\n            .withName(\"ObjectSizeGreaterThan\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.ObjectSizeLessThan != null) {\n        const node = __XmlNode\n            .of(\"ObjectSizeLessThanBytes\", String(input.ObjectSizeLessThan))\n            .withName(\"ObjectSizeLessThan\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_LifecycleRuleFilter = (input, context) => {\n    const bodyNode = new __XmlNode(\"LifecycleRuleFilter\");\n    LifecycleRuleFilter.visit(input, {\n        Prefix: (value) => {\n            const node = __XmlNode.of(\"Prefix\", value).withName(\"Prefix\");\n            bodyNode.addChildNode(node);\n        },\n        Tag: (value) => {\n            const node = se_Tag(value, context).withName(\"Tag\");\n            bodyNode.addChildNode(node);\n        },\n        ObjectSizeGreaterThan: (value) => {\n            const node = __XmlNode.of(\"ObjectSizeGreaterThanBytes\", String(value)).withName(\"ObjectSizeGreaterThan\");\n            bodyNode.addChildNode(node);\n        },\n        ObjectSizeLessThan: (value) => {\n            const node = __XmlNode.of(\"ObjectSizeLessThanBytes\", String(value)).withName(\"ObjectSizeLessThan\");\n            bodyNode.addChildNode(node);\n        },\n        And: (value) => {\n            const node = se_LifecycleRuleAndOperator(value, context).withName(\"And\");\n            bodyNode.addChildNode(node);\n        },\n        _: (name, value) => {\n            if (!(value instanceof __XmlNode || value instanceof __XmlText)) {\n                throw new Error(\"Unable to serialize unknown union members in XML.\");\n            }\n            bodyNode.addChildNode(new __XmlNode(name).addChildNode(value));\n        },\n    });\n    return bodyNode;\n};\nconst se_LifecycleRules = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        const node = se_LifecycleRule(entry, context);\n        return node.withName(\"member\");\n    });\n};\nconst se_LoggingEnabled = (input, context) => {\n    const bodyNode = new __XmlNode(\"LoggingEnabled\");\n    if (input.TargetBucket != null) {\n        const node = __XmlNode.of(\"TargetBucket\", input.TargetBucket).withName(\"TargetBucket\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.TargetGrants != null) {\n        const nodes = se_TargetGrants(input.TargetGrants, context);\n        const containerNode = new __XmlNode(\"TargetGrants\");\n        nodes.map((node) => {\n            containerNode.addChildNode(node);\n        });\n        bodyNode.addChildNode(containerNode);\n    }\n    if (input.TargetPrefix != null) {\n        const node = __XmlNode.of(\"TargetPrefix\", input.TargetPrefix).withName(\"TargetPrefix\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_MetadataEntry = (input, context) => {\n    const bodyNode = new __XmlNode(\"MetadataEntry\");\n    if (input.Name != null) {\n        const node = __XmlNode.of(\"MetadataKey\", input.Name).withName(\"Name\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Value != null) {\n        const node = __XmlNode.of(\"MetadataValue\", input.Value).withName(\"Value\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_Metrics = (input, context) => {\n    const bodyNode = new __XmlNode(\"Metrics\");\n    if (input.Status != null) {\n        const node = __XmlNode.of(\"MetricsStatus\", input.Status).withName(\"Status\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.EventThreshold != null) {\n        const node = se_ReplicationTimeValue(input.EventThreshold, context).withName(\"EventThreshold\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_MetricsAndOperator = (input, context) => {\n    const bodyNode = new __XmlNode(\"MetricsAndOperator\");\n    if (input.Prefix != null) {\n        const node = __XmlNode.of(\"Prefix\", input.Prefix).withName(\"Prefix\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Tags != null) {\n        const nodes = se_TagSet(input.Tags, context);\n        nodes.map((node) => {\n            node = node.withName(\"Tag\");\n            bodyNode.addChildNode(node);\n        });\n    }\n    if (input.AccessPointArn != null) {\n        const node = __XmlNode.of(\"AccessPointArn\", input.AccessPointArn).withName(\"AccessPointArn\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_MetricsConfiguration = (input, context) => {\n    const bodyNode = new __XmlNode(\"MetricsConfiguration\");\n    if (input.Id != null) {\n        const node = __XmlNode.of(\"MetricsId\", input.Id).withName(\"Id\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Filter != null) {\n        const node = se_MetricsFilter(input.Filter, context).withName(\"Filter\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_MetricsFilter = (input, context) => {\n    const bodyNode = new __XmlNode(\"MetricsFilter\");\n    MetricsFilter.visit(input, {\n        Prefix: (value) => {\n            const node = __XmlNode.of(\"Prefix\", value).withName(\"Prefix\");\n            bodyNode.addChildNode(node);\n        },\n        Tag: (value) => {\n            const node = se_Tag(value, context).withName(\"Tag\");\n            bodyNode.addChildNode(node);\n        },\n        AccessPointArn: (value) => {\n            const node = __XmlNode.of(\"AccessPointArn\", value).withName(\"AccessPointArn\");\n            bodyNode.addChildNode(node);\n        },\n        And: (value) => {\n            const node = se_MetricsAndOperator(value, context).withName(\"And\");\n            bodyNode.addChildNode(node);\n        },\n        _: (name, value) => {\n            if (!(value instanceof __XmlNode || value instanceof __XmlText)) {\n                throw new Error(\"Unable to serialize unknown union members in XML.\");\n            }\n            bodyNode.addChildNode(new __XmlNode(name).addChildNode(value));\n        },\n    });\n    return bodyNode;\n};\nconst se_NoncurrentVersionExpiration = (input, context) => {\n    const bodyNode = new __XmlNode(\"NoncurrentVersionExpiration\");\n    if (input.NoncurrentDays != null) {\n        const node = __XmlNode.of(\"Days\", String(input.NoncurrentDays)).withName(\"NoncurrentDays\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.NewerNoncurrentVersions != null) {\n        const node = __XmlNode\n            .of(\"VersionCount\", String(input.NewerNoncurrentVersions))\n            .withName(\"NewerNoncurrentVersions\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_NoncurrentVersionTransition = (input, context) => {\n    const bodyNode = new __XmlNode(\"NoncurrentVersionTransition\");\n    if (input.NoncurrentDays != null) {\n        const node = __XmlNode.of(\"Days\", String(input.NoncurrentDays)).withName(\"NoncurrentDays\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.StorageClass != null) {\n        const node = __XmlNode.of(\"TransitionStorageClass\", input.StorageClass).withName(\"StorageClass\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.NewerNoncurrentVersions != null) {\n        const node = __XmlNode\n            .of(\"VersionCount\", String(input.NewerNoncurrentVersions))\n            .withName(\"NewerNoncurrentVersions\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_NoncurrentVersionTransitionList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        const node = se_NoncurrentVersionTransition(entry, context);\n        return node.withName(\"member\");\n    });\n};\nconst se_NotificationConfiguration = (input, context) => {\n    const bodyNode = new __XmlNode(\"NotificationConfiguration\");\n    if (input.TopicConfigurations != null) {\n        const nodes = se_TopicConfigurationList(input.TopicConfigurations, context);\n        nodes.map((node) => {\n            node = node.withName(\"TopicConfiguration\");\n            bodyNode.addChildNode(node);\n        });\n    }\n    if (input.QueueConfigurations != null) {\n        const nodes = se_QueueConfigurationList(input.QueueConfigurations, context);\n        nodes.map((node) => {\n            node = node.withName(\"QueueConfiguration\");\n            bodyNode.addChildNode(node);\n        });\n    }\n    if (input.LambdaFunctionConfigurations != null) {\n        const nodes = se_LambdaFunctionConfigurationList(input.LambdaFunctionConfigurations, context);\n        nodes.map((node) => {\n            node = node.withName(\"CloudFunctionConfiguration\");\n            bodyNode.addChildNode(node);\n        });\n    }\n    if (input.EventBridgeConfiguration != null) {\n        const node = se_EventBridgeConfiguration(input.EventBridgeConfiguration, context).withName(\"EventBridgeConfiguration\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_NotificationConfigurationFilter = (input, context) => {\n    const bodyNode = new __XmlNode(\"NotificationConfigurationFilter\");\n    if (input.Key != null) {\n        const node = se_S3KeyFilter(input.Key, context).withName(\"S3Key\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_ObjectIdentifier = (input, context) => {\n    const bodyNode = new __XmlNode(\"ObjectIdentifier\");\n    if (input.Key != null) {\n        const node = __XmlNode.of(\"ObjectKey\", input.Key).withName(\"Key\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.VersionId != null) {\n        const node = __XmlNode.of(\"ObjectVersionId\", input.VersionId).withName(\"VersionId\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_ObjectIdentifierList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        const node = se_ObjectIdentifier(entry, context);\n        return node.withName(\"member\");\n    });\n};\nconst se_ObjectLockConfiguration = (input, context) => {\n    const bodyNode = new __XmlNode(\"ObjectLockConfiguration\");\n    if (input.ObjectLockEnabled != null) {\n        const node = __XmlNode.of(\"ObjectLockEnabled\", input.ObjectLockEnabled).withName(\"ObjectLockEnabled\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Rule != null) {\n        const node = se_ObjectLockRule(input.Rule, context).withName(\"Rule\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_ObjectLockLegalHold = (input, context) => {\n    const bodyNode = new __XmlNode(\"ObjectLockLegalHold\");\n    if (input.Status != null) {\n        const node = __XmlNode.of(\"ObjectLockLegalHoldStatus\", input.Status).withName(\"Status\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_ObjectLockRetention = (input, context) => {\n    const bodyNode = new __XmlNode(\"ObjectLockRetention\");\n    if (input.Mode != null) {\n        const node = __XmlNode.of(\"ObjectLockRetentionMode\", input.Mode).withName(\"Mode\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.RetainUntilDate != null) {\n        const node = __XmlNode\n            .of(\"Date\", (input.RetainUntilDate.toISOString().split(\".\")[0] + \"Z\").toString())\n            .withName(\"RetainUntilDate\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_ObjectLockRule = (input, context) => {\n    const bodyNode = new __XmlNode(\"ObjectLockRule\");\n    if (input.DefaultRetention != null) {\n        const node = se_DefaultRetention(input.DefaultRetention, context).withName(\"DefaultRetention\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_OutputLocation = (input, context) => {\n    const bodyNode = new __XmlNode(\"OutputLocation\");\n    if (input.S3 != null) {\n        const node = se_S3Location(input.S3, context).withName(\"S3\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_OutputSerialization = (input, context) => {\n    const bodyNode = new __XmlNode(\"OutputSerialization\");\n    if (input.CSV != null) {\n        const node = se_CSVOutput(input.CSV, context).withName(\"CSV\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.JSON != null) {\n        const node = se_JSONOutput(input.JSON, context).withName(\"JSON\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_Owner = (input, context) => {\n    const bodyNode = new __XmlNode(\"Owner\");\n    if (input.DisplayName != null) {\n        const node = __XmlNode.of(\"DisplayName\", input.DisplayName).withName(\"DisplayName\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.ID != null) {\n        const node = __XmlNode.of(\"ID\", input.ID).withName(\"ID\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_OwnershipControls = (input, context) => {\n    const bodyNode = new __XmlNode(\"OwnershipControls\");\n    if (input.Rules != null) {\n        const nodes = se_OwnershipControlsRules(input.Rules, context);\n        nodes.map((node) => {\n            node = node.withName(\"Rule\");\n            bodyNode.addChildNode(node);\n        });\n    }\n    return bodyNode;\n};\nconst se_OwnershipControlsRule = (input, context) => {\n    const bodyNode = new __XmlNode(\"OwnershipControlsRule\");\n    if (input.ObjectOwnership != null) {\n        const node = __XmlNode.of(\"ObjectOwnership\", input.ObjectOwnership).withName(\"ObjectOwnership\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_OwnershipControlsRules = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        const node = se_OwnershipControlsRule(entry, context);\n        return node.withName(\"member\");\n    });\n};\nconst se_ParquetInput = (input, context) => {\n    const bodyNode = new __XmlNode(\"ParquetInput\");\n    return bodyNode;\n};\nconst se_PublicAccessBlockConfiguration = (input, context) => {\n    const bodyNode = new __XmlNode(\"PublicAccessBlockConfiguration\");\n    if (input.BlockPublicAcls != null) {\n        const node = __XmlNode.of(\"Setting\", String(input.BlockPublicAcls)).withName(\"BlockPublicAcls\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.IgnorePublicAcls != null) {\n        const node = __XmlNode.of(\"Setting\", String(input.IgnorePublicAcls)).withName(\"IgnorePublicAcls\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.BlockPublicPolicy != null) {\n        const node = __XmlNode.of(\"Setting\", String(input.BlockPublicPolicy)).withName(\"BlockPublicPolicy\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.RestrictPublicBuckets != null) {\n        const node = __XmlNode.of(\"Setting\", String(input.RestrictPublicBuckets)).withName(\"RestrictPublicBuckets\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_QueueConfiguration = (input, context) => {\n    const bodyNode = new __XmlNode(\"QueueConfiguration\");\n    if (input.Id != null) {\n        const node = __XmlNode.of(\"NotificationId\", input.Id).withName(\"Id\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.QueueArn != null) {\n        const node = __XmlNode.of(\"QueueArn\", input.QueueArn).withName(\"Queue\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Events != null) {\n        const nodes = se_EventList(input.Events, context);\n        nodes.map((node) => {\n            node = node.withName(\"Event\");\n            bodyNode.addChildNode(node);\n        });\n    }\n    if (input.Filter != null) {\n        const node = se_NotificationConfigurationFilter(input.Filter, context).withName(\"Filter\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_QueueConfigurationList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        const node = se_QueueConfiguration(entry, context);\n        return node.withName(\"member\");\n    });\n};\nconst se_Redirect = (input, context) => {\n    const bodyNode = new __XmlNode(\"Redirect\");\n    if (input.HostName != null) {\n        const node = __XmlNode.of(\"HostName\", input.HostName).withName(\"HostName\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.HttpRedirectCode != null) {\n        const node = __XmlNode.of(\"HttpRedirectCode\", input.HttpRedirectCode).withName(\"HttpRedirectCode\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Protocol != null) {\n        const node = __XmlNode.of(\"Protocol\", input.Protocol).withName(\"Protocol\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.ReplaceKeyPrefixWith != null) {\n        const node = __XmlNode.of(\"ReplaceKeyPrefixWith\", input.ReplaceKeyPrefixWith).withName(\"ReplaceKeyPrefixWith\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.ReplaceKeyWith != null) {\n        const node = __XmlNode.of(\"ReplaceKeyWith\", input.ReplaceKeyWith).withName(\"ReplaceKeyWith\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_RedirectAllRequestsTo = (input, context) => {\n    const bodyNode = new __XmlNode(\"RedirectAllRequestsTo\");\n    if (input.HostName != null) {\n        const node = __XmlNode.of(\"HostName\", input.HostName).withName(\"HostName\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Protocol != null) {\n        const node = __XmlNode.of(\"Protocol\", input.Protocol).withName(\"Protocol\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_ReplicaModifications = (input, context) => {\n    const bodyNode = new __XmlNode(\"ReplicaModifications\");\n    if (input.Status != null) {\n        const node = __XmlNode.of(\"ReplicaModificationsStatus\", input.Status).withName(\"Status\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_ReplicationConfiguration = (input, context) => {\n    const bodyNode = new __XmlNode(\"ReplicationConfiguration\");\n    if (input.Role != null) {\n        const node = __XmlNode.of(\"Role\", input.Role).withName(\"Role\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Rules != null) {\n        const nodes = se_ReplicationRules(input.Rules, context);\n        nodes.map((node) => {\n            node = node.withName(\"Rule\");\n            bodyNode.addChildNode(node);\n        });\n    }\n    return bodyNode;\n};\nconst se_ReplicationRule = (input, context) => {\n    const bodyNode = new __XmlNode(\"ReplicationRule\");\n    if (input.ID != null) {\n        const node = __XmlNode.of(\"ID\", input.ID).withName(\"ID\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Priority != null) {\n        const node = __XmlNode.of(\"Priority\", String(input.Priority)).withName(\"Priority\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Prefix != null) {\n        const node = __XmlNode.of(\"Prefix\", input.Prefix).withName(\"Prefix\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Filter != null) {\n        const node = se_ReplicationRuleFilter(input.Filter, context).withName(\"Filter\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Status != null) {\n        const node = __XmlNode.of(\"ReplicationRuleStatus\", input.Status).withName(\"Status\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.SourceSelectionCriteria != null) {\n        const node = se_SourceSelectionCriteria(input.SourceSelectionCriteria, context).withName(\"SourceSelectionCriteria\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.ExistingObjectReplication != null) {\n        const node = se_ExistingObjectReplication(input.ExistingObjectReplication, context).withName(\"ExistingObjectReplication\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Destination != null) {\n        const node = se_Destination(input.Destination, context).withName(\"Destination\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.DeleteMarkerReplication != null) {\n        const node = se_DeleteMarkerReplication(input.DeleteMarkerReplication, context).withName(\"DeleteMarkerReplication\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_ReplicationRuleAndOperator = (input, context) => {\n    const bodyNode = new __XmlNode(\"ReplicationRuleAndOperator\");\n    if (input.Prefix != null) {\n        const node = __XmlNode.of(\"Prefix\", input.Prefix).withName(\"Prefix\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Tags != null) {\n        const nodes = se_TagSet(input.Tags, context);\n        nodes.map((node) => {\n            node = node.withName(\"Tag\");\n            bodyNode.addChildNode(node);\n        });\n    }\n    return bodyNode;\n};\nconst se_ReplicationRuleFilter = (input, context) => {\n    const bodyNode = new __XmlNode(\"ReplicationRuleFilter\");\n    ReplicationRuleFilter.visit(input, {\n        Prefix: (value) => {\n            const node = __XmlNode.of(\"Prefix\", value).withName(\"Prefix\");\n            bodyNode.addChildNode(node);\n        },\n        Tag: (value) => {\n            const node = se_Tag(value, context).withName(\"Tag\");\n            bodyNode.addChildNode(node);\n        },\n        And: (value) => {\n            const node = se_ReplicationRuleAndOperator(value, context).withName(\"And\");\n            bodyNode.addChildNode(node);\n        },\n        _: (name, value) => {\n            if (!(value instanceof __XmlNode || value instanceof __XmlText)) {\n                throw new Error(\"Unable to serialize unknown union members in XML.\");\n            }\n            bodyNode.addChildNode(new __XmlNode(name).addChildNode(value));\n        },\n    });\n    return bodyNode;\n};\nconst se_ReplicationRules = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        const node = se_ReplicationRule(entry, context);\n        return node.withName(\"member\");\n    });\n};\nconst se_ReplicationTime = (input, context) => {\n    const bodyNode = new __XmlNode(\"ReplicationTime\");\n    if (input.Status != null) {\n        const node = __XmlNode.of(\"ReplicationTimeStatus\", input.Status).withName(\"Status\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Time != null) {\n        const node = se_ReplicationTimeValue(input.Time, context).withName(\"Time\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_ReplicationTimeValue = (input, context) => {\n    const bodyNode = new __XmlNode(\"ReplicationTimeValue\");\n    if (input.Minutes != null) {\n        const node = __XmlNode.of(\"Minutes\", String(input.Minutes)).withName(\"Minutes\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_RequestPaymentConfiguration = (input, context) => {\n    const bodyNode = new __XmlNode(\"RequestPaymentConfiguration\");\n    if (input.Payer != null) {\n        const node = __XmlNode.of(\"Payer\", input.Payer).withName(\"Payer\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_RequestProgress = (input, context) => {\n    const bodyNode = new __XmlNode(\"RequestProgress\");\n    if (input.Enabled != null) {\n        const node = __XmlNode.of(\"EnableRequestProgress\", String(input.Enabled)).withName(\"Enabled\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_RestoreRequest = (input, context) => {\n    const bodyNode = new __XmlNode(\"RestoreRequest\");\n    if (input.Days != null) {\n        const node = __XmlNode.of(\"Days\", String(input.Days)).withName(\"Days\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.GlacierJobParameters != null) {\n        const node = se_GlacierJobParameters(input.GlacierJobParameters, context).withName(\"GlacierJobParameters\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Type != null) {\n        const node = __XmlNode.of(\"RestoreRequestType\", input.Type).withName(\"Type\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Tier != null) {\n        const node = __XmlNode.of(\"Tier\", input.Tier).withName(\"Tier\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Description != null) {\n        const node = __XmlNode.of(\"Description\", input.Description).withName(\"Description\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.SelectParameters != null) {\n        const node = se_SelectParameters(input.SelectParameters, context).withName(\"SelectParameters\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.OutputLocation != null) {\n        const node = se_OutputLocation(input.OutputLocation, context).withName(\"OutputLocation\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_RoutingRule = (input, context) => {\n    const bodyNode = new __XmlNode(\"RoutingRule\");\n    if (input.Condition != null) {\n        const node = se_Condition(input.Condition, context).withName(\"Condition\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Redirect != null) {\n        const node = se_Redirect(input.Redirect, context).withName(\"Redirect\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_RoutingRules = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        const node = se_RoutingRule(entry, context);\n        return node.withName(\"RoutingRule\");\n    });\n};\nconst se_S3KeyFilter = (input, context) => {\n    const bodyNode = new __XmlNode(\"S3KeyFilter\");\n    if (input.FilterRules != null) {\n        const nodes = se_FilterRuleList(input.FilterRules, context);\n        nodes.map((node) => {\n            node = node.withName(\"FilterRule\");\n            bodyNode.addChildNode(node);\n        });\n    }\n    return bodyNode;\n};\nconst se_S3Location = (input, context) => {\n    const bodyNode = new __XmlNode(\"S3Location\");\n    if (input.BucketName != null) {\n        const node = __XmlNode.of(\"BucketName\", input.BucketName).withName(\"BucketName\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Prefix != null) {\n        const node = __XmlNode.of(\"LocationPrefix\", input.Prefix).withName(\"Prefix\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Encryption != null) {\n        const node = se_Encryption(input.Encryption, context).withName(\"Encryption\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.CannedACL != null) {\n        const node = __XmlNode.of(\"ObjectCannedACL\", input.CannedACL).withName(\"CannedACL\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.AccessControlList != null) {\n        const nodes = se_Grants(input.AccessControlList, context);\n        const containerNode = new __XmlNode(\"AccessControlList\");\n        nodes.map((node) => {\n            containerNode.addChildNode(node);\n        });\n        bodyNode.addChildNode(containerNode);\n    }\n    if (input.Tagging != null) {\n        const node = se_Tagging(input.Tagging, context).withName(\"Tagging\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.UserMetadata != null) {\n        const nodes = se_UserMetadata(input.UserMetadata, context);\n        const containerNode = new __XmlNode(\"UserMetadata\");\n        nodes.map((node) => {\n            containerNode.addChildNode(node);\n        });\n        bodyNode.addChildNode(containerNode);\n    }\n    if (input.StorageClass != null) {\n        const node = __XmlNode.of(\"StorageClass\", input.StorageClass).withName(\"StorageClass\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_ScanRange = (input, context) => {\n    const bodyNode = new __XmlNode(\"ScanRange\");\n    if (input.Start != null) {\n        const node = __XmlNode.of(\"Start\", String(input.Start)).withName(\"Start\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.End != null) {\n        const node = __XmlNode.of(\"End\", String(input.End)).withName(\"End\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_SelectParameters = (input, context) => {\n    const bodyNode = new __XmlNode(\"SelectParameters\");\n    if (input.InputSerialization != null) {\n        const node = se_InputSerialization(input.InputSerialization, context).withName(\"InputSerialization\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.ExpressionType != null) {\n        const node = __XmlNode.of(\"ExpressionType\", input.ExpressionType).withName(\"ExpressionType\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Expression != null) {\n        const node = __XmlNode.of(\"Expression\", input.Expression).withName(\"Expression\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.OutputSerialization != null) {\n        const node = se_OutputSerialization(input.OutputSerialization, context).withName(\"OutputSerialization\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_ServerSideEncryptionByDefault = (input, context) => {\n    const bodyNode = new __XmlNode(\"ServerSideEncryptionByDefault\");\n    if (input.SSEAlgorithm != null) {\n        const node = __XmlNode.of(\"ServerSideEncryption\", input.SSEAlgorithm).withName(\"SSEAlgorithm\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.KMSMasterKeyID != null) {\n        const node = __XmlNode.of(\"SSEKMSKeyId\", input.KMSMasterKeyID).withName(\"KMSMasterKeyID\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_ServerSideEncryptionConfiguration = (input, context) => {\n    const bodyNode = new __XmlNode(\"ServerSideEncryptionConfiguration\");\n    if (input.Rules != null) {\n        const nodes = se_ServerSideEncryptionRules(input.Rules, context);\n        nodes.map((node) => {\n            node = node.withName(\"Rule\");\n            bodyNode.addChildNode(node);\n        });\n    }\n    return bodyNode;\n};\nconst se_ServerSideEncryptionRule = (input, context) => {\n    const bodyNode = new __XmlNode(\"ServerSideEncryptionRule\");\n    if (input.ApplyServerSideEncryptionByDefault != null) {\n        const node = se_ServerSideEncryptionByDefault(input.ApplyServerSideEncryptionByDefault, context).withName(\"ApplyServerSideEncryptionByDefault\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.BucketKeyEnabled != null) {\n        const node = __XmlNode.of(\"BucketKeyEnabled\", String(input.BucketKeyEnabled)).withName(\"BucketKeyEnabled\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_ServerSideEncryptionRules = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        const node = se_ServerSideEncryptionRule(entry, context);\n        return node.withName(\"member\");\n    });\n};\nconst se_SourceSelectionCriteria = (input, context) => {\n    const bodyNode = new __XmlNode(\"SourceSelectionCriteria\");\n    if (input.SseKmsEncryptedObjects != null) {\n        const node = se_SseKmsEncryptedObjects(input.SseKmsEncryptedObjects, context).withName(\"SseKmsEncryptedObjects\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.ReplicaModifications != null) {\n        const node = se_ReplicaModifications(input.ReplicaModifications, context).withName(\"ReplicaModifications\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_SSEKMS = (input, context) => {\n    const bodyNode = new __XmlNode(\"SSE-KMS\");\n    if (input.KeyId != null) {\n        const node = __XmlNode.of(\"SSEKMSKeyId\", input.KeyId).withName(\"KeyId\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_SseKmsEncryptedObjects = (input, context) => {\n    const bodyNode = new __XmlNode(\"SseKmsEncryptedObjects\");\n    if (input.Status != null) {\n        const node = __XmlNode.of(\"SseKmsEncryptedObjectsStatus\", input.Status).withName(\"Status\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_SSES3 = (input, context) => {\n    const bodyNode = new __XmlNode(\"SSE-S3\");\n    return bodyNode;\n};\nconst se_StorageClassAnalysis = (input, context) => {\n    const bodyNode = new __XmlNode(\"StorageClassAnalysis\");\n    if (input.DataExport != null) {\n        const node = se_StorageClassAnalysisDataExport(input.DataExport, context).withName(\"DataExport\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_StorageClassAnalysisDataExport = (input, context) => {\n    const bodyNode = new __XmlNode(\"StorageClassAnalysisDataExport\");\n    if (input.OutputSchemaVersion != null) {\n        const node = __XmlNode\n            .of(\"StorageClassAnalysisSchemaVersion\", input.OutputSchemaVersion)\n            .withName(\"OutputSchemaVersion\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Destination != null) {\n        const node = se_AnalyticsExportDestination(input.Destination, context).withName(\"Destination\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_Tag = (input, context) => {\n    const bodyNode = new __XmlNode(\"Tag\");\n    if (input.Key != null) {\n        const node = __XmlNode.of(\"ObjectKey\", input.Key).withName(\"Key\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Value != null) {\n        const node = __XmlNode.of(\"Value\", input.Value).withName(\"Value\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_Tagging = (input, context) => {\n    const bodyNode = new __XmlNode(\"Tagging\");\n    if (input.TagSet != null) {\n        const nodes = se_TagSet(input.TagSet, context);\n        const containerNode = new __XmlNode(\"TagSet\");\n        nodes.map((node) => {\n            containerNode.addChildNode(node);\n        });\n        bodyNode.addChildNode(containerNode);\n    }\n    return bodyNode;\n};\nconst se_TagSet = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        const node = se_Tag(entry, context);\n        return node.withName(\"Tag\");\n    });\n};\nconst se_TargetGrant = (input, context) => {\n    const bodyNode = new __XmlNode(\"TargetGrant\");\n    if (input.Grantee != null) {\n        const node = se_Grantee(input.Grantee, context).withName(\"Grantee\");\n        node.addAttribute(\"xmlns:xsi\", \"http://www.w3.org/2001/XMLSchema-instance\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Permission != null) {\n        const node = __XmlNode.of(\"BucketLogsPermission\", input.Permission).withName(\"Permission\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_TargetGrants = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        const node = se_TargetGrant(entry, context);\n        return node.withName(\"Grant\");\n    });\n};\nconst se_Tiering = (input, context) => {\n    const bodyNode = new __XmlNode(\"Tiering\");\n    if (input.Days != null) {\n        const node = __XmlNode.of(\"IntelligentTieringDays\", String(input.Days)).withName(\"Days\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.AccessTier != null) {\n        const node = __XmlNode.of(\"IntelligentTieringAccessTier\", input.AccessTier).withName(\"AccessTier\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_TieringList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        const node = se_Tiering(entry, context);\n        return node.withName(\"member\");\n    });\n};\nconst se_TopicConfiguration = (input, context) => {\n    const bodyNode = new __XmlNode(\"TopicConfiguration\");\n    if (input.Id != null) {\n        const node = __XmlNode.of(\"NotificationId\", input.Id).withName(\"Id\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.TopicArn != null) {\n        const node = __XmlNode.of(\"TopicArn\", input.TopicArn).withName(\"Topic\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Events != null) {\n        const nodes = se_EventList(input.Events, context);\n        nodes.map((node) => {\n            node = node.withName(\"Event\");\n            bodyNode.addChildNode(node);\n        });\n    }\n    if (input.Filter != null) {\n        const node = se_NotificationConfigurationFilter(input.Filter, context).withName(\"Filter\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_TopicConfigurationList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        const node = se_TopicConfiguration(entry, context);\n        return node.withName(\"member\");\n    });\n};\nconst se_Transition = (input, context) => {\n    const bodyNode = new __XmlNode(\"Transition\");\n    if (input.Date != null) {\n        const node = __XmlNode.of(\"Date\", (input.Date.toISOString().split(\".\")[0] + \"Z\").toString()).withName(\"Date\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Days != null) {\n        const node = __XmlNode.of(\"Days\", String(input.Days)).withName(\"Days\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.StorageClass != null) {\n        const node = __XmlNode.of(\"TransitionStorageClass\", input.StorageClass).withName(\"StorageClass\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_TransitionList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        const node = se_Transition(entry, context);\n        return node.withName(\"member\");\n    });\n};\nconst se_UserMetadata = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        const node = se_MetadataEntry(entry, context);\n        return node.withName(\"MetadataEntry\");\n    });\n};\nconst se_VersioningConfiguration = (input, context) => {\n    const bodyNode = new __XmlNode(\"VersioningConfiguration\");\n    if (input.MFADelete != null) {\n        const node = __XmlNode.of(\"MFADelete\", input.MFADelete).withName(\"MfaDelete\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Status != null) {\n        const node = __XmlNode.of(\"BucketVersioningStatus\", input.Status).withName(\"Status\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_WebsiteConfiguration = (input, context) => {\n    const bodyNode = new __XmlNode(\"WebsiteConfiguration\");\n    if (input.ErrorDocument != null) {\n        const node = se_ErrorDocument(input.ErrorDocument, context).withName(\"ErrorDocument\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.IndexDocument != null) {\n        const node = se_IndexDocument(input.IndexDocument, context).withName(\"IndexDocument\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.RedirectAllRequestsTo != null) {\n        const node = se_RedirectAllRequestsTo(input.RedirectAllRequestsTo, context).withName(\"RedirectAllRequestsTo\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.RoutingRules != null) {\n        const nodes = se_RoutingRules(input.RoutingRules, context);\n        const containerNode = new __XmlNode(\"RoutingRules\");\n        nodes.map((node) => {\n            containerNode.addChildNode(node);\n        });\n        bodyNode.addChildNode(containerNode);\n    }\n    return bodyNode;\n};\nconst de_AbortIncompleteMultipartUpload = (output, context) => {\n    const contents = {};\n    if (output[\"DaysAfterInitiation\"] !== undefined) {\n        contents.DaysAfterInitiation = __strictParseInt32(output[\"DaysAfterInitiation\"]);\n    }\n    return contents;\n};\nconst de_AccessControlTranslation = (output, context) => {\n    const contents = {};\n    if (output[\"Owner\"] !== undefined) {\n        contents.Owner = __expectString(output[\"Owner\"]);\n    }\n    return contents;\n};\nconst de_AllowedHeaders = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return __expectString(entry);\n    });\n};\nconst de_AllowedMethods = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return __expectString(entry);\n    });\n};\nconst de_AllowedOrigins = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return __expectString(entry);\n    });\n};\nconst de_AnalyticsAndOperator = (output, context) => {\n    const contents = {};\n    if (output[\"Prefix\"] !== undefined) {\n        contents.Prefix = __expectString(output[\"Prefix\"]);\n    }\n    if (output.Tag === \"\") {\n        contents.Tags = [];\n    }\n    else if (output[\"Tag\"] !== undefined) {\n        contents.Tags = de_TagSet(__getArrayIfSingleItem(output[\"Tag\"]), context);\n    }\n    return contents;\n};\nconst de_AnalyticsConfiguration = (output, context) => {\n    const contents = {};\n    if (output[\"Id\"] !== undefined) {\n        contents.Id = __expectString(output[\"Id\"]);\n    }\n    if (output.Filter === \"\") {\n    }\n    else if (output[\"Filter\"] !== undefined) {\n        contents.Filter = de_AnalyticsFilter(__expectUnion(output[\"Filter\"]), context);\n    }\n    if (output[\"StorageClassAnalysis\"] !== undefined) {\n        contents.StorageClassAnalysis = de_StorageClassAnalysis(output[\"StorageClassAnalysis\"], context);\n    }\n    return contents;\n};\nconst de_AnalyticsConfigurationList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_AnalyticsConfiguration(entry, context);\n    });\n};\nconst de_AnalyticsExportDestination = (output, context) => {\n    const contents = {};\n    if (output[\"S3BucketDestination\"] !== undefined) {\n        contents.S3BucketDestination = de_AnalyticsS3BucketDestination(output[\"S3BucketDestination\"], context);\n    }\n    return contents;\n};\nconst de_AnalyticsFilter = (output, context) => {\n    if (output[\"Prefix\"] !== undefined) {\n        return {\n            Prefix: __expectString(output[\"Prefix\"]),\n        };\n    }\n    if (output[\"Tag\"] !== undefined) {\n        return {\n            Tag: de_Tag(output[\"Tag\"], context),\n        };\n    }\n    if (output[\"And\"] !== undefined) {\n        return {\n            And: de_AnalyticsAndOperator(output[\"And\"], context),\n        };\n    }\n    return { $unknown: Object.entries(output)[0] };\n};\nconst de_AnalyticsS3BucketDestination = (output, context) => {\n    const contents = {};\n    if (output[\"Format\"] !== undefined) {\n        contents.Format = __expectString(output[\"Format\"]);\n    }\n    if (output[\"BucketAccountId\"] !== undefined) {\n        contents.BucketAccountId = __expectString(output[\"BucketAccountId\"]);\n    }\n    if (output[\"Bucket\"] !== undefined) {\n        contents.Bucket = __expectString(output[\"Bucket\"]);\n    }\n    if (output[\"Prefix\"] !== undefined) {\n        contents.Prefix = __expectString(output[\"Prefix\"]);\n    }\n    return contents;\n};\nconst de_Bucket = (output, context) => {\n    const contents = {};\n    if (output[\"Name\"] !== undefined) {\n        contents.Name = __expectString(output[\"Name\"]);\n    }\n    if (output[\"CreationDate\"] !== undefined) {\n        contents.CreationDate = __expectNonNull(__parseRfc3339DateTimeWithOffset(output[\"CreationDate\"]));\n    }\n    return contents;\n};\nconst de_Buckets = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_Bucket(entry, context);\n    });\n};\nconst de_Checksum = (output, context) => {\n    const contents = {};\n    if (output[\"ChecksumCRC32\"] !== undefined) {\n        contents.ChecksumCRC32 = __expectString(output[\"ChecksumCRC32\"]);\n    }\n    if (output[\"ChecksumCRC32C\"] !== undefined) {\n        contents.ChecksumCRC32C = __expectString(output[\"ChecksumCRC32C\"]);\n    }\n    if (output[\"ChecksumSHA1\"] !== undefined) {\n        contents.ChecksumSHA1 = __expectString(output[\"ChecksumSHA1\"]);\n    }\n    if (output[\"ChecksumSHA256\"] !== undefined) {\n        contents.ChecksumSHA256 = __expectString(output[\"ChecksumSHA256\"]);\n    }\n    return contents;\n};\nconst de_ChecksumAlgorithmList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return __expectString(entry);\n    });\n};\nconst de_CommonPrefix = (output, context) => {\n    const contents = {};\n    if (output[\"Prefix\"] !== undefined) {\n        contents.Prefix = __expectString(output[\"Prefix\"]);\n    }\n    return contents;\n};\nconst de_CommonPrefixList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_CommonPrefix(entry, context);\n    });\n};\nconst de_Condition = (output, context) => {\n    const contents = {};\n    if (output[\"HttpErrorCodeReturnedEquals\"] !== undefined) {\n        contents.HttpErrorCodeReturnedEquals = __expectString(output[\"HttpErrorCodeReturnedEquals\"]);\n    }\n    if (output[\"KeyPrefixEquals\"] !== undefined) {\n        contents.KeyPrefixEquals = __expectString(output[\"KeyPrefixEquals\"]);\n    }\n    return contents;\n};\nconst de_ContinuationEvent = (output, context) => {\n    const contents = {};\n    return contents;\n};\nconst de_CopyObjectResult = (output, context) => {\n    const contents = {};\n    if (output[\"ETag\"] !== undefined) {\n        contents.ETag = __expectString(output[\"ETag\"]);\n    }\n    if (output[\"LastModified\"] !== undefined) {\n        contents.LastModified = __expectNonNull(__parseRfc3339DateTimeWithOffset(output[\"LastModified\"]));\n    }\n    if (output[\"ChecksumCRC32\"] !== undefined) {\n        contents.ChecksumCRC32 = __expectString(output[\"ChecksumCRC32\"]);\n    }\n    if (output[\"ChecksumCRC32C\"] !== undefined) {\n        contents.ChecksumCRC32C = __expectString(output[\"ChecksumCRC32C\"]);\n    }\n    if (output[\"ChecksumSHA1\"] !== undefined) {\n        contents.ChecksumSHA1 = __expectString(output[\"ChecksumSHA1\"]);\n    }\n    if (output[\"ChecksumSHA256\"] !== undefined) {\n        contents.ChecksumSHA256 = __expectString(output[\"ChecksumSHA256\"]);\n    }\n    return contents;\n};\nconst de_CopyPartResult = (output, context) => {\n    const contents = {};\n    if (output[\"ETag\"] !== undefined) {\n        contents.ETag = __expectString(output[\"ETag\"]);\n    }\n    if (output[\"LastModified\"] !== undefined) {\n        contents.LastModified = __expectNonNull(__parseRfc3339DateTimeWithOffset(output[\"LastModified\"]));\n    }\n    if (output[\"ChecksumCRC32\"] !== undefined) {\n        contents.ChecksumCRC32 = __expectString(output[\"ChecksumCRC32\"]);\n    }\n    if (output[\"ChecksumCRC32C\"] !== undefined) {\n        contents.ChecksumCRC32C = __expectString(output[\"ChecksumCRC32C\"]);\n    }\n    if (output[\"ChecksumSHA1\"] !== undefined) {\n        contents.ChecksumSHA1 = __expectString(output[\"ChecksumSHA1\"]);\n    }\n    if (output[\"ChecksumSHA256\"] !== undefined) {\n        contents.ChecksumSHA256 = __expectString(output[\"ChecksumSHA256\"]);\n    }\n    return contents;\n};\nconst de_CORSRule = (output, context) => {\n    const contents = {};\n    if (output[\"ID\"] !== undefined) {\n        contents.ID = __expectString(output[\"ID\"]);\n    }\n    if (output.AllowedHeader === \"\") {\n        contents.AllowedHeaders = [];\n    }\n    else if (output[\"AllowedHeader\"] !== undefined) {\n        contents.AllowedHeaders = de_AllowedHeaders(__getArrayIfSingleItem(output[\"AllowedHeader\"]), context);\n    }\n    if (output.AllowedMethod === \"\") {\n        contents.AllowedMethods = [];\n    }\n    else if (output[\"AllowedMethod\"] !== undefined) {\n        contents.AllowedMethods = de_AllowedMethods(__getArrayIfSingleItem(output[\"AllowedMethod\"]), context);\n    }\n    if (output.AllowedOrigin === \"\") {\n        contents.AllowedOrigins = [];\n    }\n    else if (output[\"AllowedOrigin\"] !== undefined) {\n        contents.AllowedOrigins = de_AllowedOrigins(__getArrayIfSingleItem(output[\"AllowedOrigin\"]), context);\n    }\n    if (output.ExposeHeader === \"\") {\n        contents.ExposeHeaders = [];\n    }\n    else if (output[\"ExposeHeader\"] !== undefined) {\n        contents.ExposeHeaders = de_ExposeHeaders(__getArrayIfSingleItem(output[\"ExposeHeader\"]), context);\n    }\n    if (output[\"MaxAgeSeconds\"] !== undefined) {\n        contents.MaxAgeSeconds = __strictParseInt32(output[\"MaxAgeSeconds\"]);\n    }\n    return contents;\n};\nconst de_CORSRules = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_CORSRule(entry, context);\n    });\n};\nconst de_DefaultRetention = (output, context) => {\n    const contents = {};\n    if (output[\"Mode\"] !== undefined) {\n        contents.Mode = __expectString(output[\"Mode\"]);\n    }\n    if (output[\"Days\"] !== undefined) {\n        contents.Days = __strictParseInt32(output[\"Days\"]);\n    }\n    if (output[\"Years\"] !== undefined) {\n        contents.Years = __strictParseInt32(output[\"Years\"]);\n    }\n    return contents;\n};\nconst de_DeletedObject = (output, context) => {\n    const contents = {};\n    if (output[\"Key\"] !== undefined) {\n        contents.Key = __expectString(output[\"Key\"]);\n    }\n    if (output[\"VersionId\"] !== undefined) {\n        contents.VersionId = __expectString(output[\"VersionId\"]);\n    }\n    if (output[\"DeleteMarker\"] !== undefined) {\n        contents.DeleteMarker = __parseBoolean(output[\"DeleteMarker\"]);\n    }\n    if (output[\"DeleteMarkerVersionId\"] !== undefined) {\n        contents.DeleteMarkerVersionId = __expectString(output[\"DeleteMarkerVersionId\"]);\n    }\n    return contents;\n};\nconst de_DeletedObjects = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_DeletedObject(entry, context);\n    });\n};\nconst de_DeleteMarkerEntry = (output, context) => {\n    const contents = {};\n    if (output[\"Owner\"] !== undefined) {\n        contents.Owner = de_Owner(output[\"Owner\"], context);\n    }\n    if (output[\"Key\"] !== undefined) {\n        contents.Key = __expectString(output[\"Key\"]);\n    }\n    if (output[\"VersionId\"] !== undefined) {\n        contents.VersionId = __expectString(output[\"VersionId\"]);\n    }\n    if (output[\"IsLatest\"] !== undefined) {\n        contents.IsLatest = __parseBoolean(output[\"IsLatest\"]);\n    }\n    if (output[\"LastModified\"] !== undefined) {\n        contents.LastModified = __expectNonNull(__parseRfc3339DateTimeWithOffset(output[\"LastModified\"]));\n    }\n    return contents;\n};\nconst de_DeleteMarkerReplication = (output, context) => {\n    const contents = {};\n    if (output[\"Status\"] !== undefined) {\n        contents.Status = __expectString(output[\"Status\"]);\n    }\n    return contents;\n};\nconst de_DeleteMarkers = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_DeleteMarkerEntry(entry, context);\n    });\n};\nconst de_Destination = (output, context) => {\n    const contents = {};\n    if (output[\"Bucket\"] !== undefined) {\n        contents.Bucket = __expectString(output[\"Bucket\"]);\n    }\n    if (output[\"Account\"] !== undefined) {\n        contents.Account = __expectString(output[\"Account\"]);\n    }\n    if (output[\"StorageClass\"] !== undefined) {\n        contents.StorageClass = __expectString(output[\"StorageClass\"]);\n    }\n    if (output[\"AccessControlTranslation\"] !== undefined) {\n        contents.AccessControlTranslation = de_AccessControlTranslation(output[\"AccessControlTranslation\"], context);\n    }\n    if (output[\"EncryptionConfiguration\"] !== undefined) {\n        contents.EncryptionConfiguration = de_EncryptionConfiguration(output[\"EncryptionConfiguration\"], context);\n    }\n    if (output[\"ReplicationTime\"] !== undefined) {\n        contents.ReplicationTime = de_ReplicationTime(output[\"ReplicationTime\"], context);\n    }\n    if (output[\"Metrics\"] !== undefined) {\n        contents.Metrics = de_Metrics(output[\"Metrics\"], context);\n    }\n    return contents;\n};\nconst de_EncryptionConfiguration = (output, context) => {\n    const contents = {};\n    if (output[\"ReplicaKmsKeyID\"] !== undefined) {\n        contents.ReplicaKmsKeyID = __expectString(output[\"ReplicaKmsKeyID\"]);\n    }\n    return contents;\n};\nconst de_EndEvent = (output, context) => {\n    const contents = {};\n    return contents;\n};\nconst de__Error = (output, context) => {\n    const contents = {};\n    if (output[\"Key\"] !== undefined) {\n        contents.Key = __expectString(output[\"Key\"]);\n    }\n    if (output[\"VersionId\"] !== undefined) {\n        contents.VersionId = __expectString(output[\"VersionId\"]);\n    }\n    if (output[\"Code\"] !== undefined) {\n        contents.Code = __expectString(output[\"Code\"]);\n    }\n    if (output[\"Message\"] !== undefined) {\n        contents.Message = __expectString(output[\"Message\"]);\n    }\n    return contents;\n};\nconst de_ErrorDocument = (output, context) => {\n    const contents = {};\n    if (output[\"Key\"] !== undefined) {\n        contents.Key = __expectString(output[\"Key\"]);\n    }\n    return contents;\n};\nconst de_Errors = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de__Error(entry, context);\n    });\n};\nconst de_EventBridgeConfiguration = (output, context) => {\n    const contents = {};\n    return contents;\n};\nconst de_EventList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return __expectString(entry);\n    });\n};\nconst de_ExistingObjectReplication = (output, context) => {\n    const contents = {};\n    if (output[\"Status\"] !== undefined) {\n        contents.Status = __expectString(output[\"Status\"]);\n    }\n    return contents;\n};\nconst de_ExposeHeaders = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return __expectString(entry);\n    });\n};\nconst de_FilterRule = (output, context) => {\n    const contents = {};\n    if (output[\"Name\"] !== undefined) {\n        contents.Name = __expectString(output[\"Name\"]);\n    }\n    if (output[\"Value\"] !== undefined) {\n        contents.Value = __expectString(output[\"Value\"]);\n    }\n    return contents;\n};\nconst de_FilterRuleList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_FilterRule(entry, context);\n    });\n};\nconst de_GetObjectAttributesParts = (output, context) => {\n    const contents = {};\n    if (output[\"PartsCount\"] !== undefined) {\n        contents.TotalPartsCount = __strictParseInt32(output[\"PartsCount\"]);\n    }\n    if (output[\"PartNumberMarker\"] !== undefined) {\n        contents.PartNumberMarker = __expectString(output[\"PartNumberMarker\"]);\n    }\n    if (output[\"NextPartNumberMarker\"] !== undefined) {\n        contents.NextPartNumberMarker = __expectString(output[\"NextPartNumberMarker\"]);\n    }\n    if (output[\"MaxParts\"] !== undefined) {\n        contents.MaxParts = __strictParseInt32(output[\"MaxParts\"]);\n    }\n    if (output[\"IsTruncated\"] !== undefined) {\n        contents.IsTruncated = __parseBoolean(output[\"IsTruncated\"]);\n    }\n    if (output.Part === \"\") {\n        contents.Parts = [];\n    }\n    else if (output[\"Part\"] !== undefined) {\n        contents.Parts = de_PartsList(__getArrayIfSingleItem(output[\"Part\"]), context);\n    }\n    return contents;\n};\nconst de_Grant = (output, context) => {\n    const contents = {};\n    if (output[\"Grantee\"] !== undefined) {\n        contents.Grantee = de_Grantee(output[\"Grantee\"], context);\n    }\n    if (output[\"Permission\"] !== undefined) {\n        contents.Permission = __expectString(output[\"Permission\"]);\n    }\n    return contents;\n};\nconst de_Grantee = (output, context) => {\n    const contents = {};\n    if (output[\"DisplayName\"] !== undefined) {\n        contents.DisplayName = __expectString(output[\"DisplayName\"]);\n    }\n    if (output[\"EmailAddress\"] !== undefined) {\n        contents.EmailAddress = __expectString(output[\"EmailAddress\"]);\n    }\n    if (output[\"ID\"] !== undefined) {\n        contents.ID = __expectString(output[\"ID\"]);\n    }\n    if (output[\"URI\"] !== undefined) {\n        contents.URI = __expectString(output[\"URI\"]);\n    }\n    if (output[\"xsi:type\"] !== undefined) {\n        contents.Type = __expectString(output[\"xsi:type\"]);\n    }\n    return contents;\n};\nconst de_Grants = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_Grant(entry, context);\n    });\n};\nconst de_IndexDocument = (output, context) => {\n    const contents = {};\n    if (output[\"Suffix\"] !== undefined) {\n        contents.Suffix = __expectString(output[\"Suffix\"]);\n    }\n    return contents;\n};\nconst de_Initiator = (output, context) => {\n    const contents = {};\n    if (output[\"ID\"] !== undefined) {\n        contents.ID = __expectString(output[\"ID\"]);\n    }\n    if (output[\"DisplayName\"] !== undefined) {\n        contents.DisplayName = __expectString(output[\"DisplayName\"]);\n    }\n    return contents;\n};\nconst de_IntelligentTieringAndOperator = (output, context) => {\n    const contents = {};\n    if (output[\"Prefix\"] !== undefined) {\n        contents.Prefix = __expectString(output[\"Prefix\"]);\n    }\n    if (output.Tag === \"\") {\n        contents.Tags = [];\n    }\n    else if (output[\"Tag\"] !== undefined) {\n        contents.Tags = de_TagSet(__getArrayIfSingleItem(output[\"Tag\"]), context);\n    }\n    return contents;\n};\nconst de_IntelligentTieringConfiguration = (output, context) => {\n    const contents = {};\n    if (output[\"Id\"] !== undefined) {\n        contents.Id = __expectString(output[\"Id\"]);\n    }\n    if (output[\"Filter\"] !== undefined) {\n        contents.Filter = de_IntelligentTieringFilter(output[\"Filter\"], context);\n    }\n    if (output[\"Status\"] !== undefined) {\n        contents.Status = __expectString(output[\"Status\"]);\n    }\n    if (output.Tiering === \"\") {\n        contents.Tierings = [];\n    }\n    else if (output[\"Tiering\"] !== undefined) {\n        contents.Tierings = de_TieringList(__getArrayIfSingleItem(output[\"Tiering\"]), context);\n    }\n    return contents;\n};\nconst de_IntelligentTieringConfigurationList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_IntelligentTieringConfiguration(entry, context);\n    });\n};\nconst de_IntelligentTieringFilter = (output, context) => {\n    const contents = {};\n    if (output[\"Prefix\"] !== undefined) {\n        contents.Prefix = __expectString(output[\"Prefix\"]);\n    }\n    if (output[\"Tag\"] !== undefined) {\n        contents.Tag = de_Tag(output[\"Tag\"], context);\n    }\n    if (output[\"And\"] !== undefined) {\n        contents.And = de_IntelligentTieringAndOperator(output[\"And\"], context);\n    }\n    return contents;\n};\nconst de_InventoryConfiguration = (output, context) => {\n    const contents = {};\n    if (output[\"Destination\"] !== undefined) {\n        contents.Destination = de_InventoryDestination(output[\"Destination\"], context);\n    }\n    if (output[\"IsEnabled\"] !== undefined) {\n        contents.IsEnabled = __parseBoolean(output[\"IsEnabled\"]);\n    }\n    if (output[\"Filter\"] !== undefined) {\n        contents.Filter = de_InventoryFilter(output[\"Filter\"], context);\n    }\n    if (output[\"Id\"] !== undefined) {\n        contents.Id = __expectString(output[\"Id\"]);\n    }\n    if (output[\"IncludedObjectVersions\"] !== undefined) {\n        contents.IncludedObjectVersions = __expectString(output[\"IncludedObjectVersions\"]);\n    }\n    if (output.OptionalFields === \"\") {\n        contents.OptionalFields = [];\n    }\n    else if (output[\"OptionalFields\"] !== undefined && output[\"OptionalFields\"][\"Field\"] !== undefined) {\n        contents.OptionalFields = de_InventoryOptionalFields(__getArrayIfSingleItem(output[\"OptionalFields\"][\"Field\"]), context);\n    }\n    if (output[\"Schedule\"] !== undefined) {\n        contents.Schedule = de_InventorySchedule(output[\"Schedule\"], context);\n    }\n    return contents;\n};\nconst de_InventoryConfigurationList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_InventoryConfiguration(entry, context);\n    });\n};\nconst de_InventoryDestination = (output, context) => {\n    const contents = {};\n    if (output[\"S3BucketDestination\"] !== undefined) {\n        contents.S3BucketDestination = de_InventoryS3BucketDestination(output[\"S3BucketDestination\"], context);\n    }\n    return contents;\n};\nconst de_InventoryEncryption = (output, context) => {\n    const contents = {};\n    if (output[\"SSE-S3\"] !== undefined) {\n        contents.SSES3 = de_SSES3(output[\"SSE-S3\"], context);\n    }\n    if (output[\"SSE-KMS\"] !== undefined) {\n        contents.SSEKMS = de_SSEKMS(output[\"SSE-KMS\"], context);\n    }\n    return contents;\n};\nconst de_InventoryFilter = (output, context) => {\n    const contents = {};\n    if (output[\"Prefix\"] !== undefined) {\n        contents.Prefix = __expectString(output[\"Prefix\"]);\n    }\n    return contents;\n};\nconst de_InventoryOptionalFields = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return __expectString(entry);\n    });\n};\nconst de_InventoryS3BucketDestination = (output, context) => {\n    const contents = {};\n    if (output[\"AccountId\"] !== undefined) {\n        contents.AccountId = __expectString(output[\"AccountId\"]);\n    }\n    if (output[\"Bucket\"] !== undefined) {\n        contents.Bucket = __expectString(output[\"Bucket\"]);\n    }\n    if (output[\"Format\"] !== undefined) {\n        contents.Format = __expectString(output[\"Format\"]);\n    }\n    if (output[\"Prefix\"] !== undefined) {\n        contents.Prefix = __expectString(output[\"Prefix\"]);\n    }\n    if (output[\"Encryption\"] !== undefined) {\n        contents.Encryption = de_InventoryEncryption(output[\"Encryption\"], context);\n    }\n    return contents;\n};\nconst de_InventorySchedule = (output, context) => {\n    const contents = {};\n    if (output[\"Frequency\"] !== undefined) {\n        contents.Frequency = __expectString(output[\"Frequency\"]);\n    }\n    return contents;\n};\nconst de_LambdaFunctionConfiguration = (output, context) => {\n    const contents = {};\n    if (output[\"Id\"] !== undefined) {\n        contents.Id = __expectString(output[\"Id\"]);\n    }\n    if (output[\"CloudFunction\"] !== undefined) {\n        contents.LambdaFunctionArn = __expectString(output[\"CloudFunction\"]);\n    }\n    if (output.Event === \"\") {\n        contents.Events = [];\n    }\n    else if (output[\"Event\"] !== undefined) {\n        contents.Events = de_EventList(__getArrayIfSingleItem(output[\"Event\"]), context);\n    }\n    if (output[\"Filter\"] !== undefined) {\n        contents.Filter = de_NotificationConfigurationFilter(output[\"Filter\"], context);\n    }\n    return contents;\n};\nconst de_LambdaFunctionConfigurationList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_LambdaFunctionConfiguration(entry, context);\n    });\n};\nconst de_LifecycleExpiration = (output, context) => {\n    const contents = {};\n    if (output[\"Date\"] !== undefined) {\n        contents.Date = __expectNonNull(__parseRfc3339DateTimeWithOffset(output[\"Date\"]));\n    }\n    if (output[\"Days\"] !== undefined) {\n        contents.Days = __strictParseInt32(output[\"Days\"]);\n    }\n    if (output[\"ExpiredObjectDeleteMarker\"] !== undefined) {\n        contents.ExpiredObjectDeleteMarker = __parseBoolean(output[\"ExpiredObjectDeleteMarker\"]);\n    }\n    return contents;\n};\nconst de_LifecycleRule = (output, context) => {\n    const contents = {};\n    if (output[\"Expiration\"] !== undefined) {\n        contents.Expiration = de_LifecycleExpiration(output[\"Expiration\"], context);\n    }\n    if (output[\"ID\"] !== undefined) {\n        contents.ID = __expectString(output[\"ID\"]);\n    }\n    if (output[\"Prefix\"] !== undefined) {\n        contents.Prefix = __expectString(output[\"Prefix\"]);\n    }\n    if (output.Filter === \"\") {\n    }\n    else if (output[\"Filter\"] !== undefined) {\n        contents.Filter = de_LifecycleRuleFilter(__expectUnion(output[\"Filter\"]), context);\n    }\n    if (output[\"Status\"] !== undefined) {\n        contents.Status = __expectString(output[\"Status\"]);\n    }\n    if (output.Transition === \"\") {\n        contents.Transitions = [];\n    }\n    else if (output[\"Transition\"] !== undefined) {\n        contents.Transitions = de_TransitionList(__getArrayIfSingleItem(output[\"Transition\"]), context);\n    }\n    if (output.NoncurrentVersionTransition === \"\") {\n        contents.NoncurrentVersionTransitions = [];\n    }\n    else if (output[\"NoncurrentVersionTransition\"] !== undefined) {\n        contents.NoncurrentVersionTransitions = de_NoncurrentVersionTransitionList(__getArrayIfSingleItem(output[\"NoncurrentVersionTransition\"]), context);\n    }\n    if (output[\"NoncurrentVersionExpiration\"] !== undefined) {\n        contents.NoncurrentVersionExpiration = de_NoncurrentVersionExpiration(output[\"NoncurrentVersionExpiration\"], context);\n    }\n    if (output[\"AbortIncompleteMultipartUpload\"] !== undefined) {\n        contents.AbortIncompleteMultipartUpload = de_AbortIncompleteMultipartUpload(output[\"AbortIncompleteMultipartUpload\"], context);\n    }\n    return contents;\n};\nconst de_LifecycleRuleAndOperator = (output, context) => {\n    const contents = {};\n    if (output[\"Prefix\"] !== undefined) {\n        contents.Prefix = __expectString(output[\"Prefix\"]);\n    }\n    if (output.Tag === \"\") {\n        contents.Tags = [];\n    }\n    else if (output[\"Tag\"] !== undefined) {\n        contents.Tags = de_TagSet(__getArrayIfSingleItem(output[\"Tag\"]), context);\n    }\n    if (output[\"ObjectSizeGreaterThan\"] !== undefined) {\n        contents.ObjectSizeGreaterThan = __strictParseLong(output[\"ObjectSizeGreaterThan\"]);\n    }\n    if (output[\"ObjectSizeLessThan\"] !== undefined) {\n        contents.ObjectSizeLessThan = __strictParseLong(output[\"ObjectSizeLessThan\"]);\n    }\n    return contents;\n};\nconst de_LifecycleRuleFilter = (output, context) => {\n    if (output[\"Prefix\"] !== undefined) {\n        return {\n            Prefix: __expectString(output[\"Prefix\"]),\n        };\n    }\n    if (output[\"Tag\"] !== undefined) {\n        return {\n            Tag: de_Tag(output[\"Tag\"], context),\n        };\n    }\n    if (output[\"ObjectSizeGreaterThan\"] !== undefined) {\n        return {\n            ObjectSizeGreaterThan: __strictParseLong(output[\"ObjectSizeGreaterThan\"]),\n        };\n    }\n    if (output[\"ObjectSizeLessThan\"] !== undefined) {\n        return {\n            ObjectSizeLessThan: __strictParseLong(output[\"ObjectSizeLessThan\"]),\n        };\n    }\n    if (output[\"And\"] !== undefined) {\n        return {\n            And: de_LifecycleRuleAndOperator(output[\"And\"], context),\n        };\n    }\n    return { $unknown: Object.entries(output)[0] };\n};\nconst de_LifecycleRules = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_LifecycleRule(entry, context);\n    });\n};\nconst de_LoggingEnabled = (output, context) => {\n    const contents = {};\n    if (output[\"TargetBucket\"] !== undefined) {\n        contents.TargetBucket = __expectString(output[\"TargetBucket\"]);\n    }\n    if (output.TargetGrants === \"\") {\n        contents.TargetGrants = [];\n    }\n    else if (output[\"TargetGrants\"] !== undefined && output[\"TargetGrants\"][\"Grant\"] !== undefined) {\n        contents.TargetGrants = de_TargetGrants(__getArrayIfSingleItem(output[\"TargetGrants\"][\"Grant\"]), context);\n    }\n    if (output[\"TargetPrefix\"] !== undefined) {\n        contents.TargetPrefix = __expectString(output[\"TargetPrefix\"]);\n    }\n    return contents;\n};\nconst de_Metrics = (output, context) => {\n    const contents = {};\n    if (output[\"Status\"] !== undefined) {\n        contents.Status = __expectString(output[\"Status\"]);\n    }\n    if (output[\"EventThreshold\"] !== undefined) {\n        contents.EventThreshold = de_ReplicationTimeValue(output[\"EventThreshold\"], context);\n    }\n    return contents;\n};\nconst de_MetricsAndOperator = (output, context) => {\n    const contents = {};\n    if (output[\"Prefix\"] !== undefined) {\n        contents.Prefix = __expectString(output[\"Prefix\"]);\n    }\n    if (output.Tag === \"\") {\n        contents.Tags = [];\n    }\n    else if (output[\"Tag\"] !== undefined) {\n        contents.Tags = de_TagSet(__getArrayIfSingleItem(output[\"Tag\"]), context);\n    }\n    if (output[\"AccessPointArn\"] !== undefined) {\n        contents.AccessPointArn = __expectString(output[\"AccessPointArn\"]);\n    }\n    return contents;\n};\nconst de_MetricsConfiguration = (output, context) => {\n    const contents = {};\n    if (output[\"Id\"] !== undefined) {\n        contents.Id = __expectString(output[\"Id\"]);\n    }\n    if (output.Filter === \"\") {\n    }\n    else if (output[\"Filter\"] !== undefined) {\n        contents.Filter = de_MetricsFilter(__expectUnion(output[\"Filter\"]), context);\n    }\n    return contents;\n};\nconst de_MetricsConfigurationList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_MetricsConfiguration(entry, context);\n    });\n};\nconst de_MetricsFilter = (output, context) => {\n    if (output[\"Prefix\"] !== undefined) {\n        return {\n            Prefix: __expectString(output[\"Prefix\"]),\n        };\n    }\n    if (output[\"Tag\"] !== undefined) {\n        return {\n            Tag: de_Tag(output[\"Tag\"], context),\n        };\n    }\n    if (output[\"AccessPointArn\"] !== undefined) {\n        return {\n            AccessPointArn: __expectString(output[\"AccessPointArn\"]),\n        };\n    }\n    if (output[\"And\"] !== undefined) {\n        return {\n            And: de_MetricsAndOperator(output[\"And\"], context),\n        };\n    }\n    return { $unknown: Object.entries(output)[0] };\n};\nconst de_MultipartUpload = (output, context) => {\n    const contents = {};\n    if (output[\"UploadId\"] !== undefined) {\n        contents.UploadId = __expectString(output[\"UploadId\"]);\n    }\n    if (output[\"Key\"] !== undefined) {\n        contents.Key = __expectString(output[\"Key\"]);\n    }\n    if (output[\"Initiated\"] !== undefined) {\n        contents.Initiated = __expectNonNull(__parseRfc3339DateTimeWithOffset(output[\"Initiated\"]));\n    }\n    if (output[\"StorageClass\"] !== undefined) {\n        contents.StorageClass = __expectString(output[\"StorageClass\"]);\n    }\n    if (output[\"Owner\"] !== undefined) {\n        contents.Owner = de_Owner(output[\"Owner\"], context);\n    }\n    if (output[\"Initiator\"] !== undefined) {\n        contents.Initiator = de_Initiator(output[\"Initiator\"], context);\n    }\n    if (output[\"ChecksumAlgorithm\"] !== undefined) {\n        contents.ChecksumAlgorithm = __expectString(output[\"ChecksumAlgorithm\"]);\n    }\n    return contents;\n};\nconst de_MultipartUploadList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_MultipartUpload(entry, context);\n    });\n};\nconst de_NoncurrentVersionExpiration = (output, context) => {\n    const contents = {};\n    if (output[\"NoncurrentDays\"] !== undefined) {\n        contents.NoncurrentDays = __strictParseInt32(output[\"NoncurrentDays\"]);\n    }\n    if (output[\"NewerNoncurrentVersions\"] !== undefined) {\n        contents.NewerNoncurrentVersions = __strictParseInt32(output[\"NewerNoncurrentVersions\"]);\n    }\n    return contents;\n};\nconst de_NoncurrentVersionTransition = (output, context) => {\n    const contents = {};\n    if (output[\"NoncurrentDays\"] !== undefined) {\n        contents.NoncurrentDays = __strictParseInt32(output[\"NoncurrentDays\"]);\n    }\n    if (output[\"StorageClass\"] !== undefined) {\n        contents.StorageClass = __expectString(output[\"StorageClass\"]);\n    }\n    if (output[\"NewerNoncurrentVersions\"] !== undefined) {\n        contents.NewerNoncurrentVersions = __strictParseInt32(output[\"NewerNoncurrentVersions\"]);\n    }\n    return contents;\n};\nconst de_NoncurrentVersionTransitionList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_NoncurrentVersionTransition(entry, context);\n    });\n};\nconst de_NotificationConfigurationFilter = (output, context) => {\n    const contents = {};\n    if (output[\"S3Key\"] !== undefined) {\n        contents.Key = de_S3KeyFilter(output[\"S3Key\"], context);\n    }\n    return contents;\n};\nconst de__Object = (output, context) => {\n    const contents = {};\n    if (output[\"Key\"] !== undefined) {\n        contents.Key = __expectString(output[\"Key\"]);\n    }\n    if (output[\"LastModified\"] !== undefined) {\n        contents.LastModified = __expectNonNull(__parseRfc3339DateTimeWithOffset(output[\"LastModified\"]));\n    }\n    if (output[\"ETag\"] !== undefined) {\n        contents.ETag = __expectString(output[\"ETag\"]);\n    }\n    if (output.ChecksumAlgorithm === \"\") {\n        contents.ChecksumAlgorithm = [];\n    }\n    else if (output[\"ChecksumAlgorithm\"] !== undefined) {\n        contents.ChecksumAlgorithm = de_ChecksumAlgorithmList(__getArrayIfSingleItem(output[\"ChecksumAlgorithm\"]), context);\n    }\n    if (output[\"Size\"] !== undefined) {\n        contents.Size = __strictParseLong(output[\"Size\"]);\n    }\n    if (output[\"StorageClass\"] !== undefined) {\n        contents.StorageClass = __expectString(output[\"StorageClass\"]);\n    }\n    if (output[\"Owner\"] !== undefined) {\n        contents.Owner = de_Owner(output[\"Owner\"], context);\n    }\n    if (output[\"RestoreStatus\"] !== undefined) {\n        contents.RestoreStatus = de_RestoreStatus(output[\"RestoreStatus\"], context);\n    }\n    return contents;\n};\nconst de_ObjectList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de__Object(entry, context);\n    });\n};\nconst de_ObjectLockConfiguration = (output, context) => {\n    const contents = {};\n    if (output[\"ObjectLockEnabled\"] !== undefined) {\n        contents.ObjectLockEnabled = __expectString(output[\"ObjectLockEnabled\"]);\n    }\n    if (output[\"Rule\"] !== undefined) {\n        contents.Rule = de_ObjectLockRule(output[\"Rule\"], context);\n    }\n    return contents;\n};\nconst de_ObjectLockLegalHold = (output, context) => {\n    const contents = {};\n    if (output[\"Status\"] !== undefined) {\n        contents.Status = __expectString(output[\"Status\"]);\n    }\n    return contents;\n};\nconst de_ObjectLockRetention = (output, context) => {\n    const contents = {};\n    if (output[\"Mode\"] !== undefined) {\n        contents.Mode = __expectString(output[\"Mode\"]);\n    }\n    if (output[\"RetainUntilDate\"] !== undefined) {\n        contents.RetainUntilDate = __expectNonNull(__parseRfc3339DateTimeWithOffset(output[\"RetainUntilDate\"]));\n    }\n    return contents;\n};\nconst de_ObjectLockRule = (output, context) => {\n    const contents = {};\n    if (output[\"DefaultRetention\"] !== undefined) {\n        contents.DefaultRetention = de_DefaultRetention(output[\"DefaultRetention\"], context);\n    }\n    return contents;\n};\nconst de_ObjectPart = (output, context) => {\n    const contents = {};\n    if (output[\"PartNumber\"] !== undefined) {\n        contents.PartNumber = __strictParseInt32(output[\"PartNumber\"]);\n    }\n    if (output[\"Size\"] !== undefined) {\n        contents.Size = __strictParseLong(output[\"Size\"]);\n    }\n    if (output[\"ChecksumCRC32\"] !== undefined) {\n        contents.ChecksumCRC32 = __expectString(output[\"ChecksumCRC32\"]);\n    }\n    if (output[\"ChecksumCRC32C\"] !== undefined) {\n        contents.ChecksumCRC32C = __expectString(output[\"ChecksumCRC32C\"]);\n    }\n    if (output[\"ChecksumSHA1\"] !== undefined) {\n        contents.ChecksumSHA1 = __expectString(output[\"ChecksumSHA1\"]);\n    }\n    if (output[\"ChecksumSHA256\"] !== undefined) {\n        contents.ChecksumSHA256 = __expectString(output[\"ChecksumSHA256\"]);\n    }\n    return contents;\n};\nconst de_ObjectVersion = (output, context) => {\n    const contents = {};\n    if (output[\"ETag\"] !== undefined) {\n        contents.ETag = __expectString(output[\"ETag\"]);\n    }\n    if (output.ChecksumAlgorithm === \"\") {\n        contents.ChecksumAlgorithm = [];\n    }\n    else if (output[\"ChecksumAlgorithm\"] !== undefined) {\n        contents.ChecksumAlgorithm = de_ChecksumAlgorithmList(__getArrayIfSingleItem(output[\"ChecksumAlgorithm\"]), context);\n    }\n    if (output[\"Size\"] !== undefined) {\n        contents.Size = __strictParseLong(output[\"Size\"]);\n    }\n    if (output[\"StorageClass\"] !== undefined) {\n        contents.StorageClass = __expectString(output[\"StorageClass\"]);\n    }\n    if (output[\"Key\"] !== undefined) {\n        contents.Key = __expectString(output[\"Key\"]);\n    }\n    if (output[\"VersionId\"] !== undefined) {\n        contents.VersionId = __expectString(output[\"VersionId\"]);\n    }\n    if (output[\"IsLatest\"] !== undefined) {\n        contents.IsLatest = __parseBoolean(output[\"IsLatest\"]);\n    }\n    if (output[\"LastModified\"] !== undefined) {\n        contents.LastModified = __expectNonNull(__parseRfc3339DateTimeWithOffset(output[\"LastModified\"]));\n    }\n    if (output[\"Owner\"] !== undefined) {\n        contents.Owner = de_Owner(output[\"Owner\"], context);\n    }\n    if (output[\"RestoreStatus\"] !== undefined) {\n        contents.RestoreStatus = de_RestoreStatus(output[\"RestoreStatus\"], context);\n    }\n    return contents;\n};\nconst de_ObjectVersionList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_ObjectVersion(entry, context);\n    });\n};\nconst de_Owner = (output, context) => {\n    const contents = {};\n    if (output[\"DisplayName\"] !== undefined) {\n        contents.DisplayName = __expectString(output[\"DisplayName\"]);\n    }\n    if (output[\"ID\"] !== undefined) {\n        contents.ID = __expectString(output[\"ID\"]);\n    }\n    return contents;\n};\nconst de_OwnershipControls = (output, context) => {\n    const contents = {};\n    if (output.Rule === \"\") {\n        contents.Rules = [];\n    }\n    else if (output[\"Rule\"] !== undefined) {\n        contents.Rules = de_OwnershipControlsRules(__getArrayIfSingleItem(output[\"Rule\"]), context);\n    }\n    return contents;\n};\nconst de_OwnershipControlsRule = (output, context) => {\n    const contents = {};\n    if (output[\"ObjectOwnership\"] !== undefined) {\n        contents.ObjectOwnership = __expectString(output[\"ObjectOwnership\"]);\n    }\n    return contents;\n};\nconst de_OwnershipControlsRules = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_OwnershipControlsRule(entry, context);\n    });\n};\nconst de_Part = (output, context) => {\n    const contents = {};\n    if (output[\"PartNumber\"] !== undefined) {\n        contents.PartNumber = __strictParseInt32(output[\"PartNumber\"]);\n    }\n    if (output[\"LastModified\"] !== undefined) {\n        contents.LastModified = __expectNonNull(__parseRfc3339DateTimeWithOffset(output[\"LastModified\"]));\n    }\n    if (output[\"ETag\"] !== undefined) {\n        contents.ETag = __expectString(output[\"ETag\"]);\n    }\n    if (output[\"Size\"] !== undefined) {\n        contents.Size = __strictParseLong(output[\"Size\"]);\n    }\n    if (output[\"ChecksumCRC32\"] !== undefined) {\n        contents.ChecksumCRC32 = __expectString(output[\"ChecksumCRC32\"]);\n    }\n    if (output[\"ChecksumCRC32C\"] !== undefined) {\n        contents.ChecksumCRC32C = __expectString(output[\"ChecksumCRC32C\"]);\n    }\n    if (output[\"ChecksumSHA1\"] !== undefined) {\n        contents.ChecksumSHA1 = __expectString(output[\"ChecksumSHA1\"]);\n    }\n    if (output[\"ChecksumSHA256\"] !== undefined) {\n        contents.ChecksumSHA256 = __expectString(output[\"ChecksumSHA256\"]);\n    }\n    return contents;\n};\nconst de_Parts = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_Part(entry, context);\n    });\n};\nconst de_PartsList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_ObjectPart(entry, context);\n    });\n};\nconst de_PolicyStatus = (output, context) => {\n    const contents = {};\n    if (output[\"IsPublic\"] !== undefined) {\n        contents.IsPublic = __parseBoolean(output[\"IsPublic\"]);\n    }\n    return contents;\n};\nconst de_Progress = (output, context) => {\n    const contents = {};\n    if (output[\"BytesScanned\"] !== undefined) {\n        contents.BytesScanned = __strictParseLong(output[\"BytesScanned\"]);\n    }\n    if (output[\"BytesProcessed\"] !== undefined) {\n        contents.BytesProcessed = __strictParseLong(output[\"BytesProcessed\"]);\n    }\n    if (output[\"BytesReturned\"] !== undefined) {\n        contents.BytesReturned = __strictParseLong(output[\"BytesReturned\"]);\n    }\n    return contents;\n};\nconst de_PublicAccessBlockConfiguration = (output, context) => {\n    const contents = {};\n    if (output[\"BlockPublicAcls\"] !== undefined) {\n        contents.BlockPublicAcls = __parseBoolean(output[\"BlockPublicAcls\"]);\n    }\n    if (output[\"IgnorePublicAcls\"] !== undefined) {\n        contents.IgnorePublicAcls = __parseBoolean(output[\"IgnorePublicAcls\"]);\n    }\n    if (output[\"BlockPublicPolicy\"] !== undefined) {\n        contents.BlockPublicPolicy = __parseBoolean(output[\"BlockPublicPolicy\"]);\n    }\n    if (output[\"RestrictPublicBuckets\"] !== undefined) {\n        contents.RestrictPublicBuckets = __parseBoolean(output[\"RestrictPublicBuckets\"]);\n    }\n    return contents;\n};\nconst de_QueueConfiguration = (output, context) => {\n    const contents = {};\n    if (output[\"Id\"] !== undefined) {\n        contents.Id = __expectString(output[\"Id\"]);\n    }\n    if (output[\"Queue\"] !== undefined) {\n        contents.QueueArn = __expectString(output[\"Queue\"]);\n    }\n    if (output.Event === \"\") {\n        contents.Events = [];\n    }\n    else if (output[\"Event\"] !== undefined) {\n        contents.Events = de_EventList(__getArrayIfSingleItem(output[\"Event\"]), context);\n    }\n    if (output[\"Filter\"] !== undefined) {\n        contents.Filter = de_NotificationConfigurationFilter(output[\"Filter\"], context);\n    }\n    return contents;\n};\nconst de_QueueConfigurationList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_QueueConfiguration(entry, context);\n    });\n};\nconst de_Redirect = (output, context) => {\n    const contents = {};\n    if (output[\"HostName\"] !== undefined) {\n        contents.HostName = __expectString(output[\"HostName\"]);\n    }\n    if (output[\"HttpRedirectCode\"] !== undefined) {\n        contents.HttpRedirectCode = __expectString(output[\"HttpRedirectCode\"]);\n    }\n    if (output[\"Protocol\"] !== undefined) {\n        contents.Protocol = __expectString(output[\"Protocol\"]);\n    }\n    if (output[\"ReplaceKeyPrefixWith\"] !== undefined) {\n        contents.ReplaceKeyPrefixWith = __expectString(output[\"ReplaceKeyPrefixWith\"]);\n    }\n    if (output[\"ReplaceKeyWith\"] !== undefined) {\n        contents.ReplaceKeyWith = __expectString(output[\"ReplaceKeyWith\"]);\n    }\n    return contents;\n};\nconst de_RedirectAllRequestsTo = (output, context) => {\n    const contents = {};\n    if (output[\"HostName\"] !== undefined) {\n        contents.HostName = __expectString(output[\"HostName\"]);\n    }\n    if (output[\"Protocol\"] !== undefined) {\n        contents.Protocol = __expectString(output[\"Protocol\"]);\n    }\n    return contents;\n};\nconst de_ReplicaModifications = (output, context) => {\n    const contents = {};\n    if (output[\"Status\"] !== undefined) {\n        contents.Status = __expectString(output[\"Status\"]);\n    }\n    return contents;\n};\nconst de_ReplicationConfiguration = (output, context) => {\n    const contents = {};\n    if (output[\"Role\"] !== undefined) {\n        contents.Role = __expectString(output[\"Role\"]);\n    }\n    if (output.Rule === \"\") {\n        contents.Rules = [];\n    }\n    else if (output[\"Rule\"] !== undefined) {\n        contents.Rules = de_ReplicationRules(__getArrayIfSingleItem(output[\"Rule\"]), context);\n    }\n    return contents;\n};\nconst de_ReplicationRule = (output, context) => {\n    const contents = {};\n    if (output[\"ID\"] !== undefined) {\n        contents.ID = __expectString(output[\"ID\"]);\n    }\n    if (output[\"Priority\"] !== undefined) {\n        contents.Priority = __strictParseInt32(output[\"Priority\"]);\n    }\n    if (output[\"Prefix\"] !== undefined) {\n        contents.Prefix = __expectString(output[\"Prefix\"]);\n    }\n    if (output.Filter === \"\") {\n    }\n    else if (output[\"Filter\"] !== undefined) {\n        contents.Filter = de_ReplicationRuleFilter(__expectUnion(output[\"Filter\"]), context);\n    }\n    if (output[\"Status\"] !== undefined) {\n        contents.Status = __expectString(output[\"Status\"]);\n    }\n    if (output[\"SourceSelectionCriteria\"] !== undefined) {\n        contents.SourceSelectionCriteria = de_SourceSelectionCriteria(output[\"SourceSelectionCriteria\"], context);\n    }\n    if (output[\"ExistingObjectReplication\"] !== undefined) {\n        contents.ExistingObjectReplication = de_ExistingObjectReplication(output[\"ExistingObjectReplication\"], context);\n    }\n    if (output[\"Destination\"] !== undefined) {\n        contents.Destination = de_Destination(output[\"Destination\"], context);\n    }\n    if (output[\"DeleteMarkerReplication\"] !== undefined) {\n        contents.DeleteMarkerReplication = de_DeleteMarkerReplication(output[\"DeleteMarkerReplication\"], context);\n    }\n    return contents;\n};\nconst de_ReplicationRuleAndOperator = (output, context) => {\n    const contents = {};\n    if (output[\"Prefix\"] !== undefined) {\n        contents.Prefix = __expectString(output[\"Prefix\"]);\n    }\n    if (output.Tag === \"\") {\n        contents.Tags = [];\n    }\n    else if (output[\"Tag\"] !== undefined) {\n        contents.Tags = de_TagSet(__getArrayIfSingleItem(output[\"Tag\"]), context);\n    }\n    return contents;\n};\nconst de_ReplicationRuleFilter = (output, context) => {\n    if (output[\"Prefix\"] !== undefined) {\n        return {\n            Prefix: __expectString(output[\"Prefix\"]),\n        };\n    }\n    if (output[\"Tag\"] !== undefined) {\n        return {\n            Tag: de_Tag(output[\"Tag\"], context),\n        };\n    }\n    if (output[\"And\"] !== undefined) {\n        return {\n            And: de_ReplicationRuleAndOperator(output[\"And\"], context),\n        };\n    }\n    return { $unknown: Object.entries(output)[0] };\n};\nconst de_ReplicationRules = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_ReplicationRule(entry, context);\n    });\n};\nconst de_ReplicationTime = (output, context) => {\n    const contents = {};\n    if (output[\"Status\"] !== undefined) {\n        contents.Status = __expectString(output[\"Status\"]);\n    }\n    if (output[\"Time\"] !== undefined) {\n        contents.Time = de_ReplicationTimeValue(output[\"Time\"], context);\n    }\n    return contents;\n};\nconst de_ReplicationTimeValue = (output, context) => {\n    const contents = {};\n    if (output[\"Minutes\"] !== undefined) {\n        contents.Minutes = __strictParseInt32(output[\"Minutes\"]);\n    }\n    return contents;\n};\nconst de_RestoreStatus = (output, context) => {\n    const contents = {};\n    if (output[\"IsRestoreInProgress\"] !== undefined) {\n        contents.IsRestoreInProgress = __parseBoolean(output[\"IsRestoreInProgress\"]);\n    }\n    if (output[\"RestoreExpiryDate\"] !== undefined) {\n        contents.RestoreExpiryDate = __expectNonNull(__parseRfc3339DateTimeWithOffset(output[\"RestoreExpiryDate\"]));\n    }\n    return contents;\n};\nconst de_RoutingRule = (output, context) => {\n    const contents = {};\n    if (output[\"Condition\"] !== undefined) {\n        contents.Condition = de_Condition(output[\"Condition\"], context);\n    }\n    if (output[\"Redirect\"] !== undefined) {\n        contents.Redirect = de_Redirect(output[\"Redirect\"], context);\n    }\n    return contents;\n};\nconst de_RoutingRules = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_RoutingRule(entry, context);\n    });\n};\nconst de_S3KeyFilter = (output, context) => {\n    const contents = {};\n    if (output.FilterRule === \"\") {\n        contents.FilterRules = [];\n    }\n    else if (output[\"FilterRule\"] !== undefined) {\n        contents.FilterRules = de_FilterRuleList(__getArrayIfSingleItem(output[\"FilterRule\"]), context);\n    }\n    return contents;\n};\nconst de_ServerSideEncryptionByDefault = (output, context) => {\n    const contents = {};\n    if (output[\"SSEAlgorithm\"] !== undefined) {\n        contents.SSEAlgorithm = __expectString(output[\"SSEAlgorithm\"]);\n    }\n    if (output[\"KMSMasterKeyID\"] !== undefined) {\n        contents.KMSMasterKeyID = __expectString(output[\"KMSMasterKeyID\"]);\n    }\n    return contents;\n};\nconst de_ServerSideEncryptionConfiguration = (output, context) => {\n    const contents = {};\n    if (output.Rule === \"\") {\n        contents.Rules = [];\n    }\n    else if (output[\"Rule\"] !== undefined) {\n        contents.Rules = de_ServerSideEncryptionRules(__getArrayIfSingleItem(output[\"Rule\"]), context);\n    }\n    return contents;\n};\nconst de_ServerSideEncryptionRule = (output, context) => {\n    const contents = {};\n    if (output[\"ApplyServerSideEncryptionByDefault\"] !== undefined) {\n        contents.ApplyServerSideEncryptionByDefault = de_ServerSideEncryptionByDefault(output[\"ApplyServerSideEncryptionByDefault\"], context);\n    }\n    if (output[\"BucketKeyEnabled\"] !== undefined) {\n        contents.BucketKeyEnabled = __parseBoolean(output[\"BucketKeyEnabled\"]);\n    }\n    return contents;\n};\nconst de_ServerSideEncryptionRules = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_ServerSideEncryptionRule(entry, context);\n    });\n};\nconst de_SourceSelectionCriteria = (output, context) => {\n    const contents = {};\n    if (output[\"SseKmsEncryptedObjects\"] !== undefined) {\n        contents.SseKmsEncryptedObjects = de_SseKmsEncryptedObjects(output[\"SseKmsEncryptedObjects\"], context);\n    }\n    if (output[\"ReplicaModifications\"] !== undefined) {\n        contents.ReplicaModifications = de_ReplicaModifications(output[\"ReplicaModifications\"], context);\n    }\n    return contents;\n};\nconst de_SSEKMS = (output, context) => {\n    const contents = {};\n    if (output[\"KeyId\"] !== undefined) {\n        contents.KeyId = __expectString(output[\"KeyId\"]);\n    }\n    return contents;\n};\nconst de_SseKmsEncryptedObjects = (output, context) => {\n    const contents = {};\n    if (output[\"Status\"] !== undefined) {\n        contents.Status = __expectString(output[\"Status\"]);\n    }\n    return contents;\n};\nconst de_SSES3 = (output, context) => {\n    const contents = {};\n    return contents;\n};\nconst de_Stats = (output, context) => {\n    const contents = {};\n    if (output[\"BytesScanned\"] !== undefined) {\n        contents.BytesScanned = __strictParseLong(output[\"BytesScanned\"]);\n    }\n    if (output[\"BytesProcessed\"] !== undefined) {\n        contents.BytesProcessed = __strictParseLong(output[\"BytesProcessed\"]);\n    }\n    if (output[\"BytesReturned\"] !== undefined) {\n        contents.BytesReturned = __strictParseLong(output[\"BytesReturned\"]);\n    }\n    return contents;\n};\nconst de_StorageClassAnalysis = (output, context) => {\n    const contents = {};\n    if (output[\"DataExport\"] !== undefined) {\n        contents.DataExport = de_StorageClassAnalysisDataExport(output[\"DataExport\"], context);\n    }\n    return contents;\n};\nconst de_StorageClassAnalysisDataExport = (output, context) => {\n    const contents = {};\n    if (output[\"OutputSchemaVersion\"] !== undefined) {\n        contents.OutputSchemaVersion = __expectString(output[\"OutputSchemaVersion\"]);\n    }\n    if (output[\"Destination\"] !== undefined) {\n        contents.Destination = de_AnalyticsExportDestination(output[\"Destination\"], context);\n    }\n    return contents;\n};\nconst de_Tag = (output, context) => {\n    const contents = {};\n    if (output[\"Key\"] !== undefined) {\n        contents.Key = __expectString(output[\"Key\"]);\n    }\n    if (output[\"Value\"] !== undefined) {\n        contents.Value = __expectString(output[\"Value\"]);\n    }\n    return contents;\n};\nconst de_TagSet = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_Tag(entry, context);\n    });\n};\nconst de_TargetGrant = (output, context) => {\n    const contents = {};\n    if (output[\"Grantee\"] !== undefined) {\n        contents.Grantee = de_Grantee(output[\"Grantee\"], context);\n    }\n    if (output[\"Permission\"] !== undefined) {\n        contents.Permission = __expectString(output[\"Permission\"]);\n    }\n    return contents;\n};\nconst de_TargetGrants = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_TargetGrant(entry, context);\n    });\n};\nconst de_Tiering = (output, context) => {\n    const contents = {};\n    if (output[\"Days\"] !== undefined) {\n        contents.Days = __strictParseInt32(output[\"Days\"]);\n    }\n    if (output[\"AccessTier\"] !== undefined) {\n        contents.AccessTier = __expectString(output[\"AccessTier\"]);\n    }\n    return contents;\n};\nconst de_TieringList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_Tiering(entry, context);\n    });\n};\nconst de_TopicConfiguration = (output, context) => {\n    const contents = {};\n    if (output[\"Id\"] !== undefined) {\n        contents.Id = __expectString(output[\"Id\"]);\n    }\n    if (output[\"Topic\"] !== undefined) {\n        contents.TopicArn = __expectString(output[\"Topic\"]);\n    }\n    if (output.Event === \"\") {\n        contents.Events = [];\n    }\n    else if (output[\"Event\"] !== undefined) {\n        contents.Events = de_EventList(__getArrayIfSingleItem(output[\"Event\"]), context);\n    }\n    if (output[\"Filter\"] !== undefined) {\n        contents.Filter = de_NotificationConfigurationFilter(output[\"Filter\"], context);\n    }\n    return contents;\n};\nconst de_TopicConfigurationList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_TopicConfiguration(entry, context);\n    });\n};\nconst de_Transition = (output, context) => {\n    const contents = {};\n    if (output[\"Date\"] !== undefined) {\n        contents.Date = __expectNonNull(__parseRfc3339DateTimeWithOffset(output[\"Date\"]));\n    }\n    if (output[\"Days\"] !== undefined) {\n        contents.Days = __strictParseInt32(output[\"Days\"]);\n    }\n    if (output[\"StorageClass\"] !== undefined) {\n        contents.StorageClass = __expectString(output[\"StorageClass\"]);\n    }\n    return contents;\n};\nconst de_TransitionList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_Transition(entry, context);\n    });\n};\nconst deserializeMetadata = (output) => ({\n    httpStatusCode: output.statusCode,\n    requestId: output.headers[\"x-amzn-requestid\"] ?? output.headers[\"x-amzn-request-id\"] ?? output.headers[\"x-amz-request-id\"],\n    extendedRequestId: output.headers[\"x-amz-id-2\"],\n    cfId: output.headers[\"x-amz-cf-id\"],\n});\nconst collectBodyString = (streamBody, context) => collectBody(streamBody, context).then((body) => context.utf8Encoder(body));\nconst isSerializableHeaderValue = (value) => value !== undefined &&\n    value !== null &&\n    value !== \"\" &&\n    (!Object.getOwnPropertyNames(value).includes(\"length\") || value.length != 0) &&\n    (!Object.getOwnPropertyNames(value).includes(\"size\") || value.size != 0);\nconst parseBody = (streamBody, context) => collectBodyString(streamBody, context).then((encoded) => {\n    if (encoded.length) {\n        const parser = new XMLParser({\n            attributeNamePrefix: \"\",\n            htmlEntities: true,\n            ignoreAttributes: false,\n            ignoreDeclaration: true,\n            parseTagValue: false,\n            trimValues: false,\n            tagValueProcessor: (_, val) => (val.trim() === \"\" && val.includes(\"\\n\") ? \"\" : undefined),\n        });\n        parser.addEntity(\"#xD\", \"\\r\");\n        parser.addEntity(\"#10\", \"\\n\");\n        const parsedObj = parser.parse(encoded);\n        const textNodeName = \"#text\";\n        const key = Object.keys(parsedObj)[0];\n        const parsedObjToReturn = parsedObj[key];\n        if (parsedObjToReturn[textNodeName]) {\n            parsedObjToReturn[key] = parsedObjToReturn[textNodeName];\n            delete parsedObjToReturn[textNodeName];\n        }\n        return __getValueFromTextNode(parsedObjToReturn);\n    }\n    return {};\n});\nconst parseErrorBody = async (errorBody, context) => {\n    const value = await parseBody(errorBody, context);\n    if (value.Error) {\n        value.Error.message = value.Error.message ?? value.Error.Message;\n    }\n    return value;\n};\nconst loadRestXmlErrorCode = (output, data) => {\n    if (data?.Code !== undefined) {\n        return data.Code;\n    }\n    if (output.statusCode == 404) {\n        return \"NotFound\";\n    }\n};\n","export function ssecMiddleware(options) {\n    return (next) => async (args) => {\n        let input = { ...args.input };\n        const properties = [\n            {\n                target: \"SSECustomerKey\",\n                hash: \"SSECustomerKeyMD5\",\n            },\n            {\n                target: \"CopySourceSSECustomerKey\",\n                hash: \"CopySourceSSECustomerKeyMD5\",\n            },\n        ];\n        for (const prop of properties) {\n            const value = input[prop.target];\n            if (value) {\n                const valueView = ArrayBuffer.isView(value)\n                    ? new Uint8Array(value.buffer, value.byteOffset, value.byteLength)\n                    : typeof value === \"string\"\n                        ? options.utf8Decoder(value)\n                        : new Uint8Array(value);\n                const encoded = options.base64Encoder(valueView);\n                const hash = new options.md5();\n                hash.update(valueView);\n                input = {\n                    ...input,\n                    [prop.target]: encoded,\n                    [prop.hash]: options.base64Encoder(await hash.digest()),\n                };\n            }\n        }\n        return next({\n            ...args,\n            input,\n        });\n    };\n}\nexport const ssecMiddlewareOptions = {\n    name: \"ssecMiddleware\",\n    step: \"initialize\",\n    tags: [\"SSE\"],\n    override: true,\n};\nexport const getSsecPlugin = (config) => ({\n    applyToStack: (clientStack) => {\n        clientStack.add(ssecMiddleware(config), ssecMiddlewareOptions);\n    },\n});\n","export var ChecksumAlgorithm;\n(function (ChecksumAlgorithm) {\n    ChecksumAlgorithm[\"MD5\"] = \"MD5\";\n    ChecksumAlgorithm[\"CRC32\"] = \"CRC32\";\n    ChecksumAlgorithm[\"CRC32C\"] = \"CRC32C\";\n    ChecksumAlgorithm[\"SHA1\"] = \"SHA1\";\n    ChecksumAlgorithm[\"SHA256\"] = \"SHA256\";\n})(ChecksumAlgorithm || (ChecksumAlgorithm = {}));\nexport var ChecksumLocation;\n(function (ChecksumLocation) {\n    ChecksumLocation[\"HEADER\"] = \"header\";\n    ChecksumLocation[\"TRAILER\"] = \"trailer\";\n})(ChecksumLocation || (ChecksumLocation = {}));\n","import { ChecksumAlgorithm } from \"./constants\";\nexport const CLIENT_SUPPORTED_ALGORITHMS = [\n    ChecksumAlgorithm.CRC32,\n    ChecksumAlgorithm.CRC32C,\n    ChecksumAlgorithm.SHA1,\n    ChecksumAlgorithm.SHA256,\n];\nexport const PRIORITY_ORDER_ALGORITHMS = [\n    ChecksumAlgorithm.CRC32,\n    ChecksumAlgorithm.CRC32C,\n    ChecksumAlgorithm.SHA1,\n    ChecksumAlgorithm.SHA256,\n];\n","import { ChecksumAlgorithm } from \"./constants\";\nimport { CLIENT_SUPPORTED_ALGORITHMS } from \"./types\";\nexport const getChecksumAlgorithmForRequest = (input, { requestChecksumRequired, requestAlgorithmMember }) => {\n    if (!requestAlgorithmMember || !input[requestAlgorithmMember]) {\n        return requestChecksumRequired ? ChecksumAlgorithm.MD5 : undefined;\n    }\n    const checksumAlgorithm = input[requestAlgorithmMember];\n    if (!CLIENT_SUPPORTED_ALGORITHMS.includes(checksumAlgorithm)) {\n        throw new Error(`The checksum algorithm \"${checksumAlgorithm}\" is not supported by the client.` +\n            ` Select one of ${CLIENT_SUPPORTED_ALGORITHMS}.`);\n    }\n    return checksumAlgorithm;\n};\n","import { ChecksumAlgorithm } from \"./constants\";\nexport const getChecksumLocationName = (algorithm) => algorithm === ChecksumAlgorithm.MD5 ? \"content-md5\" : `x-amz-checksum-${algorithm.toLowerCase()}`;\n","export const hasHeader = (header, headers) => {\n    const soughtHeader = header.toLowerCase();\n    for (const headerName of Object.keys(headers)) {\n        if (soughtHeader === headerName.toLowerCase()) {\n            return true;\n        }\n    }\n    return false;\n};\n","import { isArrayBuffer } from \"@smithy/is-array-buffer\";\nexport const isStreaming = (body) => body !== undefined && typeof body !== \"string\" && !ArrayBuffer.isView(body) && !isArrayBuffer(body);\n","\"use strict\";\n// Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AwsCrc32c = void 0;\nvar tslib_1 = require(\"tslib\");\nvar util_1 = require(\"@aws-crypto/util\");\nvar index_1 = require(\"./index\");\nvar AwsCrc32c = /** @class */ (function () {\n    function AwsCrc32c() {\n        this.crc32c = new index_1.Crc32c();\n    }\n    AwsCrc32c.prototype.update = function (toHash) {\n        if ((0, util_1.isEmptyData)(toHash))\n            return;\n        this.crc32c.update((0, util_1.convertToBuffer)(toHash));\n    };\n    AwsCrc32c.prototype.digest = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, (0, util_1.numToUint8)(this.crc32c.digest())];\n            });\n        });\n    };\n    AwsCrc32c.prototype.reset = function () {\n        this.crc32c = new index_1.Crc32c();\n    };\n    return AwsCrc32c;\n}());\nexports.AwsCrc32c = AwsCrc32c;\n//# sourceMappingURL=aws_crc32c.js.map","\"use strict\";\n// Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AwsCrc32c = exports.Crc32c = exports.crc32c = void 0;\nvar tslib_1 = require(\"tslib\");\nvar util_1 = require(\"@aws-crypto/util\");\nfunction crc32c(data) {\n    return new Crc32c().update(data).digest();\n}\nexports.crc32c = crc32c;\nvar Crc32c = /** @class */ (function () {\n    function Crc32c() {\n        this.checksum = 0xffffffff;\n    }\n    Crc32c.prototype.update = function (data) {\n        var e_1, _a;\n        try {\n            for (var data_1 = tslib_1.__values(data), data_1_1 = data_1.next(); !data_1_1.done; data_1_1 = data_1.next()) {\n                var byte = data_1_1.value;\n                this.checksum =\n                    (this.checksum >>> 8) ^ lookupTable[(this.checksum ^ byte) & 0xff];\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (data_1_1 && !data_1_1.done && (_a = data_1.return)) _a.call(data_1);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return this;\n    };\n    Crc32c.prototype.digest = function () {\n        return (this.checksum ^ 0xffffffff) >>> 0;\n    };\n    return Crc32c;\n}());\nexports.Crc32c = Crc32c;\n// prettier-ignore\nvar a_lookupTable = [\n    0x00000000, 0xF26B8303, 0xE13B70F7, 0x1350F3F4, 0xC79A971F, 0x35F1141C, 0x26A1E7E8, 0xD4CA64EB,\n    0x8AD958CF, 0x78B2DBCC, 0x6BE22838, 0x9989AB3B, 0x4D43CFD0, 0xBF284CD3, 0xAC78BF27, 0x5E133C24,\n    0x105EC76F, 0xE235446C, 0xF165B798, 0x030E349B, 0xD7C45070, 0x25AFD373, 0x36FF2087, 0xC494A384,\n    0x9A879FA0, 0x68EC1CA3, 0x7BBCEF57, 0x89D76C54, 0x5D1D08BF, 0xAF768BBC, 0xBC267848, 0x4E4DFB4B,\n    0x20BD8EDE, 0xD2D60DDD, 0xC186FE29, 0x33ED7D2A, 0xE72719C1, 0x154C9AC2, 0x061C6936, 0xF477EA35,\n    0xAA64D611, 0x580F5512, 0x4B5FA6E6, 0xB93425E5, 0x6DFE410E, 0x9F95C20D, 0x8CC531F9, 0x7EAEB2FA,\n    0x30E349B1, 0xC288CAB2, 0xD1D83946, 0x23B3BA45, 0xF779DEAE, 0x05125DAD, 0x1642AE59, 0xE4292D5A,\n    0xBA3A117E, 0x4851927D, 0x5B016189, 0xA96AE28A, 0x7DA08661, 0x8FCB0562, 0x9C9BF696, 0x6EF07595,\n    0x417B1DBC, 0xB3109EBF, 0xA0406D4B, 0x522BEE48, 0x86E18AA3, 0x748A09A0, 0x67DAFA54, 0x95B17957,\n    0xCBA24573, 0x39C9C670, 0x2A993584, 0xD8F2B687, 0x0C38D26C, 0xFE53516F, 0xED03A29B, 0x1F682198,\n    0x5125DAD3, 0xA34E59D0, 0xB01EAA24, 0x42752927, 0x96BF4DCC, 0x64D4CECF, 0x77843D3B, 0x85EFBE38,\n    0xDBFC821C, 0x2997011F, 0x3AC7F2EB, 0xC8AC71E8, 0x1C661503, 0xEE0D9600, 0xFD5D65F4, 0x0F36E6F7,\n    0x61C69362, 0x93AD1061, 0x80FDE395, 0x72966096, 0xA65C047D, 0x5437877E, 0x4767748A, 0xB50CF789,\n    0xEB1FCBAD, 0x197448AE, 0x0A24BB5A, 0xF84F3859, 0x2C855CB2, 0xDEEEDFB1, 0xCDBE2C45, 0x3FD5AF46,\n    0x7198540D, 0x83F3D70E, 0x90A324FA, 0x62C8A7F9, 0xB602C312, 0x44694011, 0x5739B3E5, 0xA55230E6,\n    0xFB410CC2, 0x092A8FC1, 0x1A7A7C35, 0xE811FF36, 0x3CDB9BDD, 0xCEB018DE, 0xDDE0EB2A, 0x2F8B6829,\n    0x82F63B78, 0x709DB87B, 0x63CD4B8F, 0x91A6C88C, 0x456CAC67, 0xB7072F64, 0xA457DC90, 0x563C5F93,\n    0x082F63B7, 0xFA44E0B4, 0xE9141340, 0x1B7F9043, 0xCFB5F4A8, 0x3DDE77AB, 0x2E8E845F, 0xDCE5075C,\n    0x92A8FC17, 0x60C37F14, 0x73938CE0, 0x81F80FE3, 0x55326B08, 0xA759E80B, 0xB4091BFF, 0x466298FC,\n    0x1871A4D8, 0xEA1A27DB, 0xF94AD42F, 0x0B21572C, 0xDFEB33C7, 0x2D80B0C4, 0x3ED04330, 0xCCBBC033,\n    0xA24BB5A6, 0x502036A5, 0x4370C551, 0xB11B4652, 0x65D122B9, 0x97BAA1BA, 0x84EA524E, 0x7681D14D,\n    0x2892ED69, 0xDAF96E6A, 0xC9A99D9E, 0x3BC21E9D, 0xEF087A76, 0x1D63F975, 0x0E330A81, 0xFC588982,\n    0xB21572C9, 0x407EF1CA, 0x532E023E, 0xA145813D, 0x758FE5D6, 0x87E466D5, 0x94B49521, 0x66DF1622,\n    0x38CC2A06, 0xCAA7A905, 0xD9F75AF1, 0x2B9CD9F2, 0xFF56BD19, 0x0D3D3E1A, 0x1E6DCDEE, 0xEC064EED,\n    0xC38D26C4, 0x31E6A5C7, 0x22B65633, 0xD0DDD530, 0x0417B1DB, 0xF67C32D8, 0xE52CC12C, 0x1747422F,\n    0x49547E0B, 0xBB3FFD08, 0xA86F0EFC, 0x5A048DFF, 0x8ECEE914, 0x7CA56A17, 0x6FF599E3, 0x9D9E1AE0,\n    0xD3D3E1AB, 0x21B862A8, 0x32E8915C, 0xC083125F, 0x144976B4, 0xE622F5B7, 0xF5720643, 0x07198540,\n    0x590AB964, 0xAB613A67, 0xB831C993, 0x4A5A4A90, 0x9E902E7B, 0x6CFBAD78, 0x7FAB5E8C, 0x8DC0DD8F,\n    0xE330A81A, 0x115B2B19, 0x020BD8ED, 0xF0605BEE, 0x24AA3F05, 0xD6C1BC06, 0xC5914FF2, 0x37FACCF1,\n    0x69E9F0D5, 0x9B8273D6, 0x88D28022, 0x7AB90321, 0xAE7367CA, 0x5C18E4C9, 0x4F48173D, 0xBD23943E,\n    0xF36E6F75, 0x0105EC76, 0x12551F82, 0xE03E9C81, 0x34F4F86A, 0xC69F7B69, 0xD5CF889D, 0x27A40B9E,\n    0x79B737BA, 0x8BDCB4B9, 0x988C474D, 0x6AE7C44E, 0xBE2DA0A5, 0x4C4623A6, 0x5F16D052, 0xAD7D5351,\n];\nvar lookupTable = (0, util_1.uint32ArrayFrom)(a_lookupTable);\nvar aws_crc32c_1 = require(\"./aws_crc32c\");\nObject.defineProperty(exports, \"AwsCrc32c\", { enumerable: true, get: function () { return aws_crc32c_1.AwsCrc32c; } });\n//# sourceMappingURL=index.js.map","import { AwsCrc32 } from \"@aws-crypto/crc32\";\nimport { AwsCrc32c } from \"@aws-crypto/crc32c\";\nimport { ChecksumAlgorithm } from \"./constants\";\nexport const selectChecksumAlgorithmFunction = (checksumAlgorithm, config) => ({\n    [ChecksumAlgorithm.MD5]: config.md5,\n    [ChecksumAlgorithm.CRC32]: AwsCrc32,\n    [ChecksumAlgorithm.CRC32C]: AwsCrc32c,\n    [ChecksumAlgorithm.SHA1]: config.sha1,\n    [ChecksumAlgorithm.SHA256]: config.sha256,\n}[checksumAlgorithm]);\n","import { toUint8Array } from \"@smithy/util-utf8\";\nexport const stringHasher = (checksumAlgorithmFn, body) => {\n    const hash = new checksumAlgorithmFn();\n    hash.update(toUint8Array(body || \"\"));\n    return hash.digest();\n};\n","import { isStreaming } from \"./isStreaming\";\nimport { stringHasher } from \"./stringHasher\";\nexport const getChecksum = async (body, { streamHasher, checksumAlgorithmFn, base64Encoder }) => {\n    const digest = isStreaming(body) ? streamHasher(checksumAlgorithmFn, body) : stringHasher(checksumAlgorithmFn, body);\n    return base64Encoder(await digest);\n};\n","import { CLIENT_SUPPORTED_ALGORITHMS, PRIORITY_ORDER_ALGORITHMS } from \"./types\";\nexport const getChecksumAlgorithmListForResponse = (responseAlgorithms = []) => {\n    const validChecksumAlgorithms = [];\n    for (const algorithm of PRIORITY_ORDER_ALGORITHMS) {\n        if (!responseAlgorithms.includes(algorithm) || !CLIENT_SUPPORTED_ALGORITHMS.includes(algorithm)) {\n            continue;\n        }\n        validChecksumAlgorithms.push(algorithm);\n    }\n    return validChecksumAlgorithms;\n};\n","import { getChecksum } from \"./getChecksum\";\nimport { getChecksumAlgorithmListForResponse } from \"./getChecksumAlgorithmListForResponse\";\nimport { getChecksumLocationName } from \"./getChecksumLocationName\";\nimport { selectChecksumAlgorithmFunction } from \"./selectChecksumAlgorithmFunction\";\nexport const validateChecksumFromResponse = async (response, { config, responseAlgorithms }) => {\n    const checksumAlgorithms = getChecksumAlgorithmListForResponse(responseAlgorithms);\n    const { body: responseBody, headers: responseHeaders } = response;\n    for (const algorithm of checksumAlgorithms) {\n        const responseHeader = getChecksumLocationName(algorithm);\n        const checksumFromResponse = responseHeaders[responseHeader];\n        if (checksumFromResponse) {\n            const checksumAlgorithmFn = selectChecksumAlgorithmFunction(algorithm, config);\n            const { streamHasher, base64Encoder } = config;\n            const checksum = await getChecksum(responseBody, { streamHasher, checksumAlgorithmFn, base64Encoder });\n            if (checksum === checksumFromResponse) {\n                break;\n            }\n            throw new Error(`Checksum mismatch: expected \"${checksum}\" but received \"${checksumFromResponse}\"` +\n                ` in response header \"${responseHeader}\".`);\n        }\n    }\n};\n","import { HttpRequest } from \"@smithy/protocol-http\";\nimport { getChecksumAlgorithmForRequest } from \"./getChecksumAlgorithmForRequest\";\nimport { getChecksumLocationName } from \"./getChecksumLocationName\";\nimport { hasHeader } from \"./hasHeader\";\nimport { isStreaming } from \"./isStreaming\";\nimport { selectChecksumAlgorithmFunction } from \"./selectChecksumAlgorithmFunction\";\nimport { stringHasher } from \"./stringHasher\";\nimport { validateChecksumFromResponse } from \"./validateChecksumFromResponse\";\nexport const flexibleChecksumsMiddleware = (config, middlewareConfig) => (next) => async (args) => {\n    if (!HttpRequest.isInstance(args.request)) {\n        return next(args);\n    }\n    const { request } = args;\n    const { body: requestBody, headers } = request;\n    const { base64Encoder, streamHasher } = config;\n    const { input, requestChecksumRequired, requestAlgorithmMember } = middlewareConfig;\n    const checksumAlgorithm = getChecksumAlgorithmForRequest(input, {\n        requestChecksumRequired,\n        requestAlgorithmMember,\n    });\n    let updatedBody = requestBody;\n    let updatedHeaders = headers;\n    if (checksumAlgorithm) {\n        const checksumLocationName = getChecksumLocationName(checksumAlgorithm);\n        const checksumAlgorithmFn = selectChecksumAlgorithmFunction(checksumAlgorithm, config);\n        if (isStreaming(requestBody)) {\n            const { getAwsChunkedEncodingStream, bodyLengthChecker } = config;\n            updatedBody = getAwsChunkedEncodingStream(requestBody, {\n                base64Encoder,\n                bodyLengthChecker,\n                checksumLocationName,\n                checksumAlgorithmFn,\n                streamHasher,\n            });\n            updatedHeaders = {\n                ...headers,\n                \"content-encoding\": headers[\"content-encoding\"]\n                    ? `${headers[\"content-encoding\"]},aws-chunked`\n                    : \"aws-chunked\",\n                \"transfer-encoding\": \"chunked\",\n                \"x-amz-decoded-content-length\": headers[\"content-length\"],\n                \"x-amz-content-sha256\": \"STREAMING-UNSIGNED-PAYLOAD-TRAILER\",\n                \"x-amz-trailer\": checksumLocationName,\n            };\n            delete updatedHeaders[\"content-length\"];\n        }\n        else if (!hasHeader(checksumLocationName, headers)) {\n            const rawChecksum = await stringHasher(checksumAlgorithmFn, requestBody);\n            updatedHeaders = {\n                ...headers,\n                [checksumLocationName]: base64Encoder(rawChecksum),\n            };\n        }\n    }\n    const result = await next({\n        ...args,\n        request: {\n            ...request,\n            headers: updatedHeaders,\n            body: updatedBody,\n        },\n    });\n    const { requestValidationModeMember, responseAlgorithms } = middlewareConfig;\n    if (requestValidationModeMember && input[requestValidationModeMember] === \"ENABLED\") {\n        await validateChecksumFromResponse(result.response, {\n            config,\n            responseAlgorithms,\n        });\n    }\n    return result;\n};\n","import { flexibleChecksumsMiddleware } from \"./flexibleChecksumsMiddleware\";\nexport const flexibleChecksumsMiddlewareOptions = {\n    name: \"flexibleChecksumsMiddleware\",\n    step: \"build\",\n    tags: [\"BODY_CHECKSUM\"],\n    override: true,\n};\nexport const getFlexibleChecksumsPlugin = (config, middlewareConfig) => ({\n    applyToStack: (clientStack) => {\n        clientStack.add(flexibleChecksumsMiddleware(config, middlewareConfig), flexibleChecksumsMiddlewareOptions);\n    },\n});\n","import { getFlexibleChecksumsPlugin } from \"@aws-sdk/middleware-flexible-checksums\";\nimport { getCheckContentLengthHeaderPlugin } from \"@aws-sdk/middleware-sdk-s3\";\nimport { getSsecPlugin } from \"@aws-sdk/middleware-ssec\";\nimport { getEndpointPlugin } from \"@smithy/middleware-endpoint\";\nimport { getSerdePlugin } from \"@smithy/middleware-serde\";\nimport { Command as $Command } from \"@smithy/smithy-client\";\nimport { PutObjectOutputFilterSensitiveLog, PutObjectRequestFilterSensitiveLog, } from \"../models/models_0\";\nimport { de_PutObjectCommand, se_PutObjectCommand } from \"../protocols/Aws_restXml\";\nexport { $Command };\nexport class PutObjectCommand extends $Command {\n    static getEndpointParameterInstructions() {\n        return {\n            Bucket: { type: \"contextParams\", name: \"Bucket\" },\n            ForcePathStyle: { type: \"clientContextParams\", name: \"forcePathStyle\" },\n            UseArnRegion: { type: \"clientContextParams\", name: \"useArnRegion\" },\n            DisableMultiRegionAccessPoints: { type: \"clientContextParams\", name: \"disableMultiregionAccessPoints\" },\n            Accelerate: { type: \"clientContextParams\", name: \"useAccelerateEndpoint\" },\n            UseGlobalEndpoint: { type: \"builtInParams\", name: \"useGlobalEndpoint\" },\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use(getEndpointPlugin(configuration, PutObjectCommand.getEndpointParameterInstructions()));\n        this.middlewareStack.use(getCheckContentLengthHeaderPlugin(configuration));\n        this.middlewareStack.use(getSsecPlugin(configuration));\n        this.middlewareStack.use(getFlexibleChecksumsPlugin(configuration, {\n            input: this.input,\n            requestAlgorithmMember: \"ChecksumAlgorithm\",\n            requestChecksumRequired: false,\n        }));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"S3Client\";\n        const commandName = \"PutObjectCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: PutObjectRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: PutObjectOutputFilterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return se_PutObjectCommand(input, context);\n    }\n    deserialize(output, context) {\n        return de_PutObjectCommand(output, context);\n    }\n}\n",null,null],"names":["HttpAuthLocation","EndpointURLScheme","FieldPosition","RequestHandlerProtocol","HttpRequest","options","request","req","cloned","cloneQuery","query","carry","paramName","param","HttpResponse","response","resp","addExpectContinueMiddleware","next","args","addExpectContinueMiddlewareOptions","getAddExpectContinuePlugin","clientStack","hostHeaderMiddleware","handlerProtocol","host","hostHeaderMiddlewareOptions","getHostHeaderPlugin","loggerMiddleware","context","clientName","commandName","logger","dynamoDbDocumentClientOptions","overrideInputFilterSensitiveLog","overrideOutputFilterSensitiveLog","inputFilterSensitiveLog","outputFilterSensitiveLog","$metadata","outputWithoutMetadata","_a","error","_b","loggerMiddlewareOptions","getLoggerPlugin","TRACE_ID_HEADER_NAME","ENV_LAMBDA_FUNCTION_NAME","ENV_TRACE_ID","recursionDetectionMiddleware","functionName","traceId","nonEmptyString","str","addRecursionDetectionMiddlewareOptions","getRecursionDetectionPlugin","CONTENT_LENGTH_HEADER","checkContentLengthHeader","message","checkContentLengthHeaderMiddlewareOptions","getCheckContentLengthHeaderPlugin","unused","resolveS3Config","input","validate","validateBucketNameMiddleware","Bucket","validateArn","err","validateBucketNameMiddlewareOptions","getValidateBucketNamePlugin","memoize","provider","isExpired","requiresRefresh","resolved","pending","hasResult","isConstant","coalesceProvider","extendStatics","d","b","p","__extends","__","__assign","s","i","n","__rest","e","t","__decorate","decorators","target","key","desc","c","r","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","reject","fulfilled","step","rejected","result","__generator","body","_","f","y","g","verb","v","op","__createBinding","o","m","k","k2","__exportStar","exports","__values","__read","ar","__spread","__spreadArrays","il","a","j","jl","__await","__asyncGenerator","q","resume","settle","fulfill","__asyncDelegator","__asyncValues","__makeTemplateObject","cooked","raw","__importStar","mod","__importDefault","__classPrivateFieldGet","receiver","privateMap","__classPrivateFieldSet","fromUtf8","bytes","len","surrogatePair","toUtf8","decoded","byte","nextByte","encoded","byteValue","textEncoderFromUtf8","jsFromUtf8","textEncoderToUtf8","jsToUtf8","convertToBuffer_1","util_utf8_browser_1","require$$0","convertToBuffer","data","isEmptyData_1","isEmptyData","numToUint8_1","numToUint8","num","uint32ArrayFrom_1","uint32ArrayFrom","a_lookUpTable","return_array","a_index","require$$1","require$$2","require$$3","aws_crc32","tslib_1","util_1","index_1","AwsCrc32","toHash","crc32","Crc32","e_1","data_1","data_1_1","lookupTable","e_1_1","aws_crc32_1","SHORT_TO_HEX","HEX_TO_SHORT","encodedByte","fromHex","out","toHex","Int64","number","remaining","negate","negative","HeaderMarshaller","headers","chunks","headerName","position","chunk","header","shortView","intView","longBytes","binView","binBytes","utf8Bytes","strView","strBytes","tsBytes","UUID_PATTERN","uuidBytes","nameLength","name","BOOLEAN_TAG","BYTE_TAG","SHORT_TAG","INT_TAG","LONG_TAG","binaryLength","BINARY_TAG","stringLength","STRING_TAG","TIMESTAMP_TAG","UUID_TAG","HEADER_VALUE_TYPE","PRELUDE_MEMBER_LENGTH","PRELUDE_LENGTH","CHECKSUM_LENGTH","MINIMUM_MESSAGE_LENGTH","splitMessage","byteLength","byteOffset","buffer","view","messageLength","headerLength","expectedPreludeChecksum","expectedMessageChecksum","checksummer","EventStreamCodec","isEndOfStream","messages","rawHeaders","length","checksum","MessageDecoderStream","MessageEncoderStream","msg","SmithyMessageDecoderStream","deserialized","SmithyMessageEncoderStream","normalizeProvider","promisified","toUint8Array","ALGORITHM_QUERY_PARAM","CREDENTIAL_QUERY_PARAM","AMZ_DATE_QUERY_PARAM","SIGNED_HEADERS_QUERY_PARAM","EXPIRES_QUERY_PARAM","SIGNATURE_QUERY_PARAM","TOKEN_QUERY_PARAM","AUTH_HEADER","AMZ_DATE_HEADER","DATE_HEADER","GENERATED_HEADERS","SIGNATURE_HEADER","SHA256_HEADER","TOKEN_HEADER","ALWAYS_UNSIGNABLE_HEADERS","PROXY_HEADER_PATTERN","SEC_HEADER_PATTERN","ALGORITHM_IDENTIFIER","EVENT_ALGORITHM_IDENTIFIER","UNSIGNED_PAYLOAD","MAX_CACHE_SIZE","KEY_TYPE_IDENTIFIER","MAX_PRESIGNED_TTL","signingKeyCache","cacheQueue","createScope","shortDate","region","service","getSigningKey","sha256Constructor","credentials","credsHash","hmac","cacheKey","signable","ctor","secret","hash","getCanonicalHeaders","unsignableHeaders","signableHeaders","canonical","canonicalHeaderName","escapeUri","uri","hexEncode","getCanonicalQuery","keys","serialized","isArrayBuffer","arg","getPayloadHash","hashConstructor","hashCtor","hasHeader","soughtHeader","cloneRequest","rest","moveHeadersToQuery","lname","prepareRequest","iso8601","time","toDate","SignatureV4","applyChecksum","sha256","uriEscapePath","originalRequest","signingDate","expiresIn","unhoistableHeaders","signingRegion","signingService","longDate","formatDate","scope","canonicalHeaders","getCanonicalHeaderList","toSign","payload","priorSignature","hashedPayload","hashedHeaders","stringToSign","signableMessage","signature","requestToSign","payloadHash","sortedHeaders","credentialScope","canonicalRequest","hashedRequest","path","normalizedPathSegments","pathSegment","normalizedPath","keyPromise","now","CREDENTIAL_EXPIRE_WINDOW","resolveAwsAuthConfig","normalizedCreds","normalizeCredentialProvider","signingEscapePath","systemClockOffset","signer","regionInfo","params","SignerCtor","authScheme","getSkewCorrectedDate","isClockSkewed","clockTime","getUpdatedSystemClockOffset","currentSystemClockOffset","clockTimeInMs","awsAuthMiddleware","_c","multiRegionOverride","_d","output","serverTime","getDateHeader","dateHeader","awsAuthMiddlewareOptions","getAwsAuthPlugin","resolveUserAgentConfig","selectedPartitionsInfo","partitionsInfo","selectedUserAgentPrefix","partition","partitions","regions","outputs","regionData","regionRegex","DEFAULT_PARTITION","setPartitionInfo","userAgentPrefix","useDefaultPartitionInfo","getUserAgentPrefix","IP_V4_REGEX","isIpAddress","debugId","toDebugString","EndpointError","VALID_HOST_LABEL_REGEX","isValidHostLabel","allowSubDomains","labels","label","isVirtualHostableS3Bucket","parseArn","segments","arn","accountId","resourceId","booleanEquals","value1","value2","getAttrPathList","parts","pathList","part","squareBracketIndex","arrayIndex","getAttr","acc","index","isSet","not","HostAddressType","DEFAULT_PORTS","parseURL","whatwgURL","hostname","port","protocol","url","urlString","pathname","search","scheme","isIp","inputContainsDefaultPort","authority","stringEquals","substring","start","stop","reverse","uriEncode","evaluateTemplate","template","evaluatedTemplateArr","templateContext","currentIndex","openingBraceIndex","closingBraceIndex","parameterName","refName","attrName","getReferenceValue","ref","evaluateExpression","obj","keyName","callFunction","fn","argv","evaluatedArgs","lib","evaluateCondition","assign","fnArgs","evaluateConditions","conditions","conditionsReferenceRecord","condition","toAssign","getEndpointHeaders","headerKey","headerVal","headerValEntry","processedExpr","getEndpointProperty","property","propertyEntry","getEndpointProperties","properties","propertyKey","propertyVal","getEndpointUrl","endpointUrl","expression","evaluateEndpointRule","endpointRule","endpoint","referenceRecord","endpointRuleOptions","evaluateErrorRule","errorRule","evaluateTreeRule","treeRule","rules","evaluateRules","rule","endpointOrUndefined","resolveEndpoint","ruleSetObject","endpointParams","parameters","paramsWithDefault","paramKey","paramDefaultValue","requiredParams","requiredParam","givenEndpoint","_e","USER_AGENT","X_AMZ_USER_AGENT","SPACE","UA_NAME_SEPARATOR","UA_NAME_ESCAPE_REGEX","UA_VALUE_ESCAPE_REGEX","UA_ESCAPE_CHAR","userAgentMiddleware","userAgent","escapeUserAgent","defaultUserAgent","customUserAgent","prefix","sdkUserAgentValue","normalUAValue","section","userAgentPair","version","prefixSeparatorIndex","uaName","item","getUserAgentMiddlewareOptions","getUserAgentPlugin","config","SelectorType","DEFAULT_USE_DUALSTACK_ENDPOINT","DEFAULT_USE_FIPS_ENDPOINT","isFipsRegion","getRealRegion","resolveRegionConfig","useFipsEndpoint","providedRegion","resolveEventStreamSerdeConfig","contentLengthMiddleware","bodyLengthChecker","contentLengthMiddlewareOptions","getContentLengthPlugin","resolveParamsForS3","bucket","isArnBucketName","isDnsCompatibleBucketName","DOMAIN_PATTERN","IP_ADDRESS_PATTERN","DOTS_PATTERN","bucketName","account","typeOrId","isArn","isValidArn","createConfigValueProvider","configKey","canonicalEndpointParamKey","configProvider","configValue","getEndpointFromInstructions","commandInput","instructionsSupplier","clientConfig","resolveParams","instructions","instruction","parseQueryString","querystring","pair","parseUrl","toEndpointV1","endpointMiddleware","deserializerMiddleware","deserializer","parsed","hint","serializerMiddleware","serializer","deserializerMiddlewareOption","serializerMiddlewareOption","getSerdePlugin","commandStack","endpointMiddlewareOptions","getEndpointPlugin","resolveEndpointConfig","tls","customEndpointProvider","RETRY_MODES","DEFAULT_MAX_ATTEMPTS","DEFAULT_RETRY_MODE","THROTTLING_ERROR_CODES","TRANSIENT_ERROR_CODES","TRANSIENT_ERROR_STATUS_CODES","NODEJS_TIMEOUT_ERROR_CODES","isThrottlingError","isTransientError","isServerError","statusCode","DefaultRateLimiter","currentTimeInSeconds","amount","delay","timestamp","fillAmount","calculatedRate","rateToUse","newRate","timeBucket","currentRate","DEFAULT_RETRY_DELAY_BASE","MAXIMUM_RETRY_DELAY","THROTTLING_RETRY_DELAY_BASE","INITIAL_RETRY_TOKENS","RETRY_COST","TIMEOUT_RETRY_COST","NO_RETRY_INCREMENT","INVOCATION_ID_HEADER","REQUEST_HEADER","getDefaultRetryBackoffStrategy","delayBase","attempts","createDefaultRetryToken","retryDelay","retryCount","retryCost","StandardRetryStrategy","maxAttempts","retryTokenScope","token","errorInfo","errorType","delayFromErrorType","capacityCost","tokenToRenew","AdaptiveRetryStrategy","maxAttemptsProvider","rateLimiter","getRandomValues","rnds8","rng","REGEX","uuid","byteToHex","stringify","arr","offset","v4","buf","rnds","asSdkError","resolveRetryConfig","retryStrategy","retryMiddleware","isRetryStrategyV2","retryToken","lastError","totalRetryDelay","retryErrorInfo","getRetryErrorInfo","getRetryErrorType","retryAfterHint","getRetryAfterHint","retryMiddlewareOptions","getRetryPlugin","retryAfterHeaderName","retryAfter","retryAfterSeconds","NoOpLogger","constructStack","absoluteEntries","relativeEntries","entriesNameSet","sort","entries","stepWeights","priorityWeights","removeByName","toRemove","isRemoved","filterCb","entry","removeByReference","cloneTo","toStack","expandRelativeMiddlewareList","from","expandedMiddlewareList","getMiddlewareList","debug","normalizedAbsoluteEntries","normalizedRelativeEntries","normalizedEntriesNameMap","normalizedEntry","toMiddleware","wholeList","stack","middleware","override","toOverrideIndex","toOverride","plugin","tags","mw","handler","Client","command","optionsOrCb","cb","callback","alphabetByEncoding","alphabetByValue","limit","char","bitsPerLetter","bitsPerByte","maxLetterValue","fromBase64","totalByteLength","dataView","bits","bitLength","chunkOffset","toBase64","bitClusterCount","transformToString","encoding","transformFromString","Uint8ArrayBlobAdapter","source","getAwsChunkedEncodingStream","readableStream","base64Encoder","checksumAlgorithmFn","checksumLocationName","streamHasher","checksumRequired","digest","reader","controller","done","buildQueryString","iLen","qsEntry","requestTimeout","timeoutInMs","timeoutError","FetchHttpHandler","opts","abortSignal","requestTimeoutInMs","abortError","queryString","auth","username","password","method","requestOptions","fetchRequest","raceOfPromises","fetchHeaders","transformedHeaders","streamCollector","stream","collectBlob","collectStream","blob","base64","readToBase64","arrayBuffer","res","isDone","prior","commaIndex","dataOffset","ERR_MSG_STREAM_HAS_BEEN_TRANSFORMED","sdkStreamMixin","isBlobInstance","isReadableStreamInstance","transformed","transformToByteArray","blobToWebStream","collectBody","streamBody","fromContext","Command","SENSITIVE_STRING","parseBoolean","DAYS","MONTHS","dateToUtcString","date","year","month","dayOfWeek","dayOfMonthInt","hoursInt","minutesInt","secondsInt","dayOfMonthString","hoursString","minutesString","secondsString","ServiceException","decorateServiceException","exception","additions","throwDefaultError","parsedBody","exceptionCtor","errorCode","deserializeMetadata","withBaseException","ExceptionCtor","loadConfigsForDefaultMode","mode","extendedEncodeURIComponent","getValueFromTextNode","textNodeName","StringWrapper","Class","Constructor","instance","map","arg0","arg1","arg2","filter","mapWithFilter","applyInstruction","_instructions","targetKey","nonNullish","valueFn","pass","sourceKey","_value","defaultFilterPassed","customFilterPassed","resolvedPath","memberName","labelValueProvider","uriLabel","isGreedyLabel","labelValue","segment","resolveClientEndpointParameters","fallbackWindow","locateWindow","ie11Sha1","constants_1","util_locate_window_1","Sha1","_this","operation","toArrayBufferView","getKeyPromise","keyData","keyOperation","webCryptoSha1","update","typedArray","supportsWebCrypto_1","subtleCryptoMethods","supportsWebCrypto","window","supportsSecureRandom","subtle","supportsSubtleCrypto","methodName","supportsZeroByteGCM","zeroByteAuthTag","CryptoOperation","Key","KeyOperation","MsSubtleCrypto","MsWindow","msSubtleCryptoMethods","quacksLikeAnMsWindow","isMsWindow","subtle_1","require$$4","require$$5","crossPlatformSha1","ie11Sha1_1","webCryptoSha1_1","supports_web_crypto_1","ie11_detection_1","ie11Sha256","Sha256","webCryptoSha256","constants","RawSha256_1","RawSha256","bitsHashed","bufferView","undecoratedLength","state","state0","state1","state2","state3","state4","state5","state6","state7","u","t1_1","t2_1","t1","t2","jsSha256","inner","bufferFromSecret","outer","bufferHash","crossPlatformSha256","ie11Sha256_1","webCryptoSha256_1","sha256_js_1","require$$6","BROWSER_ALIASES_MAP","BROWSER_MAP","PLATFORMS_MAP","OS_MAP","ENGINE_MAP","Utils","regexp","ua","match","_const","versionA","versionB","isLoose","versionAPrecision","versionBPrecision","precision","lastPrecision","delta","_version","iterator","predicate","l","assigners","assigner","browserName","browserAlias","commonVersionIdentifier","browsersList","browser","parser","notLikeAndroid","butAndroid","regexpWithoutDeviceSpec","regexpWithDeviceSpec","osParsersList","versionName","os","platformParsersList","model","platform","iDevice","likeIDevice","osMajorVersion","enginesParsersList","engine","isGecko","likeGecko","Parser","UA","skipParsing","regex","browserDescriptor","browserParsersList","_browser","toLowerCase","_os","type","_platform","_engine","checkTree","platformsAndOSes","platformsAndOSCounter","browsers","browsersCounter","currentDefinition","platformsAndOSNames","OSMatchingDefinition","osResult","platformMatchingDefinition","platformResult","browserNames","matchingDefinition","includingAlias","defaultBrowserName","browserNameLower","alias","expectedResults","comparableVersion","currentBrowserVersion","osName","platformType","engineName","anything","anythings","Bowser","serviceId","clientVersion","parsedUA","bowser","sections","getChunkedStream","currentMessageTotalLength","currentMessagePendingLength","currentMessage","messageLengthBuffer","allocateMessage","size","sourceIterator","chunkLength","currentOffset","bytesRemaining","numBytesForTotal","numBytesToWrite","getMessageUnmarshaller","messageType","unmodeledError","code","deserializedException","event","EventStreamMarshaller$1","utf8Encoder","utf8Decoder","inputStream","readableStreamtoIterable","iterableToReadableStream","asyncIterable","EventStreamMarshaller","UniversalEventStreamMarshaller","bodyIterable","isReadableStream","serialziedIterable","eventStreamSerdeProvider","blobReader","onChunk","chunkSize","fileReader","totalBytesRead","read","blobHasher","invalidProvider","BLOCK_SIZE","DIGEST_LENGTH","INIT","Md5","sourceData","bytesHashed","ff","gg","hh","ii","cmn","x","calculateBodyLength","SignatureV4MultiRegion","CrtSignerV4","bJ","bK","bL","bM","bN","bO","bP","bQ","bR","bS","bT","bU","bV","bW","h","w","z","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","Q","R","S","T","U","V","W","X","Y","Z","aa","ab","ac","ad","ae","af","ag","ah","ai","aj","ak","al","am","an","ao","ap","aq","as","at","au","av","aw","ax","ay","az","aA","aB","aC","aD","aE","aF","aG","aH","aI","aJ","aK","aL","aM","aN","aO","aP","aQ","aR","aS","aT","aU","aV","aW","aX","aY","aZ","ba","bb","bc","bd","be","bf","bg","bh","bi","bj","bk","bl","bm","bn","bo","bp","bq","br","bs","bt","bu","bv","bw","bx","by","bz","bA","bB","bC","bD","bE","bF","bG","bH","bI","_data","ruleSet","defaultEndpointResolver","getRuntimeConfig","DEFAULTS_MODE_OPTIONS","resolveDefaultsModeConfig","defaultsMode","isMobileBrowser","defaultConfigProvider","clientSharedValues","getSharedRuntimeConfig","packageInfo","RequestHandler","S3Client","__Client","configuration","_config_0","__getRuntimeConfig","_config_1","_config_2","_config_3","_config_4","_config_5","_config_6","_config_7","_config_8","_config_9","nameStartChar","nameChar","nameRegexp","regexName","getAllMatches","string","matches","allmatches","isName","arrayMode","util","defaultOptions","validator","xmlData","tagFound","reachedRoot","readPI","tagStartPos","readCommentAndCDATA","closingTag","tagName","validateTagName","getErrorObject","getLineNumberForPosition","readAttributeStr","attrStr","attrStrStart","isValid","validateAttributeString","otg","openPos","afterAmp","validateAmpersand","isWhiteSpace","tagname","angleBracketsCount","doubleQuote","singleQuote","startChar","tagClosed","validAttrStrRegxp","attrNames","getPositionFromMatch","validateAttrName","validateNumberAmpersand","re","count","lineNumber","lines","val","jPath","attrs","buildOptions","OptionsBuilder","XmlNode","node","xmlNode","readDocType","entities","hasBody","comment","exp","isEntity","readEntityExp","validateEntityName","isElement","isAttlist","isNotation","isComment","entityName","DocTypeReader","hexRegex","numRegex","consider","toNumber","trimmedStr","sign","leadingZeros","numTrimmedByZeros","trimZeros","eNotation","numStr","strnum","OrderedObjParser$1","addExternalEntities","parseXml","parseTextData","resolveNameSpace","buildAttributesMap","isItStopNode","replaceEntitiesValue","readStopNodeData","saveTextToParentTag","addChild","externalEntities","entKeys","ent","dontTrim","hasAttributes","isLeafNode","escapeEntities","newval","parseValue","attrsRegx","oldVal","aName","newVal","attrCollection","xmlObj","currentNode","textData","closeIndex","findClosingIndex","colonIndex","lastTagName","propIndex","tagData","readTagExp","childNode","endIndex","tagExp","attrExpPresent","lastTag","tagContent","entity","stopNodes","currentTagName","allNodesExp","stopNodePath","stopNodeExp","tagExpWithClosingIndex","closingChar","attrBoundary","ch","errMsg","closingIndex","removeNSPrefix","separatorIndex","startIndex","openTagCount","shouldParse","OrderedObjParser_1","OrderedObjParser","prettify","compress","text","compressedObj","tagObj","propName","newJpath","isLeaf","isLeafTag","assignAttributes","attrMap","jpath","atrrName","propCount","node2json","XMLParser$1","validationOption","orderedObjParser","orderedResult","XMLParser_1","XMLParser","EOL","toXml","jArray","indentation","arrToStr","xmlStr","isPreviousElementTag","newJPath","tagText","isStopNode","attStr","attr_to_str","tempInd","piTextNodeName","newIdentation","tagStart","tagValue","attr","attrVal","textValue","orderedJs2Xml","buildFromOrderedJs","Builder","isAttribute","processTextOrObjNode","indentate","jObj","level","arrLen","listTagVal","Ks","object","tagEndExp","piClosingChar","closeTag","json2xml","XMLBuilder","fxp","S3ServiceException","__ServiceException","AnalyticsFilter","visitor","LifecycleRuleFilter","MetricsFilter","ReplicationRuleFilter","PutObjectOutputFilterSensitiveLog","PutObjectRequestFilterSensitiveLog","se_PutObjectCommand","basePath","isSerializableHeaderValue","__dateToUtcString","suffix","__resolvedPath","contents","__HttpRequest","de_PutObjectCommand","de_PutObjectCommandError","__parseBoolean","parsedOutput","parseErrorBody","loadRestXmlErrorCode","__BaseException","collectBodyString","parseBody","parsedObj","parsedObjToReturn","__getValueFromTextNode","errorBody","ssecMiddleware","prop","valueView","ssecMiddlewareOptions","getSsecPlugin","ChecksumAlgorithm","ChecksumLocation","CLIENT_SUPPORTED_ALGORITHMS","PRIORITY_ORDER_ALGORITHMS","getChecksumAlgorithmForRequest","requestChecksumRequired","requestAlgorithmMember","checksumAlgorithm","getChecksumLocationName","algorithm","isStreaming","aws_crc32c","AwsCrc32c","crc32c","Crc32c","a_lookupTable","aws_crc32c_1","selectChecksumAlgorithmFunction","stringHasher","getChecksum","getChecksumAlgorithmListForResponse","responseAlgorithms","validChecksumAlgorithms","validateChecksumFromResponse","checksumAlgorithms","responseBody","responseHeaders","responseHeader","checksumFromResponse","flexibleChecksumsMiddleware","middlewareConfig","requestBody","updatedBody","updatedHeaders","rawChecksum","requestValidationModeMember","flexibleChecksumsMiddlewareOptions","getFlexibleChecksumsPlugin","PutObjectCommand","$Command","handlerExecutionContext","requestHandler","axiosInstance","axios","buildSignedUrl","s3Options","uploadUsingSignedUrl","props","file","onProgress","signedUrl","decodedURL","progressEvent","loaded","total","doUpload","fileName","client","buildKey","complete","ret","upload","getConfig","useUploader","global"],"mappings":"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AA,MAAY;AAAA,MAAY;AAAA,MAAY;AAAA,MACpC;AAAA,MAAY;AAAA,MAAY;AAAA,MAAY;AAAA,MACpC;AAAA,MAAY;AAAA,MAAY;AAAA,MAAY;AAAA,MACpC;AAAA,MAAY;AAAA,MAAY;AAAA,MAAY;AAAA,MACpC;AAAA,MAAY;AAAA,MAAY;AAAA,MAAY;AAAA,MACpC;AAAA,MAAY;AAAA,MAAY;AAAA,MAAY;AAAA,MACpC;AAAA,MAAY;AAAA,MAAY;AAAA,MAAY;AAAA,MACpC;AAAA,MAAY;AAAA,MAAY;AAAA,MAAY;AAAA,MACpC;AAAA,MAAY;AAAA,MAAY;AAAA,MAAY;AAAA,MACpC;AAAA,MAAY;AAAA,MAAY;AAAA,MAAY;AAAA,MACpC;AAAA,MAAY;AAAA,MAAY;AAAA,MAAY;AAAA,MACpC;AAAA,MAAY;AAAA,MAAY;AAAA,MAAY;AAAA,MACpC;AAAA,MAAY;AAAA,MAAY;AAAA,MAAY;AAAA,MACpC;AAAA,MAAY;AAAA,MAAY;AAAA,MAAY;AAAA,MACpC;AAAA,MAAY;AAAA,MAAY;AAAA,MAAY;AAAA,MACpC;AAAA,MAAY;AAAA,MAAY;AAAA,MAAY;AAAA,MACpC;AAAA,MAAY;AAAA,MAAY;AAAA,MAAY;AAAA,MACpC;AAAA,MAAY;AAAA,MAAY;AAAA,MAAY;AAAA,MACpC;AAAA,MAAY;AAAA,MAAY;AAAA,MAAY;AAAA,MACpC;AAAA,MAAY;AAAA,MAAY;AAAA,MAAY;AAAA,MACpC;AAAA,MAAY;AAAA,MAAY;AAAA,MAAY;AAAA,MACpC;AAAA,MAAY;AAAA,MAAY;AAAA,MAAY;AAAA,MACpC;AAAA,MAAY;AAAA,MAAY;AAAA,MAAY;AAAA,MACpC;AAAA,MAAY;AAAA,MAAY;AAAA,MAAY;AAAA,MACpC;AAAA,MAAY;AAAA,MAAY;AAAA,MAAY;AAAA,MACpC;AAAA,MAAY;AAAA,MAAY;AAAA,MAAY;AAAA,MACpC;AAAA,MAAY;AAAA,MAAY;AAAA,MAAY;AAAA,MACpC;AAAA,MAAY;AAAA,MAAY;AAAA,MAAY;AAAA,MACpC;AAAA,MAAY;AAAA,MAAY;AAAA,MAAY;AAAA,MACpC;AAAA,MAAY;AAA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AA,MAAY;AAAA,MAAY;AAAA,MACpF;AAAA,MAAY;AAAA,MAAY;AAAA,MAAY;AAAA,MAAY;AAAA,MAAY;AAAA,MAAY;AAAA,MAAY;AAAA,MACpF;AAAA,MAAY;AAAA,MAAY;AAAA,MAAY;AAAA,MAAY;AAAA,MAAY;AAAA,MAAY;AAAA,MAAY;AAAA,MACpF;AAAA,MAAY;AAAA,MAAY;AAAA,MAAY;AAAA,MAAY;AAAA,MAAY;AAAA,MAAY;AAAA,MAAY;AAAA,MACpF;AAAA,MAAY;AAAA,MAAY;AAAA,MAAY;AAAA,MAAY;AAAA,MAAY;AAAA,MAAY;AAAA,MAAY;AAAA,MACpF;AAAA,MAAY;AAAA,MAAY;AAAA,MAAY;AAAA,MAAY;AAAA,MAAY;AAAA,MAAY;AAAA,MAAY;AAAA,MACpF;AAAA,MAAY;AAAA,MAAY;AAAA,MAAY;AAAA,MAAY;AAAA,MAAY;AAAA,MAAY;AAAA,MAAY;AAAA,MACpF;AAAA,MAAY;AAAA,MAAY;AAAA,MAAY;AAAA,MAAY;AAAA,MAAY;AAAA,MAAY;AAAA,MAAY;AAAA,MACpF;AAAA,MAAY;AAAA,MAAY;AAAA,MAAY;AAAA,MAAY;AAAA,MAAY;AAAA,MAAY;AAAA,MAAY;AAAA,MACpF;AAAA,MAAY;AAAA,MAAY;AAAA,MAAY;AAAA,MAAY;AAAA,MAAY;AAAA,MAAY;AAAA,MAAY;AAAA,MACpF;AAAA,MAAY;AAAA,MAAY;AAAA,MAAY;AAAA,MAAY;AAAA,MAAY;AAAA,MAAY;AAAA,MAAY;AAAA,MACpF;AAAA,MAAY;AAAA,MAAY;AAAA,MAAY;AAAA,MAAY;AAAA,MAAY;AAAA,MAAY;AAAA,MAAY;AAAA,MACpF;AAAA,MAAY;AAAA,MAAY;AAAA,MAAY;AAAA,MAAY;AAAA,MAAY;AAAA,MAAY;AAAA,MAAY;AAAA,MACpF;AAAA,MAAY;AAAA,MAAY;AAAA,MAAY;AAAA,MAAY;AAAA,MAAY;AAAA,MAAY;AAAA,MAAY;AAAA,MACpF;AAAA,MAAY;AAAA,MAAY;AAAA,MAAY;AAAA,MAAY;AAAA,MAAY;AAAA,MAAY;AAAA,MAAY;AAAA,MACpF;AAAA,MAAY;AAAA,MAAY;AAAA,MAAY;AAAA,MA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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243]}