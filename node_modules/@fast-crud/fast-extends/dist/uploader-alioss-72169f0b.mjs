import l from "lodash-es";
import { b as u, u as y } from "./index-e3d54c21.mjs";
import o from "ali-oss";
import "vue";
import "@fast-crud/fast-crud";
let a = null;
async function g(e) {
  if (a != null && a.expiresTime > (/* @__PURE__ */ new Date()).getTime())
    return a;
  const c = await e.getAuthorization(e);
  return a = c, a.expiresTime == null && (a.expiresTime = (/* @__PURE__ */ new Date()).getTime() + parseInt(c.expiration)), a;
}
async function m(e, s, c) {
  let n = null;
  !e.accessKeyId && !e.accessKeySecret && e.getAuthorization !== null ? n = await g({
    key: s,
    file: c,
    ...e
  }) : console.warn("您还未配置getAuthorization，将使用accessKeySecret作为授权进行上传");
  let t = null;
  return n != null ? t = new o({
    region: e.region,
    accessKeyId: n.accessKeyId,
    accessKeySecret: n.accessKeySecret,
    stsToken: n.securityToken,
    bucket: e.bucket,
    ...e.sdkOpts
  }) : t = new o({
    region: e.region,
    accessKeyId: e.accessKeyId,
    accessKeySecret: e.accessKeySecret,
    bucket: e.bucket,
    ...e.sdkOpts
  }), t;
}
async function d(e) {
  const { file: s, fileName: c, onProgress: n } = e, t = e.options, i = await u(s, c, t);
  await (await m(t, i, s)).put(i, s);
  let r = { url: t.domain + "/" + i, key: i };
  return t.successHandle && (r = await t.successHandle(r, t)), r;
}
async function b(e) {
  const { getConfig: s } = y(), c = s("alioss"), n = e.options, t = l.merge(l.cloneDeep(c), n);
  return e.options = t, await d(e);
}
export {
  m as getOssClient,
  g as getSts,
  b as upload
};
//# sourceMappingURL=uploader-alioss-72169f0b.mjs.map
