import { ValueResolveContext } from "@fast-crud/fast-crud";
export default function (): {
    "image-uploader": {
        form: {
            [x: string]: {
                name: string;
                listType: string;
                accept: string;
            } | {
                validator: import("@fast-crud/fast-crud").ComputeValue<(rule: any, value: any) => Promise<boolean>>;
                message: any;
                trigger: string;
            }[];
            component: {
                name: string;
                listType: string;
                accept: string;
            };
        };
        column: {
            component: {
                name: string;
                style: string;
                previewTeleported: boolean;
                previewMask: () => JSX.Element;
            };
        };
        viewForm: {
            component: {
                height: number;
                width: number;
            };
        };
    };
    "avatar-uploader": {
        form: {
            [x: string]: {
                validator: import("@fast-crud/fast-crud").ComputeValue<(rule: any, value: any) => Promise<boolean>>;
                message: any;
                trigger: string;
            }[] | {
                name: string;
                limit: number;
                listType: string;
                accept: string;
            };
            component: {
                name: string;
                limit: number;
                listType: string;
                accept: string;
            };
        };
        column: {
            align: string;
            component: {
                name: string;
                style: string;
                previewTeleported: boolean;
            };
        };
        viewForm: {
            component: {
                height: number;
                width: number;
            };
        };
        valueResolve({ row, key }: ValueResolveContext): void;
    };
    "file-uploader": {
        form: {
            [x: string]: {
                name: string;
                listType: string;
            } | {
                validator: import("@fast-crud/fast-crud").ComputeValue<(rule: any, value: any) => Promise<boolean>>;
                message: any;
                trigger: string;
            }[];
            component: {
                name: string;
                listType: string;
            };
        };
        column: {
            component: {
                name: string;
            };
        };
    };
    "cropper-uploader": {
        form: {
            [x: string]: {
                name: string;
                accept: string;
                cropper: {
                    viewMode: number;
                };
                onReady(context: any): Promise<void>;
            } | {
                validator: import("@fast-crud/fast-crud").ComputeValue<(rule: any, value: any) => Promise<boolean>>;
                message: any;
                trigger: string;
            }[];
            component: {
                name: string;
                accept: string;
                cropper: {
                    viewMode: number;
                };
                onReady(context: any): Promise<void>;
            };
        };
        column: {
            align: string;
            component: {
                name: string;
                style: string;
                previewTeleported: boolean;
            };
        };
        viewForm: {
            component: {
                height: number;
                width: number;
            };
        };
    };
};
