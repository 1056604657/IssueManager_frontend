import { ref as m, resolveComponent as g, createVNode as C, computed as h, defineComponent as U } from "vue";
import i from "lodash-es";
class x {
  constructor() {
    this.ref = m(null);
  }
  set(o) {
    this.ref.value = o;
  }
  get() {
    if (this.ref.value == null)
      throw new Error("您还未设置ui,先安装依赖@fast-crud/ui-interface,然后在use(FastCrud)前安装ui，app.use(UiXxx)");
    return this.ref.value;
  }
}
const l = new x();
function w() {
  return {
    uiContext: l,
    ui: l.get(),
    set: (r) => {
      l.set(r);
    }
  };
}
const d = (r) => {
  const o = typeof r.is == "string" ? g(r.is) : r.is;
  return C(o, r.props, r.slots);
}, c = (r, o) => d(r.builder(o)), p = (r, o, n) => {
  const t = {}, s = r.modelValue, e = o.vModel;
  s != null && e && (e != null && e.get && (e != null && e.set) ? (t[s] = e.get(), t[`onUpdate:${s}`] = (u) => {
    e.set(u), e.onChange && e.onChange(u);
  }) : e.ref && e.key ? (t[s] = i.get(e.ref, e.key), t[`onUpdate:${s}`] = (u) => {
    i.set(e.ref, e.key, u), e.onChange && e.onChange(u);
  }) : console.warn("vModel配置错误:", r, e));
  const a = {
    is: o.is || r.name,
    props: o.props,
    slots: o.slots
  }, f = n instanceof Function ? n() : n;
  return i.merge({
    props: t
  }, f, a);
}, F = (r, o = {}) => {
  const n = {
    ...r
  };
  return n.render = (t) => c(n, t), n.builder || (n.builder = (t) => p(n, t, o)), n.buildProps = (t) => n.builder(t).props, n.builderComputed = (t) => h(() => n.builder(t)), n;
};
function R() {
  return {
    creator: F,
    doRenderComponent: d,
    renderComponent: c,
    buildBinding: p
  };
}
const k = /* @__PURE__ */ U({
  name: "FsUiRender",
  props: {
    renderFn: {
      type: Function,
      default() {
        return () => null;
      }
    }
  },
  setup(r) {
    return () => r.renderFn();
  }
});
export {
  x as UiContext,
  k as UiRender,
  p as buildBinding,
  F as creator,
  d as doRenderComponent,
  c as renderComponent,
  l as uiContext,
  w as useUi,
  R as useUiRender
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidWktaW50ZXJmYWNlLm1qcyIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL2NvbnRleHQudHMiLCIuLi8uLi9zcmMvdXNlL3VzZS11aS50cyIsIi4uLy4uL3NyYy91c2UvdXNlLXJlbmRlci50c3giLCIuLi9zcmMvY29tcG9uZW50cy9mcy11aS1yZW5kZXIudnVlIl0sInNvdXJjZXNDb250ZW50IjpbbnVsbCxudWxsLG51bGwsIjxzY3JpcHQgbGFuZz1cInRzeFwiPlxuaW1wb3J0IHsgVWlTbG90IH0gZnJvbSBcIi4uL3VpLWludGVyZmFjZVwiO1xuaW1wb3J0IHsgZGVmaW5lQ29tcG9uZW50LCBQcm9wVHlwZSB9IGZyb20gXCJ2dWVcIjtcblxuaW50ZXJmYWNlIFVpUmVuZGVyUHJvcHMge1xuICByZW5kZXJGbjogVWlSZW5kZXJGbjtcbn1cblxudHlwZSBVaVJlbmRlckZuID0gKCkgPT4gVWlTbG90O1xuZXhwb3J0IGRlZmF1bHQgZGVmaW5lQ29tcG9uZW50KHtcbiAgbmFtZTogXCJGc1VpUmVuZGVyXCIsXG4gIHByb3BzOiB7XG4gICAgcmVuZGVyRm46IHtcbiAgICAgIHR5cGU6IEZ1bmN0aW9uIGFzIFByb3BUeXBlPFVpUmVuZGVyRm4+LFxuICAgICAgZGVmYXVsdCgpIHtcbiAgICAgICAgcmV0dXJuICgpID0+IHtcbiAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgICAgfTtcbiAgICAgIH1cbiAgICB9XG4gIH0sXG4gIHNldHVwKHByb3BzOiBVaVJlbmRlclByb3BzKSB7XG4gICAgcmV0dXJuICgpID0+IHtcbiAgICAgIHJldHVybiBwcm9wcy5yZW5kZXJGbigpO1xuICAgIH07XG4gIH1cbn0pO1xuPC9zY3JpcHQ+XG5cbjxzdHlsZSBsYW5nPVwibGVzc1wiPjwvc3R5bGU+XG4iXSwibmFtZXMiOlsiVWlDb250ZXh0IiwicmVmIiwidWkiLCJ1aUNvbnRleHQiLCJ1c2VVaSIsImRvUmVuZGVyQ29tcG9uZW50IiwiYmluZGluZyIsImNvbXAiLCJpcyIsInJlc29sdmVDb21wb25lbnQiLCJfY3JlYXRlVk5vZGUiLCJwcm9wcyIsInNsb3RzIiwicmVuZGVyQ29tcG9uZW50IiwiY2kiLCJvcHRzIiwiYnVpbGRlciIsImJ1aWxkQmluZGluZyIsInNwZWNpYWwiLCJ2TW9kZWwiLCJtb2RlbFZhbHVlTmFtZSIsIm1vZGVsVmFsdWUiLCJtdkNvbmYiLCJnZXQiLCJzZXQiLCJ2YWx1ZSIsIm9uQ2hhbmdlIiwia2V5IiwiXyIsImNvbnNvbGUiLCJ3YXJuIiwidXNlckJpbmRpbmciLCJuYW1lIiwic3BlY2lhbEJpbmRpbmciLCJGdW5jdGlvbiIsIm1lcmdlIiwiY3JlYXRvciIsImV4dGVuZENJIiwicmVuZGVyIiwiYnVpbGRQcm9wcyIsImJ1aWxkZXJDb21wdXRlZCIsImNvbXB1dGVkIiwidXNlVWlSZW5kZXIiLCJkZWZpbmVDb21wb25lbnQiLCJyZW5kZXJGbiIsInR5cGUiLCJkZWZhdWx0Iiwic2V0dXAiXSwibWFwcGluZ3MiOiI7O01BR2FBLEVBQVM7QUFBQSxFQUF0QixjQUFBO0FBQ0UsU0FBQSxNQUF5QkMsRUFBSSxJQUFJO0FBQUEsRUFXbkM7QUFBQSxFQVZFLElBQUlDLEdBQWU7QUFDakIsU0FBSyxJQUFJLFFBQVFBO0FBQUEsRUFDbkI7QUFBQSxFQUVBLE1BQUc7QUFDRyxRQUFBLEtBQUssSUFBSSxTQUFTO0FBQ2QsWUFBQSxJQUFJLE1BQU0sMkVBQTJFO0FBRTdGLFdBQU8sS0FBSyxJQUFJO0FBQUEsRUFDbEI7QUFDRDtBQUNZLE1BQUFDLElBQVksSUFBSUg7U0NiYkksSUFBSztBQUNaLFNBQUE7QUFBQSxJQUNMLFdBQUFEO0FBQUEsSUFDQSxJQUFJQSxFQUFVLElBQUs7QUFBQSxJQUNuQixLQUFLLENBQUNELE1BQW1CO0FBQ3ZCLE1BQUFDLEVBQVUsSUFBSUQsQ0FBRTtBQUFBLElBQ2xCO0FBQUEsRUFBQTtBQUVKO0FDTWFHLE1BQUFBLElBQTBDQyxDQUFBQSxNQUFtQztBQUN4RixRQUFNQyxJQUFPLE9BQU9ELEVBQVFFLE1BQU8sV0FBV0MsRUFBaUJILEVBQVFFLEVBQUUsSUFBSUYsRUFBUUU7QUFDckYsU0FBQUUsRUFBQUgsR0FBaUJELEVBQVFLLE9BQWdCTCxFQUFRTSxLQUFLO0FBQ3hELEdBRWFDLElBQXFDQSxDQUFDQyxHQUFJQyxNQUM5Q1YsRUFBa0JTLEVBQUdFLFFBQVFELENBQUksQ0FBQyxHQVE5QkUsSUFBK0JBLENBQUNILEdBQUlDLEdBQU1HLE1BQTZCO0FBQ2xGLFFBQU1DLElBQWMsQ0FBQSxHQUVkQyxJQUFpQk4sRUFBR08sWUFDcEJDLElBQWNQLEVBQUtJO0FBQ3pCLEVBQUlDLEtBQWtCLFFBQVFFLE1BQ3hCQSxLQUFBQSxRQUFBQSxFQUFRQyxRQUFPRCxLQUFBQSxRQUFBQSxFQUFRRSxRQUN6QkwsRUFBT0MsQ0FBYyxJQUFJRSxFQUFPQyxJQUFHLEdBQ25DSixjQUFtQkMsQ0FBYyxFQUFFLElBQUtLLENBQUFBLE1BQWM7QUFDcERILElBQUFBLEVBQU9FLElBQUlDLENBQUssR0FDaEJILEVBQU9JLFlBQVlKLEVBQU9JLFNBQVNELENBQUs7QUFBQSxPQUVqQ0gsRUFBT3JCLE9BQU9xQixFQUFPSyxPQUM5QlIsRUFBT0MsQ0FBYyxJQUFJUSxFQUFFTCxJQUFJRCxFQUFPckIsS0FBS3FCLEVBQU9LLEdBQUcsR0FDckRSLGNBQW1CQyxDQUFjLEVBQUUsSUFBS0ssQ0FBQUEsTUFBYztBQUNwREcsSUFBQUEsRUFBRUosSUFBSUYsRUFBT3JCLEtBQUtxQixFQUFPSyxLQUFLRixDQUFLLEdBQ25DSCxFQUFPSSxZQUFZSixFQUFPSSxTQUFTRCxDQUFLO0FBQUEsT0FHMUNJLFFBQVFDLEtBQUssZUFBZWhCLEdBQUlRLENBQU07QUFJMUMsUUFBTVMsSUFBYztBQUFBLElBQ2xCdkIsSUFBSU8sRUFBS1AsTUFBTU0sRUFBR2tCO0FBQUFBLElBQ2xCckIsT0FBT0ksRUFBS0o7QUFBQUEsSUFDWkMsT0FBT0csRUFBS0g7QUFBQUEsS0FHUnFCLElBQWlCZixhQUFtQmdCLFdBQVdoQixFQUFPLElBQUtBO0FBQ2pFLFNBQU9VLEVBQUVPLE1BQ1A7QUFBQSxJQUNFeEIsT0FBT1E7QUFBQUEsRUFDUixHQUNEYyxHQUNBRixDQUFXO0FBRWYsR0FPYUssSUFBOEJBLENBQWV0QixHQUFpQkksSUFBNEIsT0FBUztBQUM5RyxRQUFNbUIsSUFBZ0I7QUFBQSxJQUFFLEdBQUd2QjtBQUFBQTtBQUMzQnVCLFNBQUFBLEVBQVNDLFNBQVV2QixDQUFBQSxNQUNWRixFQUFnQndCLEdBQVV0QixDQUFJLEdBRWxDc0IsRUFBU3JCLFlBQ1pxQixFQUFTckIsVUFBV0QsQ0FBQUEsTUFDWEUsRUFBYW9CLEdBQVV0QixHQUFNRyxDQUFPLElBRy9DbUIsRUFBU0UsYUFBY3hCLENBQUFBLE1BQ2RzQixFQUFTckIsUUFBUUQsQ0FBSSxFQUFFSixPQUVoQzBCLEVBQVNHLGtCQUFtQnpCLENBQUFBLE1BQ25CMEIsRUFBUyxNQUNQSixFQUFTckIsUUFBUUQsQ0FBSSxDQUM3QixHQUVJc0I7QUFDVDtTQUVnQkssSUFBVztBQUN6QixTQUFPO0FBQUEsSUFDTE4sU0FBQUE7QUFBQUEsSUFDQS9CLG1CQUFBQTtBQUFBQSxJQUNBUSxpQkFBQUE7QUFBQUEsSUFDQUksY0FBQUE7QUFBQUE7QUFFSjtBQzlGQSxNQUFlMEIsc0JBQWdCO0FBQUEsRUFDN0JYLE1BQU07QUFBQSxFQUNOckIsT0FBTztBQUFBLElBQ0xpQyxVQUFVO0FBQUEsTUFDUkMsTUFBTVg7QUFBQUEsTUFDTlksVUFBVTtBQUNSLGVBQU8sTUFDRTtBQUFBLE1BRVg7QUFBQSxJQUNGO0FBQUEsRUFDRDtBQUFBLEVBQ0RDLE1BQU1wQyxHQUFzQjtBQUMxQixXQUFPLE1BQ0VBLEVBQU1pQztFQUVqQjtBQUNGLENBQUM7In0=
