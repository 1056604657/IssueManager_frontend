import {
  Cd
} from "./chunk-HBLLDVYX.js";
import "./chunk-3VNCHJQI.js";
import "./chunk-HL2MGXCM.js";
import "./chunk-RT6XIFAZ.js";
import "./chunk-PBJIO4MK.js";
import {
  w
} from "./chunk-TMD4VLGD.js";
import "./chunk-OBCII6EX.js";
import "./chunk-6KFXODJP.js";
import "./chunk-XUBID5G4.js";
import {
  Fragment,
  computed2 as computed,
  createBaseVNode,
  createBlock,
  createElementBlock,
  defineComponent,
  mergeProps,
  openBlock,
  ref,
  renderList,
  resolveDynamicComponent,
  toDisplayString,
  watch,
  withCtx
} from "./chunk-7Q7JYBSX.js";
import "./chunk-AUZ3RYOM.js";

// node_modules/@fast-crud/fast-extends/dist/fs-files-format-1f49ba46.mjs
var $ = defineComponent({
  name: "FsFilesFormat",
  props: {
    /**
     * 文件列表
     * 支持格式： `url , {url} , [url1,url2] ,  [{url:url1},{url:url2}]`
     */
    modelValue: {},
    // tag颜色，`【primary, success, warning, danger ,info】`
    color: {
      default: ""
    },
    // 展示类型`【text, tag】`
    type: {
      default: "tag"
      // `可选【text,tag】`
    },
    // 链接配置
    a: {},
    // tag配置
    tag: {},
    // 构建下载url方法，支持异步
    buildUrl: {},
    // 批量构建下载url方法，支持异步
    buildUrls: {},
    // 根据value构建文件名
    getFileName: {}
  },
  setup(t, h) {
    const { ui: u } = w(), f = computed(() => t.getFileName || function(e) {
      return typeof e != "string" ? (console.warn("获取文件名失败，请配置getFileName"), e) : (e == null ? void 0 : e.lastIndexOf("/")) >= 0 ? e.substring(e.lastIndexOf("/") + 1) : e;
    });
    function i(e) {
      return {
        url: void 0,
        value: e,
        name: f.value(e),
        color: t.color
      };
    }
    async function m(e) {
      if (t.buildUrls) {
        const a = e.map((n) => n.value), F = await t.buildUrls(a);
        for (let n = 0; n < e.length; n++)
          e[n].url = F[n];
      } else if (t.buildUrl)
        for (let a of e)
          a.url = await t.buildUrl(a.value);
      else
        for (let a = 0; a < e.length; a++)
          e[a].url = e[a].value;
    }
    async function l() {
      if (t.modelValue == null || t.modelValue === "")
        return [];
      let e = [];
      if (typeof t.modelValue == "string")
        e = [i(t.modelValue)];
      else if (t.modelValue instanceof Array) {
        e = [];
        for (const a of t.modelValue)
          e.push(i(a));
      }
      return await m(e), e;
    }
    const c = ref([]);
    return watch(
      () => t.modelValue,
      async () => {
        c.value = await l();
      },
      {
        immediate: true
      }
    ), {
      ui: u,
      itemsRef: c
    };
  }
});
var B = { class: "fs-files-format" };
var C = ["href"];
var R = ["href"];
function x(t, h, u, f, i, m) {
  return openBlock(), createElementBlock("div", B, [
    t.type === "text" ? (openBlock(true), createElementBlock(Fragment, { key: 0 }, renderList(t.itemsRef, (l) => (openBlock(), createElementBlock("span", {
      key: l.url,
      class: "fs-files-item"
    }, [
      createBaseVNode("a", mergeProps({
        href: l.url,
        target: "_blank"
      }, t.a), toDisplayString(l.name), 17, C)
    ]))), 128)) : (openBlock(true), createElementBlock(Fragment, { key: 1 }, renderList(t.itemsRef, (l) => (openBlock(), createBlock(resolveDynamicComponent(t.ui.tag.name), mergeProps({
      key: l.url,
      class: "fs-tag-item",
      type: l.color
    }, t.tag), {
      default: withCtx(() => [
        createBaseVNode("a", mergeProps({
          href: l.url,
          target: "_blank"
        }, t.a), toDisplayString(l.name), 17, R)
      ]),
      _: 2
    }, 1040, ["type"]))), 128))
  ]);
}
var O = Cd($, [["render", x]]);
export {
  O as default
};
//# sourceMappingURL=fs-files-format-1f49ba46-44IVPTST.js.map
